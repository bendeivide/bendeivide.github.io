<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ben D√™ivide</title>
    <link>http://bendeivide.github.io/</link>
      <atom:link href="http://bendeivide.github.io/index.xml" rel="self" type="application/rss+xml" />
    <description>Ben D√™ivide</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>pt</language><lastBuildDate>Thu, 22 Aug 2024 18:33:54 +0000</lastBuildDate>
    <image>
      <url>http://bendeivide.github.io/media/icon_hu96f6bd792b3af7602ac6cf7cef98b13a_17598_512x512_fill_lanczos_center_3.png</url>
      <title>Ben D√™ivide</title>
      <link>http://bendeivide.github.io/</link>
    </image>
    
    <item>
      <title>üìö Ensino normal 2024.2</title>
      <link>http://bendeivide.github.io/courses/profmat-probest/normal/</link>
      <pubDate>Thu, 22 Aug 2024 18:33:54 +0000</pubDate>
      <guid>http://bendeivide.github.io/courses/profmat-probest/normal/</guid>
      <description>&lt;p&gt;Curso de Probabilidade e Estat√≠stica oferecido no formato presencial
pela &lt;a href=&#34;http://ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt; ao Mestrado Profissional em Matem√°tica em Rede Nacional, campus Alto Paraopeba
(&lt;a href=&#34;http://ufsj.edu.br/cap/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CAP&lt;/a&gt;), Ouro Branco/MG.&lt;/p&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; 4 horas por semana, por 18 semanas&lt;/p&gt;
&lt;h2 id=&#34;apresenta√ß√£o&#34;&gt;Apresenta√ß√£o&lt;/h2&gt;
&lt;p&gt;A Natureza da estat√≠stica. Tratamento da informa√ß√£o. Distribui√ß√µes de frequ√™ncia e gr√°ficos. Medidas. Conceitos b√°sicos em probabilidade. Probabilidade condicional e Independ√™ncia. Vari√°veis aleat√≥rias discretas e cont√≠nuas. Fun√ß√£o de distribui√ß√£o acumulada. Esperan√ßa e vari√¢ncia de vari√°veis aleat√≥rias. Modelos Bernoulli, binomial e geom√©trico. Modelo uniforme e modelo normal. Distribui√ß√£o assint√≥tica da m√©dia amostral. Introdu√ß√£o √† infer√™ncia estat√≠stica.&lt;/p&gt;
&lt;h2 id=&#34;onde&#34;&gt;Onde?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;O curso √© ministrado na &lt;a href=&#34;http://ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;, campus Alto
Paraopeba (&lt;a href=&#34;http://ufsj.edu.br/cap/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CAP&lt;/a&gt;), para todos os cursos de
Engenharia do campus.&lt;/li&gt;
&lt;li&gt;Todas as nossas est√£o gravadas:
&lt;ul&gt;
&lt;li&gt;canal: &lt;a href=&#34;http://youtube.com/bendeivide&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://youtube.com/bendeivide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Per√≠odo:&lt;/li&gt;
&lt;li&gt;Aulas presenciais:
&lt;ul&gt;
&lt;li&gt;PROFMAT (Sala 211.5):
&lt;ul&gt;
&lt;li&gt;sexta-feira (13:15 - 17:00)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cronograma&#34;&gt;Cronograma&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/document/d/1lrP7gbx_QJzfU3baYVrPS8AGntcuZtOykbAs3vN7_qg/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cronograma de
aulas&lt;/a&gt;:
&lt;div class=&#34;responsive-wrap&#34;&gt;
      &lt;iframe src=&#34;https://docs.google.com/document/d/1lrP7gbx_QJzfU3baYVrPS8AGntcuZtOykbAs3vN7_qg/edit?usp=sharing&#34; frameborder=&#34;0&#34; width=&#34;960&#34; height=&#34;569&#34; allowfullscreen=&#34;true&#34; mozallowfullscreen=&#34;true&#34; webkitallowfullscreen=&#34;true&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;grupo-de-whatsapp&#34;&gt;Grupo de Whatsapp&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chat.whatsapp.com/JpJh324sF4T72GztNQ9BH6&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Link&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;demandas-e-notas&#34;&gt;Demandas e Notas&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/spreadsheets/d/1ER_H6_dx6yJUGQFBmng0Uouuhw9uMw--49RY9prEMp0/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Link&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;turma-para-cria√ß√£o-do-livro&#34;&gt;Turma para cria√ß√£o do livro&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/users/bendeivide/projects/2/views/1?layout=board&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Link&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- ## Preenchimento de dados para as avalia√ß√µes --&gt;
&lt;!-- - [Formul√°rio - Engenharia Mecatr√¥nica](https://forms.gle/78JF9nBMfuiBVQMk8) --&gt;
&lt;!-- - [Formul√°rio - Engenharia de Telecomunica√ß√µes](https://forms.gle/SyBkB5jqSJkv4eVm9) --&gt;
&lt;h2 id=&#34;ementa&#34;&gt;Ementa&lt;/h2&gt;
&lt;p&gt;N√≥s usamos a ementa contida nos Projetos Pedag√≥gicos de Cursos (PPCs) da
CAP/UFSJ&lt;/p&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-2&#34;&gt;
  &lt;summary&gt;Acesse a ementa do curso&lt;/summary&gt;
  &lt;p&gt;&lt;ol&gt;
&lt;li&gt;Conceitos b√°sicos: tipos de vari√°veis; distribui√ß√µes de frequ√™ncias&lt;/li&gt;
&lt;li&gt;Tabelas e gr√°ficos&lt;/li&gt;
&lt;li&gt;Medidas de posi√ß√£o&lt;/li&gt;
&lt;li&gt;Medidas de dispers√£o e desenho esquem√°tico (Box Plot)&lt;/li&gt;
&lt;li&gt;Probabilidade: conceitos b√°sicos, defini√ß√µes e propriedades&lt;/li&gt;
&lt;li&gt;Probabilidade condicional e independ√™ncia; teorema da probabilidade total e teorema de
Bayes&lt;/li&gt;
&lt;li&gt;Fun√ß√£o e distribui√ß√£o de probabilidade de uma vari√°vel aleat√≥ria discreta&lt;/li&gt;
&lt;li&gt;Caracter√≠sticas num√©ricas de uma vari√°vel aleat√≥ria discreta&lt;/li&gt;
&lt;li&gt;Fun√ß√£o densidade de probabilidade de uma vari√°vel aleat√≥ria cont√≠nua&lt;/li&gt;
&lt;li&gt;Caracter√≠sticas num√©ricas de uma vari√°vel aleat√≥ria cont√≠nua&lt;/li&gt;
&lt;li&gt;Principais modelos probabil√≠sticos discretos: uniforme, Bernoulli, binomial, geom√©trico,
Poisson e hipergeom√©trico&lt;/li&gt;
&lt;li&gt;Modelos probabil√≠sticos cont√≠nuos. Principais modelos probabil√≠sticos cont√≠nuos: uniforme,
exponencial e normal&lt;/li&gt;
&lt;li&gt;Teorema central do limite&lt;/li&gt;
&lt;li&gt;Aproxima√ß√£o da distribui√ß√£o binomial pela normal&lt;/li&gt;
&lt;li&gt;Introdu√ß√£o √† infer√™ncia estat√≠stica: primeiras ideias; propriedades dos estimadores&lt;/li&gt;
&lt;li&gt;Erro quadr√°tico m√©dio e erro absoluto de estima√ß√£o&lt;/li&gt;
&lt;li&gt;Estima√ß√£o pontual de par√¢metros: estimadores de momentos; estimadores de m√≠nimos
quadrados&lt;/li&gt;
&lt;li&gt;Estimadores de m√°xima verossimilhan√ßa&lt;/li&gt;
&lt;li&gt;Distribui√ß√£o amostral da m√©dia e propor√ß√£o; dimensionamento da amostra&lt;/li&gt;
&lt;li&gt;Intervalo de confian√ßa para a m√©dia populacional e para propor√ß√£o populacional&lt;/li&gt;
&lt;/ol&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;metodologia&#34;&gt;Metodologia&lt;/h2&gt;
&lt;p&gt;Nossas aulas ser√£o divididas de acordo com as 18 semanas de aula. As
aulas ser√£o expositivas e dialogadas com os alunos presencialmente ou
via portal did√°tico, constitu√≠da pela seguinte estrat√©gia de ensino:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Motiva√ß√£o:
&lt;ul&gt;
&lt;li&gt;Levantamento do conhecimento pr√©vio dos alunos em rela√ß√£o ao
tema;&lt;/li&gt;
&lt;li&gt;Apresenta√ß√£o de algumas situa√ß√µes pr√°ticas para a compreens√£o
dos t√≥picos a serem abordados;&lt;/li&gt;
&lt;li&gt;Exposi√ß√£o dos objetivos da aula.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Desenvolvimento:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o ao assunto abordado;&lt;/li&gt;
&lt;li&gt;Apresenta√ß√£o de defini√ß√µes e teoremas envolvidos;&lt;/li&gt;
&lt;li&gt;Aplica√ß√£o de softwares estat√≠sticos, quando for pertinente;&lt;/li&gt;
&lt;li&gt;Exemplos e aplica√ß√µes na estat√≠stica e √°rea do curso, do assunto
abordado.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-3&#34;&gt;
  &lt;summary&gt;Detalhamento da metodologia&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;As aulas seguir√£o um modelo de metodologia ativa baseado nas coreografias did√°ticas. Criaremos um cen√°rio em que o propagador de conhecimento tamb√©m seja produzido pelo aluno. Ele ser√° o protagonista. Desta forma, traremos m√©todos de aprendizagem do tipo &amp;ldquo;ensinar por aprender&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Nossas aulas estar√£o dispon√≠veis em &lt;a href=&#34;http://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://bendeivide.github.io/&lt;/a&gt;. Para os alunos matriculados na disciplina, tamb√©m ser√° poss√≠vel acompanhar o material pelo portal did√°tico. Nossas aulas ter√£o &lt;strong&gt;3 (quatro) horas semanais de aulas presenciais&lt;/strong&gt;, um total de 72h**.&lt;/p&gt;
&lt;p&gt;Faremos tamb√©m uma retramiss√£o do conte√∫do abordado durante a semana pelo canal do youtube &lt;a href=&#34;https://youtube.com/bendeivide&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://youtube.com/bendeivide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Iremos utilizar diversas ferramentas do google como os seus editores de textos, planilhas e apresentadores. Tamb√©m utilizaremos o &lt;em&gt;overlief&lt;/em&gt; para usu√°rios de LaTeX. Com a linguagem &lt;em&gt;R&lt;/em&gt;, mostraremos documentos din√¢micos, usando o &lt;em&gt;R Markdown&lt;/em&gt; e o &lt;em&gt;shiny&lt;/em&gt;, tamb√©m para o desenvolvimento de materiais did√°ticos, quanto para as atividades com os alunos. Todas essas ferramentas tecnol√≥gicas s√£o gratuitas e de f√°cil instala√ß√£o para os alunos, uma vez que dareremos todo o suporte, de forma que os alunos estejam capacitados a utilizar todas as ferramentas quando necess√°rio.&lt;/p&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;avaliacao&#34;&gt;Avalia√ß√£o&lt;/h2&gt;
&lt;!-- - [Planilha de Notas (Engenharia Mecatr√¥nica)](https://docs.google.com/spreadsheets/d/1JQ3csMP-eLpWs6yDhDjwb9JRCk85Z-Yv8OAYTt2FZ0s/edit?usp=sharing) --&gt;
&lt;!-- - [Planilha de Notas (Engenharia de Telecomunica√ß√µes)](https://docs.google.com/spreadsheets/d/1vZHMVeUxkG4iEzkhigjahRB2ahnJD2pepK7sGk68V1E/edit#gid=0) --&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-4&#34;&gt;
  &lt;summary&gt;Segue um detalhamento das nossas avalia√ß√µes&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;Ser√£o distribu√≠dos 100 pontos para atividades avaliativas da seguinte forma:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1¬™ Avalia√ß√£o - T√≥picos 1, 2, 3, 4, 5, 6 - 30 pontos;&lt;/li&gt;
&lt;li&gt;2¬™ Avalia√ß√£o - T√≥picos 7, 8, 9, 10, 11, 12, 13, 14 - 30 pontos;&lt;/li&gt;
&lt;li&gt;3¬™ Avalia√ß√£o - T√≥picos 15, 16, 17, 18, 19, 20 - 30 pontos;&lt;/li&gt;
&lt;li&gt;Trabalhos (Trabalhos, Exerc√≠cios, Testes R√°pidos e laudas de artigos) - 10 pontos.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Uma outra alternativa √© desenvolvermos ideias de modo que o alunos possa contribuir com a disciplina, tais como cria√ß√£o de materiais did√°ticos, v√≠deo-aulas, etc. O objetivo √© torn√°-lo parte integrante do conhecimento formado dentro de sala de aula. Dessa forma, com essa ades√£o, o aluno pode est√° isento das avalia√ß√µes, e ser avaliado de acordo com as entregas semanais do que for acordado entre aluno e professor. Este ponto aglutina diversos projetos, principalmente o &lt;a href=&#34;http://bendeivide.github.io/project/ProjAPE&#34;&gt;Aprender por ensinar&lt;/a&gt;, &lt;a href=&#34;http://bendeivide.github.io/project/LEEM&#34;&gt;LEEM&lt;/a&gt;, &lt;a href=&#34;http://bendeivide.github.io/project/statscience&#34;&gt;statscience&lt;/a&gt;, &lt;a href=&#34;http://bendeivide.github.io/project/RapidinhasR&#34;&gt;Rapidinhas do R&lt;/a&gt;, dentre outros que possam surgir no processo. Por fim, o aluno acordar√° um contrato de quais demandas devem ser entregues e quais os direitos e deveres a ele imposto, para que isso possa ser poss√≠vel mensurar a sua aprendizagem na disciplina.&lt;/p&gt;
&lt;p&gt;Para ser aprovado o aluno dever√° obter nota final maior ou igual a 60 pontos e n√£o poder√° faltar mais de 25% das aulas. O discente que n√£o for aprovado por nota poder√° fazer uma prova substitutiva, incluindo todo o conte√∫do da disciplina, que substituir√° a menor nota dentre as tr√™s avalia√ß√µes.&lt;/p&gt;
&lt;p&gt;O discente que perder alguma avalia√ß√£o te√≥rica poder√° fazer uma segunda chamada, desde que justificada via coordenadoria.&lt;/p&gt;
&lt;p&gt;A perda de alguma avalia√ß√£o dever√° ser apresentado justificativa. Observa√ß√µes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;S√£o considerados motivos justi√ßados para fins de segunda chamada da avalia√ß√£o te√≥rica: exerc√≠cio da fun√ß√£o de representante discente nos √≥rg√£os colegiados ou diretor de entidades estudantis, desde que  comprovado o comparecimento a reuni√£o e ou encontros pertinentes a representa√ß√£o no dia e hor√°rio da referida avalia√ß√£o  (art. 142 e 143 do Regimento Geral da UFSJ);  doen√ßa infecto-contagiosa ou interna√ß√£o, desde que esta esteja comprovada por meio atestado m√©dico, contendo CID;&lt;/li&gt;
&lt;li&gt;Motivos pessoais, profissionais e atestados de consultas m√©dicas eletivas n√£o s√£o considerados como motivos justificados para que o discente tenha direito a segunda chamada de avalia√ß√£o te√≥rica;&lt;/li&gt;
&lt;li&gt;Na educa√ß√£o superior n√£o h√° abono de faltas, exceto nos seguintes casos: discente reservistas - Lei 4375, 17 de agosto de 1964; discente designado para compor a Comiss√£o Nacional de Avalia√ß√£o da Educa√ß√£o Superior (CONAES) que, em decorr√™ncia da designa√ß√£o, tenha participado de reuni√µes da CONAES em hor√°rio coincidente com as atividades acad√™micas (\S 5¬∫ do Art. 7¬∫ da Lei 10.861/2004). Portanto, atestados m√©dicos, de trabalho e de outras atividades acad√™micas, n√£o d√£o direito a abono de falta, tais aus√™ncias s√£o enquadradas no limites  dos 25%, √â para tais imprevistos que o aluno pode se ausentar em 25% das aulas;&lt;/li&gt;
&lt;li&gt;Nos casos de portadores de afec√ß√µes  (Decreto-lei 1044, de 21 de outubro de 1969) e estado de gesta√ß√£o (Lei 6202, de 17 de abril de 1975), o discente poder√° solicitar Regime Especial  como compensa√ß√£o de aus√™ncia √†s aulas. Em ambos os casos, a solicita√ß√£o, acompanhada do respectivo atestado m√©dico, dever√° ser protocolada na DICON, no in√≠cio do impedimento.&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;!--
## Como as provas ser√£o corrigidas?

-   &lt;a href=&#34;http://bendeivide.github.io/media/critprova.pdf&#34; target=&#34;_blank&#34;&gt;Crit√©rios de
    avalia√ß√£o&lt;/a&gt;

## Contrato {#contrato}

Contrato feito para a disciplina de Estat√≠stica e Probabilidade, como
meio de substituir as avalia√ß√µes tradicionais para uso de metodologias
ativas como m√©todo de avalia√ß√£o. Paralelo a disciplina, o aluno ir√°
acompanhando as aulas e desenvolvendo demandas semanais, como forma de
ser avaliado na disciplina. Assim, ao inv√©s de provas pontuais, toda
semana o aluno √© acompanhado e avaliado pelo professor.

&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-6&#34;&gt;
  &lt;summary&gt;Abra o contrato aqui!&lt;/summary&gt;
  &lt;p&gt;&lt;iframe src=&#34;https://docs.google.com/forms/d/e/1FAIpQLSfoKiObYtvuvc8v5UAA84X5wT8ICVZy5Qjp-p5x6knn-N7HnQ/viewform?embedded=true&#34; width=&#34;640&#34; height=&#34;2354&#34; frameborder=&#34;0&#34; marginheight=&#34;0&#34; marginwidth=&#34;0&#34;&gt;Carregando‚Ä¶&lt;/iframe&gt;
&lt;/p&gt;
&lt;/details&gt;
--&gt;
&lt;h2 id=&#34;bibliografia-adotada-para-a-disciplina&#34;&gt;Bibliografia adotada para a disciplina&lt;/h2&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-7&#34;&gt;
  &lt;summary&gt;Bibliografia detalhada&lt;/summary&gt;
  &lt;p&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.google.com/url?sa=t&amp;amp;rct=j&amp;amp;q=&amp;amp;esrc=s&amp;amp;source=web&amp;amp;cd=&amp;amp;cad=rja&amp;amp;uact=8&amp;amp;ved=2ahUKEwidgbSv7eL9AhUjr5UCHVdMDeoQFnoECB4QAQ&amp;amp;url=https%3A%2F%2Fportaldaobmep.impa.br%2Fuploads%2Fmsg%2F5fpwf84eez8c0.pdf&amp;amp;usg=AOvVaw16LWD0EVg3xg3ZcRCRgJBj&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CARVALHO, P.C.P; MORGADO, A.C; WAGNER; FERNANDEZ, P. &lt;strong&gt;An√°lise combinat√≥ria e probabilidade&lt;/strong&gt;. SBM, 2005 (Cap√≠tulo 5).&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;BUSSABW, MORETTIN, W. &lt;strong&gt;Estat√≠stica b√°sica&lt;/strong&gt;. Editora Saraiva, 2010.&lt;/li&gt;
&lt;li&gt;PINHEIRO, R; CUNHA, G. &lt;strong&gt;Probabilidade e estat√≠stica&lt;/strong&gt;: quantificando a incerteza. Editora Campus, 2012.&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;matadotado&#34;&gt;Materiais adotado&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Livro &lt;a href=&#34;http://bendeivide.github.io/books/epprofmat/&#34;&gt;Estat√≠stica e Probabilidade: Um curso para o PROFMAT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Livro &lt;a href=&#34;http://bendeivide.github.io/book-epaec/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;EPAEC&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Sugest√µes e cr√≠ticas sobre o livro podem ser enviadas para &lt;a href=&#34;mailto:livrosdeben@gmail.com&#34;&gt;livrosdeben@gmail.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-8&#34;&gt;
  &lt;summary&gt;Materiais complementares&lt;/summary&gt;
  &lt;p&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/books/estbasica/&#34;&gt;Estat√≠stica B√°sica&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://leg.ufpr.br/~paulojus/estbas/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Estat√≠stica B√°sica (Departamento de Estat√≠stica, UFPR)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://github.com/talesjfer/Apostila-Estatistica-Aplicada&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Estat√≠stica Aplicada (Tales Jesus Fernandes, UFLA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://repositorio.ufla.br/bitstream/1/41344/1/Gex112_0.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Resumo do Livro Estat√≠stica B√°sica (Daniel Furtado, UFLA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://educapes.capes.gov.br/bitstream/capes/432207/2/Livro_Estatistica%20e%20Probabilidade.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Estat√≠stica e Probabilidade (UECE)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.editorapantanal.com.br/ebooks/2021/estimacao-estatistica/ebook.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Estima√ß√£o Estat√≠stica (Assis, et. al. 2021)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.unifal-mg.edu.br/bibliotecas/system/files/imce/EBR_Unifal.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Introdu√ß√£o √† estat√≠stica com R (Eric Ferreira &amp;amp; Marcelo Oliveira )&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.researchgate.net/publication/345985082_Introducao_a_Linguagem_R_seus_fundamentos_e_sua_pratica&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Introdu√ß√£o a linguagem R: seus fundamentos e pr√°ticas (Pedro Faria &amp;amp; Jo√£o Parga)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://livraria.ufersa.edu.br/wp-content/uploads/sites/165/2020/08/testes-de-hipoteses-estatisticas-edufersa.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Teste de Hip√≥teses Estat√≠sticas (Janilson Pinheiro de Assis et. al., UFERSA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://livraria.ufersa.edu.br/wp-content/uploads/sites/165/2019/07/Glossario-de-Estatistica_2019-1.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gloss√°rio de Estat√≠stica (Janilson Pinheiro de Assis, UFERSA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCoL7IgyKRZ6JBog71LnoGzA&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Canal Ci√™ncia Estat√≠stica&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://editorapantanal.com.br/ebooks/2023/probabilidade-e-estatistica-exercicios/ebook.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Estat√≠stica e Probabilidade: Exerc√≠cios (Assis et. al., 2023)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;metodologias-ativas&#34;&gt;Metodologias ativas&lt;/h2&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-9&#34;&gt;
  &lt;summary&gt;Aprender por ensinar&lt;/summary&gt;
  &lt;p&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://drive.google.com/file/d/1QCbtxb9vCOmgD4sxBjp8D8L8Z7GObiyg/view?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Modelo de Arquivo em power point&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://drive.google.com/file/d/1Q8-YQYC48ufVJqQVj3_7VEytSouk0u_n/view?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Resultado em v√≠deo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Os programas necess√°rios:
&lt;ul&gt;
&lt;li&gt;Editor de Slides: o MS Power Point (Instalado previamente no Windows); &lt;a href=&#34;https://www.libreoffice.org/download/download/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;LibreOffice&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Gravador de tela e de seu √°udio: &lt;a href=&#34;https://obsproject.com/pt-br/download&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OBS Studio&lt;/a&gt;
OBS.: Os programas s√£o esses. Qualquer d√∫vida, favor me procurar.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/YqMQix2P1oU&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-10&#34;&gt;
  &lt;summary&gt;Mapas Mentais&lt;/summary&gt;
  &lt;p&gt;&lt;ul&gt;
&lt;li&gt;D√∫vidas de como desenvolver, fa√ßa uso dos buscadores na internet, v√≠deo-aulas, etc. H√° muito material interessante na internet;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1tpHtGiDbpQ01zoxhOmQMa4Rqf4G6JbMO2c6EYdyrQCo/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Modelo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-11&#34;&gt;
  &lt;summary&gt;Resumo de Cornell&lt;/summary&gt;
  &lt;p&gt;&lt;ul&gt;
&lt;li&gt;D√∫vidas de como desenvolver, fa√ßa uso dos buscadores na internet, v√≠deo-aulas, etc. H√° muito material interessante na internet;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1XEc3IWEcn2Kx40XjaOGF-wKAXHseTrOqbcIibdOmod8/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Modelo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;como-estudar-e-aprender&#34;&gt;Como estudar e aprender&lt;/h2&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-12&#34;&gt;
  &lt;summary&gt;V√≠deo-aula do Prof. Pierluigi Piazzi (Youtube: Canal Glauco Copeck XYZ)&lt;/summary&gt;
  &lt;p&gt;&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/noXqEGIZak8&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;aulas&#34;&gt;Aulas&lt;/h2&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-13&#34;&gt;
  &lt;summary&gt;Aula 1 (16/08/2024)&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema: Apresenta√ß√£o do curso&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Apresenta√ß√£o:
&lt;a href=&#34;http://bendeivide.github.io/slides/profmat-est/s01/&#34; target=&#34;_blank&#34;&gt;Aula 01&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tempo: 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Podcast&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1FH1XO5fz9eRCClym4BMeivzPZzHbEkKWXvQidTjZC_A/edit?usp=sharing&#34; target=&#34;_blank&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Material para consulta&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/remoto/&#34; target=&#34;_blank&#34;&gt;Estat√≠stica e Probabilidade (Ensino Remoto)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/cursor/&#34; target=&#34;_blank&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/exerresolvidos/&#34; target=&#34;_blank&#34;&gt;Exerc√≠cios resolvidos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; V√≠deo-aula&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/TqnAYt89ElI&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;quiz&#34;&gt;Quiz&lt;/h2&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-14&#34;&gt;
  &lt;summary&gt;Quais as datas de avalia√ß√£o?&lt;/summary&gt;
  &lt;p&gt;Acessem: &lt;a href=&#34;#avaliacao&#34;&gt;Avalia√ß√£o&lt;/a&gt; e &lt;a href=&#34;#cronograma&#34;&gt;Cronograma&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-15&#34;&gt;
  &lt;summary&gt;Como acessar o material de apoio?&lt;/summary&gt;
  &lt;p&gt;&lt;ul&gt;
&lt;li&gt;Acessem: &lt;a href=&#34;#matadotado&#34;&gt;Livro EPAEC&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Sugest√µes e cr√≠ticas sobre o livro podem ser enviadas para &lt;a href=&#34;mailto:livrosdeben@gmail.com&#34;&gt;livrosdeben@gmail.com&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;</description>
    </item>
    
    <item>
      <title>R b√°sico 2024</title>
      <link>http://bendeivide.github.io/courses/ear/rbasico2024/</link>
      <pubDate>Tue, 20 Aug 2024 18:08:55 +0000</pubDate>
      <guid>http://bendeivide.github.io/courses/ear/rbasico2024/</guid>
      <description>&lt;details class=&#34;toc-inpage d-print-none d-xl-none &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Sum√°rio&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#inscricao&#34;&gt;&lt;i class=&#34;fa fa-link&#34;&gt;&lt;/i&gt; Inscri√ß√£o do curso&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#lancamento&#34;&gt;&lt;i class=&#34;fas fa-bullhorn&#34;&gt;&lt;/i&gt;  V√≠deo de lan√ßamento do curso&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#apoio&#34;&gt;&lt;i class=&#34;fas fa-brain&#34;&gt;&lt;/i&gt; Apoio&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#apresentacao&#34;&gt;&lt;i class=&#34;fas fa-chalkboard-teacher&#34;&gt;&lt;/i&gt;  Apresenta√ß√£o&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#topicos&#34;&gt;&lt;i class=&#34;fas fa-map&#34;&gt;&lt;/i&gt;  T√≥picos abordados&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#onde&#34;&gt;&lt;i class=&#34;fa fa-globe&#34;&gt;&lt;/i&gt; Onde?&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#cronograma&#34;&gt;&lt;i class=&#34;fas fa-calendar-alt&#34;&gt;&lt;/i&gt; Calend√°rio e Cronograma&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#ementa&#34;&gt;&lt;i class=&#34;fab fa-readme&#34;&gt;&lt;/i&gt; Ementa&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#livro&#34;&gt;&lt;i class=&#34;fas fa-swatchbook&#34;&gt;&lt;/i&gt; Livro de apoio&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#aulas&#34;&gt;&lt;i class=&#34;fab fa-r-project&#34;&gt;&lt;/i&gt; Aulas&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#quiz&#34;&gt;&lt;i class=&#34;fas fa-question&#34;&gt;&lt;/i&gt; Quiz&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /media/EAR-rbasico_hueba3d5b284ff6994ab31d69d1f05f736_141641_188d08caec96117638ba2ef63a4b019c.webp 400w,
               /media/EAR-rbasico_hueba3d5b284ff6994ab31d69d1f05f736_141641_a1be7757ea23c2646a31c1a744ffd85b.webp 760w,
               /media/EAR-rbasico_hueba3d5b284ff6994ab31d69d1f05f736_141641_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/media/EAR-rbasico_hueba3d5b284ff6994ab31d69d1f05f736_141641_188d08caec96117638ba2ef63a4b019c.webp&#34;
               width=&#34;70%&#34;
               height=&#34;477&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;Programando o &lt;a href=&#34;http://r-project.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R&lt;/a&gt; em n√≠vel b√°sico.&lt;/p&gt;
&lt;h2 id=&#34;inscricao&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fa fa-link&#34;&gt;&lt;/i&gt; Inscri√ß√£o do curso&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i class=&#34;fas fa-calendar-day&#34;&gt;&lt;/i&gt; Per√≠odo de inscri√ß√£o: &lt;strong&gt;In√≠cio: 10/07/2024  T√©rmino: 31/07/2024&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;responsive-wrap&#34;&gt;
  &lt;iframe src=&#34;https://forms.gle/Pm1s7EbZT1w7vE5d7&#34; frameborder=&#34;0&#34; width=&#34;960&#34; height=&#34;569&#34; allowfullscreen=&#34;true&#34; mozallowfullscreen=&#34;true&#34; webkitallowfullscreen=&#34;true&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; 30 horas em 3 semanas&lt;/p&gt;
&lt;h2 id=&#34;lancamento&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-bullhorn&#34;&gt;&lt;/i&gt;  V√≠deo de lan√ßamento do curso&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i class=&#34;fas fa-calendar-day&#34;&gt;&lt;/i&gt; 23/07/2024 &lt;i class=&#34;fas fa-clock&#34;&gt;&lt;/i&gt; 19:30h&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/rbasico2024/lancamento/index.html&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;Slide&lt;/em&gt; de lan√ßamento&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;center&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/BqsgUG0-ZJw?si=cP5IfOXKeRdFAUw8&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/center&gt;
&lt;h2 id=&#34;apoio&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-brain&#34;&gt;&lt;/i&gt; Apoio&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/slides/ceac/index.html&#34; target=&#34;_blank&#34;&gt;CEAC/UFSJ: Clube de Engenharia Assistida por Computador&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i class=&#34;fab fa-instagram&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://www.instagram.com/ceac_ufsj/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;@ceac_ufsj&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ufsj.edu.br&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;row&#34;&gt;
  &lt;div class=&#34;col-md-8&#34; markdown=&#34;1&#34;&gt;

  
  
  
  
  
  
  
  
  
  
  
  
  
  &lt;figure  &gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
                 /media/ceac_huff29e3605d6b85d3aeb4c3653c4164c2_315234_e5074b408d397d4f6a09d600bc1b6e05.webp 400w,
                 /media/ceac_huff29e3605d6b85d3aeb4c3653c4164c2_315234_551fc2be89d7945bc6006d032b5e44eb.webp 760w,
                 /media/ceac_huff29e3605d6b85d3aeb4c3653c4164c2_315234_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
                 src=&#34;http://bendeivide.github.io/media/ceac_huff29e3605d6b85d3aeb4c3653c4164c2_315234_e5074b408d397d4f6a09d600bc1b6e05.webp&#34;
                 width=&#34;60%&#34;
                 height=&#34;760&#34;
                 loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/figure&gt;
  &lt;/div&gt;
  &lt;div class=&#34;col-md-4&#34; markdown=&#34;1&#34;&gt;
  &lt;!-- ![Alt Text](../img/folder/blah.jpg) --&gt;

  
  
  
  
  
  
  
  
  
  
  
  
  
  &lt;figure  &gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
                 /media/ufsj_hu0fad3e7eab8c031f3ba987f70f8f0451_36447_f00385046409acb6ee4a2d0a9c771416.webp 400w,
                 /media/ufsj_hu0fad3e7eab8c031f3ba987f70f8f0451_36447_18526b9828b1e068de546d8c5d87b77b.webp 760w,
                 /media/ufsj_hu0fad3e7eab8c031f3ba987f70f8f0451_36447_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
                 src=&#34;http://bendeivide.github.io/media/ufsj_hu0fad3e7eab8c031f3ba987f70f8f0451_36447_f00385046409acb6ee4a2d0a9c771416.webp&#34;
                 width=&#34;100%&#34;
                 height=&#34;433&#34;
                 loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/figure&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;apresentacao&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-chalkboard-teacher&#34;&gt;&lt;/i&gt;  Apresenta√ß√£o&lt;/h2&gt;
&lt;center&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/5kGEdVBFLtQ?si=69FyDjTjoALR0zsu&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/center&gt;
&lt;p&gt;A cole√ß√£o &lt;em&gt;Estudando o ambiente R&lt;/em&gt; √© fruto de cursos ministrados sobre a linguagem &lt;a href=&#34;http://r-project.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R&lt;/a&gt;, bem como colabora√ß√µes e estudos ao longo dos anos. Em 2005, quando ingressei no curso de Engenharia Agron√¥mica, fiquei fascinado com a disciplina de Estat√≠stica no segundo semestre do ano corrente. Na sequ√™ncia, obtive o primeiro contato com o ambiente &lt;a href=&#34;http://r-project.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R&lt;/a&gt; pouco mais de 9 anos de seu lan√ßamento e redistribui√ß√£o. Naquela √©poca, haviam poucos materiais em l√≠ngua portuguesa. Por√©m, foi o suficiente para eu entender que estava diante de uma grande ferramenta computacional e estat√≠stica, necess√°ria para a compreens√£o. √Ä √©poca, inclusive, at√© sonhei em chegar neste dia, qua seja, o dia do lan√ßamento de uma obra como esta.&lt;/p&gt;
&lt;p&gt;Hoje, no ano de 2024, usu√°rio h√° mais de 18 anos dessa linguagem, percebi um sentimento inquietante somente na posi√ß√£o de usu√°rio do &lt;a href=&#34;http://r-project.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R&lt;/a&gt;. Eu posso reafirmar que uma estrat√©gia muito poderosa de ensino/aprendizagem √© a t√©cnica &lt;em&gt;aprender por ensinar&lt;/em&gt;, particularmente, porque al√©m de democratizar o conhecimento  perpetuando-o, aprendo mais e mais sobre determinado assunto. Dessa forma, lotado no Departamento de Estat√≠stica, F√≠sica e Matem√°tica &lt;a href=&#34;http://defim.ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DEFIM&lt;/a&gt; desde 2018, campus Alto Paraopeba, pela Universidade Federal de S√£o Jo√£o del-Rei (&lt;a href=&#34;https://www.ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;), comecei a planejar diversos &lt;a href=&#34;http://bendeivide.github.io/cursor/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cursos sobre a linguagem R&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Com o apoio do Centro Acad√™mico de Engenharia de Telecomunica√ß√µes (Catel/UFSJ), iniciei, no ano de 2021, o primeiro curso para o m√≥dulo B√°sico, e na sequ√™ncia foi realizado o m√≥dulo intermedi√°rio. Todos no formato &lt;em&gt;online&lt;/em&gt;, para que o conhecimento ultrapassasse as fronteiras da Universidade. At√© o presente momento, o m√≥dulo avan√ßado que seria o √∫ltimo curso, est√° em fase de desenvolvimento. A ideia deu tanto certo, que apesar do momento de pandemia e situa√ß√£o dif√≠cil para o mundo, foi realizada mais de 1.000 inscri√ß√µes, tanto de alunos da UFSJ, como tamb√©m de alunos da Am√©rica do Sul, Mo√ßambique, Angola, dentre outros pa√≠ses e outros estados do Brasil. Tudo isso, realizado de forma gratuita e com emiss√£o de certificados emitidos pelo Catel. Hoje, temos a parceria do &lt;a href=&#34;https://www.instagram.com/ceac_ufsj/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CEAC&lt;/a&gt; (Clube de Engenharia Assistida por Computador/UFSJ) para o suporte nos cursos do EAR.&lt;/p&gt;
&lt;p&gt;Os cursos ministrados sobre o ambiente &lt;a href=&#34;http://r-project.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R&lt;/a&gt; tentaram de forma simplificada, apresentar as ideias b√°sicas sobre a sintaxe e sem√¢ntica da linguagem, sendo criado tr√™s m√≥dulos, o n√≠vel b√°sico, intermedi√°rio e avan√ßado. No primeiro contato do aluno com o &lt;a href=&#34;http://r-project.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R&lt;/a&gt; nos cursos, n√£o se aborda situa√ß√µes complexas, mas sim, o fundamental para uso como ferramenta b√°sica. √Ä medida que a aprendizagem nos m√≥dulos se avan√ßa, os problemas se tornam mais complexos, e a introdu√ß√£o de ferramentas tecnol√≥gicas √© utilizada para auxiliar os alunos no entendimento sobre a linguagem. O resultado dessa experi√™ncia ficar√° registrada, em forma de conhecimento, na cole√ß√£o apresentada a seguir.&lt;/p&gt;
&lt;p&gt;A cole√ß√£o &lt;em&gt;Estudando o ambiente &lt;a href=&#34;http://r-project.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R&lt;/a&gt;&lt;/em&gt; apresenta tr√™s &lt;em&gt;Volumes&lt;/em&gt; iniciais, intitulados por:  o &lt;em&gt;R b√°sico&lt;/em&gt; (&lt;em&gt;Volume I&lt;/em&gt;), o &lt;em&gt;R intermedi√°rio&lt;/em&gt;  (&lt;em&gt;Volume II&lt;/em&gt;) e o &lt;em&gt;R avan√ßado&lt;/em&gt; (&lt;em&gt;Volume III&lt;/em&gt;). Fazendo a alus√£o aos tr√™s livros iniciais sobre a linguagem &lt;code&gt;S&lt;/code&gt; desenvolvidos por John Chambers e colaboradores, √© realizado uma explana√ß√£o desde assuntos mais simples at√© no√ß√µes mais complexas sobre o &lt;a href=&#34;http://r-project.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R&lt;/a&gt;, restringindo apenas a sintaxe e sem√¢ntica da linguagem. Os &lt;em&gt;Volumes&lt;/em&gt; subsequentes ser√£o destinados a &lt;em&gt;Documenta√ß√µes no R&lt;/em&gt;, &lt;em&gt;Desenvolvimento de pacote &lt;a href=&#34;http://r-project.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R&lt;/a&gt;&lt;/em&gt;, &lt;em&gt;Gr√°ficos&lt;/em&gt;, &lt;em&gt;Banco de dados&lt;/em&gt;, &lt;em&gt;Interface Gr√°fica ao Usu√°rio&lt;/em&gt;, &lt;em&gt;Interface R com outras linguagens&lt;/em&gt;, &lt;em&gt;Programa√ß√£o Orientada a Objetos no R&lt;/em&gt;, &lt;em&gt;Fun√ß√µes do pacote &lt;a href=&#34;https://www.r-project.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;base&lt;/a&gt;&lt;/em&gt;, dentre outros.&lt;/p&gt;
&lt;p&gt;Tentando engajar os alunos para que se tornem protagonistas do processo de aprendizagem, e agora colegas de trabalho, tenho a parceria no &lt;em&gt;Volume I&lt;/em&gt;, de &lt;a href=&#34;https://digoarthur.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Diego Arthur&lt;/a&gt;, um ex-orientando, e agora um profissional que tenta se superar a cada desafio e assunto estudado. Por isso, tenho a imensa satisfa√ß√£o de ter a sua contribui√ß√£o e experi√™ncia neste material.&lt;/p&gt;
&lt;p&gt;Por fim, espero que este primeiro &lt;em&gt;curso&lt;/em&gt; sirva de refer√™ncia aos passos iniciais nessa ferramenta t√£o importante para a an√°lise de dados.&lt;/p&gt;
&lt;h2 id=&#34;topicos&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-map&#34;&gt;&lt;/i&gt;  T√≥picos abordados&lt;/h2&gt;
&lt;p&gt;Instala√ß√£o do R e RStudio. Princ√≠pios do R. Sintaxe e sem√¢ntica.&lt;/p&gt;
&lt;h2 id=&#34;onde&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fa fa-globe&#34;&gt;&lt;/i&gt; Onde?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i class=&#34;fas fa-route&#34;&gt;&lt;/i&gt; O curso ser√° ministrado na &lt;a href=&#34;http://ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;, campus Alto
Paraopeba (&lt;a href=&#34;http://ufsj.edu.br/cap/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CAP&lt;/a&gt;), no formato &lt;em&gt;online&lt;/em&gt; via Youtube, pelo canal &lt;a href=&#34;http://youtube.com/bendeivide&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://youtube.com/bendeivide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;i class=&#34;fas fa-calendar-day&#34;&gt;&lt;/i&gt; Data: &lt;strong&gt;In√≠cio: 01/08/2024  T√©rmino: 30/09/2024&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cronograma&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-calendar-alt&#34;&gt;&lt;/i&gt; Calend√°rio e Cronograma&lt;/h2&gt;
&lt;img src=&#34;http://bendeivide.github.io/pt/courses/EAR/Rbasico2024_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;
&lt;h2 id=&#34;ementa&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fab fa-readme&#34;&gt;&lt;/i&gt; Ementa&lt;/h2&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-7&#34;&gt;
  &lt;summary&gt;Acesse a ementa do curso&lt;/summary&gt;
  &lt;p&gt;&lt;ol start=&#34;0&#34;&gt;
&lt;li&gt;Apresenta√ß√£o do Curso&lt;/li&gt;
&lt;li&gt;Instala√ß√£o do R e do RStudio&lt;/li&gt;
&lt;li&gt;Passos iniciais para a utiliza√ß√£o do R e do RStudio&lt;/li&gt;
&lt;li&gt;Hist√≥ria do R&lt;/li&gt;
&lt;li&gt;Como o R trabalha&lt;/li&gt;
&lt;li&gt;Comandos no R e Ambiente Global&lt;/li&gt;
&lt;li&gt;Arquivos .RData e .Rhistory&lt;/li&gt;
&lt;li&gt;Criando e salvando um Script&lt;/li&gt;
&lt;li&gt;Objetos&lt;/li&gt;
&lt;li&gt;Vetores&lt;/li&gt;
&lt;li&gt;Matrizes&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Arrays&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Listas&lt;/li&gt;
&lt;li&gt;Quadro de dados (&lt;em&gt;Data frames&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;Importando dados&lt;/li&gt;
&lt;li&gt;Fun√ß√µes&lt;/li&gt;
&lt;li&gt;Estruturas de controle&lt;/li&gt;
&lt;li&gt;Como criar fun√ß√µes&lt;/li&gt;
&lt;li&gt;Boas pr√°ticas de como escrever um c√≥digo&lt;/li&gt;
&lt;li&gt;Pacotes&lt;/li&gt;
&lt;li&gt;Carregando e Anexando pacotes&lt;/li&gt;
&lt;li&gt;&lt;em&gt;NAMESPACE&lt;/em&gt; de um pacote&lt;/li&gt;
&lt;li&gt;Quando devemos utilizar os operadores &lt;code&gt;::&lt;/code&gt; e &lt;code&gt;:::&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Ambientes e Caminhos de busca&lt;/li&gt;
&lt;li&gt;Interface com outras linguagens&lt;/li&gt;
&lt;li&gt;Considera√ß√µes e Prepara√ß√£o para o curso &lt;strong&gt;R intermedi√°rio&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;livro&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-swatchbook&#34;&gt;&lt;/i&gt; Livro de apoio&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Vers√£o F√≠sica:
&lt;ul&gt;
&lt;li&gt;
  &lt;i class=&#34;fab fa-whatsapp  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://api.whatsapp.com/send?phone=5584998196064&amp;amp;text=Ol%C3%A1!%20Sou%20Allanna%20Lopes%2C%20representante%20comercial%20do%20Livro%20%22R%20b%C3%A1sico%22.%20Antes%20de%20enviar%20a%20mensagem%20para%20mais%20detalhes%2C%20eu%20consigo%20enviar%20o%20livro%20por%20R%24%20150%2C00%20para%20qualquer%20local%20do%20Brasil!&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Allanna Lopes (Rep. comercial - venda direta)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://shopee.com.br/product/880978340/20053618529/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Shopee&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://produto.mercadolivre.com.br/MLB-2838245818-livro-r-basico-capa-simples-colorido-e-impresso-interna-em-preto-e-branco-_JM&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Mercado livre&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fab fa-amazon  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://www.amazon.com/dp/6500531914&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Amazon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Vers√£o digital:
&lt;ul&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-file-pdf  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://github.com/bendeivide/book-eambr01/raw/main/docs/book-eambr01.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R b√°sico (PDF)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://bendeivide.github.io/book-eambr01/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R b√°sico (Bookdown)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;aulas&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fab fa-r-project&#34;&gt;&lt;/i&gt; Aulas&lt;/h2&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-12&#34;&gt;
  &lt;summary&gt;&amp;#x1f4d8; Aula 00 - Apresenta√ß√£o do curso&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Apresenta√ß√£o do curso&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/rbasico2024/slide00/index.html&#34; target=&#34;_blank&#34;&gt;Aula 00&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 30 minutos&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;iframe style=&#34;border-radius:12px&#34; src=&#34;https://open.spotify.com/embed/episode/5CFSs00yZ1FoVDx3BELf07?utm_source=generator&#34; width=&#34;100%&#34; height=&#34;352&#34; frameBorder=&#34;0&#34; allowfullscreen=&#34;&#34; allow=&#34;autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture&#34; loading=&#34;lazy&#34;&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1sVrVqx2X43KEHsLGfN25mj5og1zWJ3LLIdmLgnjr9VI/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/books/eambr01/&#34;&gt;Livro: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/books/eambr01sol/&#34;&gt;Livro: R b√°sico - manual de solu√ß√µes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;courses/cursor/&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Exerc√≠cios propostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aula&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/rG3M9E0rwfM?feature=share&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-13&#34;&gt;
  &lt;summary&gt;&amp;#x1f4d8; Aula 01 - Entendendo o curso EAR: R b√°sico&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Entendendo o curso EAR: R b√°sico&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/rbasico2024/slide01/index.html&#34; target=&#34;_blank&#34;&gt;Aula 01&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 50 minutos&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1IOUmC9iVxpggNW9Nil9v15aWguktIIiNWE3loXQEuag/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/books/eambr01/&#34;&gt;Livro: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;courses/cursor/&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Exerc√≠cios propostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aula&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/Gj5HJKnjKs0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-14&#34;&gt;
  &lt;summary&gt;&amp;#x1f4d8; Aula 02 - Passos iniciais para a utiliza√ß√£o do R e do RStudio&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Passos iniciais para a utiliza√ß√£o do R e do RStudio&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/rbasico2024/slide02/index.html&#34; target=&#34;_blank&#34;&gt;Aula 02&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 50 minutos&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1MrHvYDLFcNBij1_MIFn9a10LVr_s1VZw-OuaevOhoEY/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/books/eambr01/&#34;&gt;Livro: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;courses/cursor/&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Exerc√≠cios propostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aula&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/KryehEXgGF8&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-15&#34;&gt;
  &lt;summary&gt;&amp;#x1f4d8; Aula 03 - Hit√≥ria do R&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Hit√≥ria do R&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/rbasico2024/slide03/index.html&#34; target=&#34;_blank&#34;&gt;Aula 03&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 50 minutos&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1zgqd3gPGGEnVb7uBCpHsDgOB--xQCoTI3rY6idOhhFM/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/books/eambr01/&#34;&gt;Livro: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;courses/cursor/&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Exerc√≠cios propostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aula&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/qM6o2Xjyxms&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-16&#34;&gt;
  &lt;summary&gt;&amp;#x1f4d8; Aula 04 - Como o R trabalha?&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Como o R trabalha?&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/rbasico2024/slide04/index.html&#34; target=&#34;_blank&#34;&gt;Aula 04&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 50 minutos&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/rbasico2024/aula04.R&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;Script&lt;/em&gt; Aula 04&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1osFh2BWlda2vsLgkaw7Nem7JWCdAnePXGhhz3rJXAww/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/books/eambr01/&#34;&gt;Livro: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;courses/cursor/&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Exerc√≠cios propostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aula&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/yO8qKud3sIk&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-17&#34;&gt;
  &lt;summary&gt;&amp;#x1f4d8; Aula 05 - Comandos no R e Ambiente Global&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Comandos no R e Ambiente Global&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/rbasico2024/slide05/index.html&#34; target=&#34;_blank&#34;&gt;Aula 05&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 50 minutos&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1mdUF4Rxo2iSgxZdwD91dXLsaAQpAWPYEgqgIidAY-9k/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/books/eambr01/&#34;&gt;Livro: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;courses/cursor/&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Exerc√≠cios propostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aula&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/iI9Vx7dzOfo&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-18&#34;&gt;
  &lt;summary&gt;&amp;#x1f4d8; Aula 06 - Arquivos &lt;code&gt;.RData&lt;/code&gt; e &lt;code&gt;.Rhistory&lt;/code&gt;&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Arquivos &lt;code&gt;.RData&lt;/code&gt; e &lt;code&gt;.Rhistory&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/rbasico2024/slide06/index.html&#34; target=&#34;_blank&#34;&gt;Aula 06&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 50 minutos&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1Jqw5UpRYaHh_m7IeA5b-TLVglakioRKYFFZbHM27V1c/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/books/eambr01/&#34;&gt;Livro: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;courses/cursor/&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Exerc√≠cios propostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aula&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/8gYuZKXSwNg&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-19&#34;&gt;
  &lt;summary&gt;&amp;#x1f4d8; Aula 07 - Criando e salvando um &lt;em&gt;Script&lt;/em&gt;&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Criando e salvando um &lt;code&gt;Script&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/rbasico2024/slide07/index.html&#34; target=&#34;_blank&#34;&gt;Aula 07&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 50 minutos&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/16smQaqbwIcOHLTxugF-yb3adXWfBeFLKihdAwAWewvg/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/books/eambr01/&#34;&gt;Livro: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;courses/cursor/&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Exerc√≠cios propostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aula&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/jLI3ofN2EXI&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-20&#34;&gt;
  &lt;summary&gt;&amp;#x1f4d8; Aula 08 - Objetos e estrutura de dados&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Objetos&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/rbasico2024/slide08/index.html&#34; target=&#34;_blank&#34;&gt;Aula 08&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 50 minutos&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1Y0pmTS6lB5ya0Ayy95Zkl0W6h8Zu8o7B8chAxbp1nxI/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/books/eambr01/&#34;&gt;Livro: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;courses/cursor/&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Exerc√≠cios propostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aula&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-21&#34;&gt;
  &lt;summary&gt;&amp;#x1f4d8; Aula 09 - Vetores&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Vetores&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/rbasico2024/slide09/index.html&#34; target=&#34;_blank&#34;&gt;Aula 09&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 50 minutos&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1zWev7cGTy6pdcrb0FOeUVCloUFAgZSeRG4wj_yqnRN0/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/books/eambr01/&#34;&gt;Livro: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;courses/cursor/&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Exerc√≠cios propostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aula&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/guFBofLC3bs&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;quiz&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-question&#34;&gt;&lt;/i&gt; Quiz&lt;/h2&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-22&#34;&gt;
  &lt;summary&gt;&amp;#x1f4d6; Livro de apoio?&lt;/summary&gt;
  &lt;p&gt;&lt;ul&gt;
&lt;li&gt;Acesse: &lt;a href=&#34;https://bendeivide.github.io/book-eambr01/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://bendeivide.github.io/book-eambr01/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-23&#34;&gt;
  &lt;summary&gt;&amp;#x1f4c1; Curso anterior!&lt;/summary&gt;
  &lt;p&gt;&lt;ul&gt;
&lt;li&gt;Acesse: &lt;a href=&#34;http://bendeivide.github.io/cursor/nbasico#rwork&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://bendeivide.github.io/cursor/nbasico#rwork&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-24&#34;&gt;
  &lt;summary&gt;&amp;#x1f3ac; Playlist do Youtube (cursos anteriores)&lt;/summary&gt;
  &lt;p&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=_JqtU3X101E&amp;amp;list=PL-20Z1XFWKR0y0qZdOM0KKqb4oEbAMs7O&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R B√°sico 2021&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PL-20Z1XFWKR1DVL3ue5yhGBWcH-XUH67r&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R B√°sico 2023&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-25&#34;&gt;
  &lt;summary&gt;&amp;#x1f4da; Adquira o Livro f√≠sico &lt;strong&gt;R b√°sico&lt;/strong&gt;&lt;/summary&gt;
  &lt;p&gt;&lt;ul&gt;
&lt;li&gt;&lt;i class=&#34;fab fa-whatsapp  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://api.whatsapp.com/send?phone=5584998196064&amp;amp;text=Ol%C3%A1!%20Sou%20Allanna%20Lopes%2C%20representante%20comercial%20do%20Livro%20%22R%20b%C3%A1sico%22.%20Antes%20de%20enviar%20a%20mensagem%20para%20mais%20detalhes%2C%20eu%20consigo%20enviar%20o%20livro%20por%20R%24%20150%2C00%20para%20qualquer%20local%20do%20Brasil!&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Allanna Lopes (Rep. comercial - venda direta)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- - [Shopee](https://shopee.com.br/product/880978340/20053618529/) --&gt;
&lt;!-- - [Mercado livre](https://produto.mercadolivre.com.br/MLB-2838245818-livro-r-basico-capa-simples-colorido-e-impresso-interna-em-preto-e-branco-_JM) --&gt;
&lt;!-- - 
  &lt;i class=&#34;fab fa-amazon  pr-1 fa-fw&#34;&gt;&lt;/i&gt; [Amazon](https://www.amazon.com/dp/6500531914) --&gt;
&lt;/p&gt;
&lt;/details&gt;
</description>
    </item>
    
    <item>
      <title>üìö Ensino normal 2022.1</title>
      <link>http://bendeivide.github.io/courses/estcomp/normal/</link>
      <pubDate>Thu, 08 Aug 2024 21:55:49 +0000</pubDate>
      <guid>http://bendeivide.github.io/courses/estcomp/normal/</guid>
      <description>&lt;p&gt;Curso de Estat√≠stica Computacional oferecido no formato presencial pela &lt;a href=&#34;http://ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;, campus Alto Paraopeba (&lt;a href=&#34;http://ufsj.edu.br/cap/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CAP&lt;/a&gt;), Ouro Brnewleemanco/MG.&lt;/p&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; 4 horas por semana, por 18 semanas&lt;/p&gt;
&lt;h2 id=&#34;apresenta√ß√£o&#34;&gt;Apresenta√ß√£o&lt;/h2&gt;
&lt;p&gt;Em termos gerais, abordaremos: Introdu√ß√£o ao R; Probabilidade no R; Estat√≠stica B√°sica no R; Regress√£o linear; An√°lise de Vari√¢ncia; No√ß√µes de Simula√ß√£o; Otimiza√ß√£o.&lt;/p&gt;
&lt;/br&gt;
&lt;!-- 
  &lt;i class=&#34;fas fa-microphone-alt  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Podcast --&gt;
&lt;!-- Em desenvolvimento... --&gt;
&lt;h2 id=&#34;onde&#34;&gt;Onde?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;O curso √© ministrado na &lt;a href=&#34;http://ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;, campus Alto Paraopeba (&lt;a href=&#34;http://ufsj.edu.br/cap/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CAP&lt;/a&gt;), para todos os cursos de Engenharia do campus.&lt;/li&gt;
&lt;li&gt;Todas as nossas est√£o gravadas:
&lt;ul&gt;
&lt;li&gt;canal: &lt;a href=&#34;http://youtube.com/bendeivide&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://youtube.com/bendeivide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Per√≠odo: 21/03/2022 a 23/07/2022&lt;/li&gt;
&lt;li&gt;Aulas presenciais:
&lt;ul&gt;
&lt;li&gt;segunda-feira (17h05min. - 18h55min.)&lt;/li&gt;
&lt;li&gt;ter√ßa-feira (17h05min. - 18h55min.)&lt;/li&gt;
&lt;li&gt;quinta-feira (17h05min. - 18h55min.)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Retransmiss√£o pelo youtube:
&lt;ul&gt;
&lt;li&gt;quarta-feira 13h15min.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cronograma&#34;&gt;Cronograma e Fluxograma do curso&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/document/d/1C0UmfyMqwNmMowwhwHcvGVwiYHaS0L-uofsz894nUds/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cronograma de aulas&lt;/a&gt;:
&lt;div class=&#34;responsive-wrap&#34;&gt;
  &lt;iframe src=&#34;https://docs.google.com/document/d/1C0UmfyMqwNmMowwhwHcvGVwiYHaS0L-uofsz894nUds/edit?usp=sharing&#34; frameborder=&#34;0&#34; width=&#34;960&#34; height=&#34;569&#34; allowfullscreen=&#34;true&#34; mozallowfullscreen=&#34;true&#34; webkitallowfullscreen=&#34;true&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ementa&#34;&gt;Ementa&lt;/h2&gt;
&lt;p&gt;N√≥s usamos essa ementa pela primeira vez, para sentirmos nesse primeiro semestre a demanda necess√°ria&lt;/p&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-3&#34;&gt;
  &lt;summary&gt;Acesse a ementa do curso&lt;/summary&gt;
  &lt;p&gt;&lt;ol&gt;
&lt;li&gt;INTRODU√á√ÉO AO PROGRAMA R:
&lt;ul&gt;
&lt;li&gt;Sintaxe e sem√¢ntica&lt;/li&gt;
&lt;li&gt;Como o R trabalha&lt;/li&gt;
&lt;li&gt;Objetos&lt;/li&gt;
&lt;li&gt;Importa√ß√£o e manipula√ß√£o de dados&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DOCUMENTA√á√ïES EM R
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o ao Markdown e RMarkdown&lt;/li&gt;
&lt;li&gt;Como desenvolver relat√≥rios de seus scripts&lt;/li&gt;
&lt;li&gt;Sincronizando projetos RStudio com o GitHub&lt;/li&gt;
&lt;li&gt;Criando relat√≥rios para a disciplina Estat√≠stica Computacional&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;PROBABILIDADE NO R:
&lt;ul&gt;
&lt;li&gt;Conceitos b√°sicos sobre distribui√ß√µes de probabilidade&lt;/li&gt;
&lt;li&gt;Distribui√ß√µes de probabilidade:
&lt;ul&gt;
&lt;li&gt;Distribui√ß√£o Bernoulli&lt;/li&gt;
&lt;li&gt;Distribui√ß√£o Binomial&lt;/li&gt;
&lt;li&gt;Distribui√ß√µes Poisson&lt;/li&gt;
&lt;li&gt;Distribui√ß√£o Geom√©trica&lt;/li&gt;
&lt;li&gt;Distribui√ß√µes Negativa&lt;/li&gt;
&lt;li&gt;Distribui√ß√£o Multinomial&lt;/li&gt;
&lt;li&gt;Distribui√ß√£o Normal&lt;/li&gt;
&lt;li&gt;Distribui√ß√£o Uniforme&lt;/li&gt;
&lt;li&gt;Distribui√ß√£o Exponencial&lt;/li&gt;
&lt;li&gt;Distribui√ß√£o Gama&lt;/li&gt;
&lt;li&gt;Distribui√ß√£o Gumbel&lt;/li&gt;
&lt;li&gt;Distribui√ß√£o Weibull&lt;/li&gt;
&lt;li&gt;Distribui√ß√£o t de Student&lt;/li&gt;
&lt;li&gt;Distribui√ß√£o Qui-quadrado&lt;/li&gt;
&lt;li&gt;Distribui√ß√£o F&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Distribui√ß√µes amostrais&lt;/li&gt;
&lt;li&gt;Teorema do limite central&lt;/li&gt;
&lt;li&gt;Gerador de n√∫meros aleat√≥rios&lt;/li&gt;
&lt;li&gt;Aproxima√ß√µes de distribui√ß√µes&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;ESTAT√çSTICA B√ÅSICA NO R:
&lt;ul&gt;
&lt;li&gt;Estat√≠sticas descritivas&lt;/li&gt;
&lt;li&gt;Estima√ß√£o de par√¢metros:
&lt;ul&gt;
&lt;li&gt;Estima√ß√£o de par√¢metros&lt;/li&gt;
&lt;li&gt;Estima√ß√£o de M√©dias, Desvio Padr√£o e Vari√¢ncias&lt;/li&gt;
&lt;li&gt;Estima√ß√£o de Coeficientes de Varia√ß√£o&lt;/li&gt;
&lt;li&gt;Diferen√ßa entre duas M√©dias Independentes&lt;/li&gt;
&lt;li&gt;Estima√ß√£o da Diferen√ßa de Duas M√©dias em dados Emparelhados&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Testes de hip√≥teses:
&lt;ul&gt;
&lt;li&gt;Teste sobre M√©dias&lt;/li&gt;
&lt;li&gt;Teste sobre M√©dias de duas popula√ß√µes Emparelhadas&lt;/li&gt;
&lt;li&gt;Teste sobre M√©dias de duas popula√ß√µes independentes&lt;/li&gt;
&lt;li&gt;Teste de normalidade&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;REGRESS√ÉO LINEAR:
&lt;ul&gt;
&lt;li&gt;M√©todo dos Quadrados M√≠nimos&lt;/li&gt;
&lt;li&gt;Um exemplo de Regress√£o&lt;/li&gt;
&lt;li&gt;A fun√ß√£o &lt;code&gt;lm()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Sele√ß√£o de modelos&lt;/li&gt;
&lt;li&gt;Diagn√≥stico em Regress√£o Linear:
&lt;ul&gt;
&lt;li&gt;An√°lise de res√≠duos&lt;/li&gt;
&lt;li&gt;Influ√™ncia no espa√ßo de vari√°veis preditoras&lt;/li&gt;
&lt;li&gt;Influ√™ncia no vetor de estimativas dos par√¢metros&lt;/li&gt;
&lt;li&gt;Influ√™ncia no Vetor de Valores preditos&lt;/li&gt;
&lt;li&gt;Comandos no R&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;AN√ÅLISE DE VARI√ÇNCIA:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o a An√°lise de vari√¢ncia&lt;/li&gt;
&lt;li&gt;A fun√ß√£o &lt;code&gt;aov()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Delineamento experimentais&lt;/li&gt;
&lt;li&gt;Delineamento de tratamentos&lt;/li&gt;
&lt;li&gt;Modelos lineares com mais de um erro&lt;/li&gt;
&lt;li&gt;Modelos lineares multivariados&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;NO√á√ïES DE SIMULA√á√ÉO:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;M√©todo Monte Carlo&lt;/li&gt;
&lt;li&gt;M√©todos Bootstrap e jacknife&lt;/li&gt;
&lt;li&gt;M√©todos MCMC: Ideias b√°sicas&lt;/li&gt;
&lt;li&gt;Algoritmo de Metropolis-Hastings&lt;/li&gt;
&lt;li&gt;Amostrador de Gibbs&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OTIMIZA√á√ÉO:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Estima√ß√£o de fun√ß√µes&lt;/li&gt;
&lt;li&gt;Maximiza√ß√£o/Minimiza√ß√£o de fun√ß√µes&lt;/li&gt;
&lt;li&gt;M√©todo Newton-Raphson&lt;/li&gt;
&lt;li&gt;Quadratura num√©rica&lt;/li&gt;
&lt;li&gt;Paralelismo no R&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;metodologia&#34;&gt;Metodologia&lt;/h2&gt;
&lt;p&gt;Nossas aulas ser√£o divididas de acordo com as 18 semanas de aula.&lt;/p&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-4&#34;&gt;
  &lt;summary&gt;Detalhamento da metodologia&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;As aulas seguir√£o um modelo de metodologia ativa baseado nas coreografias did√°ticas. Criaremos um cen√°rio em que o propagador de conhecimento tamb√©m seja feito por parte do aluno. Ele ser√° o protagonista. Dessa forma, traremos m√©todos de aprendizagem do tipo &amp;ldquo;ensinar por aprender&amp;rdquo;, criaremos mapas mentais (&lt;a href=&#34;https://app.lucidchart.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://app.lucidchart.com&lt;/a&gt;) para nossas aulas, dentre outras t√©cnicas, para que nesse momento fique mais claro e objetivo o assunto proposto.&lt;/p&gt;
&lt;p&gt;Nossas aulas est√£o dispon√≠veis pelos canais do youtube (&lt;a href=&#34;http://youtube.com/bendeivide&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://youtube.com/bendeivide&lt;/a&gt;), portal did√°tico da disciplina, reposit√≥rio GitHub (&lt;a href=&#34;http://github.com/bendeivide&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/bendeivide&lt;/a&gt;), alocaremos nas p√°ginas (&lt;a href=&#34;http://ufsj.edu.br/bendeivide&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://ufsj.edu.br/bendeivide&lt;/a&gt; e &lt;a href=&#34;http://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://bendeivide.github.io/&lt;/a&gt;), facebook (Ben Deivide), e instagram (&lt;a href=&#34;https://www.instagram.com/bendeivide/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;@bendeivide&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Nossas aulas ter√£o &lt;strong&gt;4 (quatro) horas semanais de aulas&lt;/strong&gt;, e &lt;strong&gt;2 (duas) horas de aulas te√≥ricas&lt;/strong&gt; e &lt;strong&gt;2 (duas) horas de aulas pr√°ticas&lt;/strong&gt;, &lt;strong&gt;totalizando em 36h de aulas te√≥ricas e 36h de aulas pr√°ticas, um total de 72h&lt;/strong&gt;. Estas √∫ltimas ser√£o destinadas a d√∫vidas e resolu√ß√£o de exerc√≠cios. Usaremos tamb√©m o canal do youtube (lives), como tamb√©m o google Meet. Os hor√°rios das lives, acordaremos com os alunos, para que marquemos um hor√°rio em que grande maioria possa comparecer. De toda forma, gravaremos essas aulas, para que os demais possam tamb√©m assisti. Todas as demais informa√ß√µes ser√£o repassadas na primeira semana de aula.&lt;/p&gt;
&lt;p&gt;Irei utilizar diversas ferramentas do google como os seus editores de textos, planilhas e apresentadores. Tamb√©m utilizaremos o &lt;em&gt;overlief&lt;/em&gt; para usu√°rios de LaTeX. Com a linguagem &lt;em&gt;R&lt;/em&gt;, mostraremos documentos din√¢micos, usando o &lt;em&gt;R Markdown&lt;/em&gt; e o &lt;em&gt;shiny&lt;/em&gt;, tamb√©m para o desenvolvimento de materiais did√°ticos, quanto para as atividades com os alunos. Todas essas ferramentas tecnol√≥gicas s√£o gratuitas e de f√°cil instala√ß√£o para os alunos, uma vez que darei todo o suporte para os alunos, de forma que estejam capacitados a utilizar todas as ferramentas quando necess√°rio.&lt;/p&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;modelo-de-relat√≥rio-para-a-disciplina&#34;&gt;Modelo de Relat√≥rio para a disciplina&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/discestcomp/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Modelo de Relat√≥rio&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;avaliacao&#34;&gt;Avalia√ß√£o&lt;/h2&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-5&#34;&gt;
  &lt;summary&gt;Segue um detalhamento das nossas avalia√ß√µes&lt;/summary&gt;
  &lt;p&gt;&lt;ul&gt;
&lt;li&gt;1¬™ Avalia√ß√£o - Relat√≥rios referentes as Se√ß√µes 1, 2 e 3 - 30 pontos&lt;/li&gt;
&lt;li&gt;2¬™ Avalia√ß√£o - Relat√≥rios referentes as Se√ß√µes 4, 5 e 6 - 30 pontos&lt;/li&gt;
&lt;li&gt;3¬™ Avalia√ß√£o - Relat√≥rios referentes as Se√ß√µes 7 e 8 - 40 pontos&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A nota final do aluno ser√° dada pela soma das notas das atividades avaliativas divididas por 10. Para ser aprovado o aluno dever√° obter nota final maior ou igual a 60 pontos. O discente que n√£o for aprovado por nota poder√° fazer uma avalia√ß√£o substitutiva, incluindo todo o conte√∫do da disciplina, que substituir√° a menor nota dentre as tr√™s avalia√ß√µes. As datas das avalia√ß√µes s√£o informadas na primeira semana de aula.&lt;/p&gt;
&lt;p&gt;Na metodologia &lt;em&gt;aprender por ensinar&lt;/em&gt;, poderemos destinar atividades tamb√©m pedindo aos alunos que explanem sobre determinado tema espec√≠fico para determinada aula. Para estes, as atividades da semana ser√£o dispensadas, e atribu√≠das as notas para a devida atividade da semana, proporcional ao seu desempenho, de exposi√ß√£o do tema, material utilizado para a apresenta√ß√£o, e concord√¢ncia com o assunto estudado.&lt;/p&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;bibliografia-adotada-para-a-disciplina&#34;&gt;Bibliografia adotada para a disciplina&lt;/h2&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-6&#34;&gt;
  &lt;summary&gt;Bibliografia detalhada&lt;/summary&gt;
  &lt;p&gt;&lt;ul&gt;
&lt;li&gt;BATISTA, BDO; OLIVEIRA, DABJ; ALVES, HJP. &lt;strong&gt;Estudando o Ambiente R&lt;/strong&gt;. 1. ed. Ouro Branco: [sn], 2022. 1 v. Dispon√≠vel em &lt;a href=&#34;https://bendeivide.github.io/book-eambr01/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://bendeivide.github.io/book-eambr01/&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;BATISTA, BDO; OLIVEIRA, DABJ; ALVES, HJP. &lt;strong&gt;Estat√≠stica &amp;amp;  Probabilidade&lt;/strong&gt;: aplicadas √†s Engenharias e Ci√™ncias. 1. ed. Ouro Branco: [sn], 2022. Dispon√≠vel em &lt;a href=&#34;https://bendeivide.github.io/book-epaec/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://bendeivide.github.io/book-epaec/&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;BATISTA, BDO. &lt;strong&gt;Estat√≠stica Computacional&lt;/strong&gt;: aplicada √†s Engenharias e Ci√™ncias. 1. ed. Ouro Branco: [sn], 2022. Dispon√≠vel em &lt;a href=&#34;https://bendeivide.github.io/book-estcomp/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://bendeivide.github.io/book-estcomp/&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;FERREIRA, DF. &lt;strong&gt;Recursos Computacionais Utilizando R&lt;/strong&gt;: 1ed. Lavras: UFLA, 2013. Dispon√≠vel em:  &lt;a href=&#34;https://des.ufla.br/~danielff/meusarquivospdf/RRC0.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://des.ufla.br/~danielff/meusarquivospdf/RRC0.pdf&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;FERREIRA, DF. &lt;strong&gt;Estat√≠stica Computacional Utilizando R&lt;/strong&gt;: 1ed. Lavras: UFLA, 2014. Dispon√≠vel em:  &lt;a href=&#34;https://des.ufla.br/~danielff/meusarquivospdf/apeco.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://des.ufla.br/~danielff/meusarquivospdf/apeco.pdf&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;R DEVELOPMENT CORE TEAM. &lt;strong&gt;R&lt;/strong&gt;: A Language and Environment for Statistical Computing. Vienna, Austria, 2022. Dispon√≠vel em: &lt;a href=&#34;http://www.R-project.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.R-project.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;material-adotado&#34;&gt;Material adotado&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Livro refer√™ncia: &lt;a href=&#34;https://bendeivide.github.io/book-estcomp/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ESTCOMP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;metodologias-ativas&#34;&gt;Metodologias ativas&lt;/h2&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-7&#34;&gt;
  &lt;summary&gt;Aprender por ensinar&lt;/summary&gt;
  &lt;p&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://drive.google.com/file/d/1QCbtxb9vCOmgD4sxBjp8D8L8Z7GObiyg/view?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Modelo de Arquivo em power point&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://drive.google.com/file/d/1Q8-YQYC48ufVJqQVj3_7VEytSouk0u_n/view?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Resultado em v√≠deo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Os programas necess√°rios:
&lt;ul&gt;
&lt;li&gt;Editor de Slides: o MS Power Point (Instalado previamente no Windows); &lt;a href=&#34;https://www.libreoffice.org/download/download/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;LibreOffice&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Gravador de tela e de seu √°udio: &lt;a href=&#34;https://obsproject.com/pt-br/download&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OBS Studio&lt;/a&gt;
OBS.: Os programas s√£o esses. Qualquer d√∫vida, favor me procurar.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/YqMQix2P1oU&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-8&#34;&gt;
  &lt;summary&gt;Mapas Mentais&lt;/summary&gt;
  &lt;p&gt;&lt;ul&gt;
&lt;li&gt;D√∫vidas de como desenvolver, fa√ßa uso dos buscadores na internet, v√≠deo-aulas, etc. H√° muito material interessante na internet;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1tpHtGiDbpQ01zoxhOmQMa4Rqf4G6JbMO2c6EYdyrQCo/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Modelo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-9&#34;&gt;
  &lt;summary&gt;Resumo de Cornell&lt;/summary&gt;
  &lt;p&gt;&lt;ul&gt;
&lt;li&gt;D√∫vidas de como desenvolver, fa√ßa uso dos buscadores na internet, v√≠deo-aulas, etc. H√° muito material interessante na internet;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1XEc3IWEcn2Kx40XjaOGF-wKAXHseTrOqbcIibdOmod8/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Modelo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;aulas&#34;&gt;Aulas&lt;/h2&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-10&#34;&gt;
  &lt;summary&gt;Aula 01 (21/03 e 22/03)&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema: Apresenta√ß√£o do curso&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Apresenta√ß√£o: &lt;a href=&#34;http://bendeivide.github.io/slides/estcomp/s01/&#34;&gt;Aula 01&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tempo: 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Podcast&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/13wfRawoF89pchWJNjJPtql6uDbSwm3wNh3cAQM9GE3g/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Material de apoio&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/cursor/nbasico/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; (N√≠vel B√°sico)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/cursor/nintermediario/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; (N√≠vel Intermedi√°rio)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=HSwb29EvCv8&amp;amp;list=PL-20Z1XFWKR2GatfNSFOwfRvPreZ-nW0D&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Playlist da disciplina de Estat√≠stica e Probabilidade&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula de apresenta√ß√£o&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/gIcKgsOkdeI&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;br/&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-11&#34;&gt;
  &lt;summary&gt;Aula 02 (24/03)&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema: Introdu√ß√£o ao ambiente R&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Apresenta√ß√£o: &lt;a href=&#34;http://bendeivide.github.io/slides/estcomp/s02/&#34;&gt;Aula 02&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tempo: 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Podcast&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1tAp46QNuQ6K3eqTf3ZodgR8tjRIU7p1EP-Qa-gH5B4o/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Material de apoio&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/cursor/nbasico/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; (N√≠vel B√°sico)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/cursor/nintermediario/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; (N√≠vel Intermedi√°rio)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=HSwb29EvCv8&amp;amp;list=PL-20Z1XFWKR2GatfNSFOwfRvPreZ-nW0D&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Playlist da disciplina de Estat√≠stica e Probabilidade&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Introdu√ß√£o ao ambiente R&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/0Qv5_xzx0WQ&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;br/&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-12&#34;&gt;
  &lt;summary&gt;Aula 03 (28/03 e 29/03)&lt;/summary&gt;
  &lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema: Objetos em R&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-13&#34;&gt;
  &lt;summary&gt;Aula 04 (31/03)&lt;/summary&gt;
  &lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema: Pacotes&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-14&#34;&gt;
  &lt;summary&gt;Aula 05 (04-05/04)&lt;/summary&gt;
  &lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema: Importa√ß√£o e manipula√ß√£o de dados&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-15&#34;&gt;
  &lt;summary&gt;Aula 06 (07/04)&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema: Documenta√ß√µes em R (Vis√£o geral ao Markdown e RMarkdown)&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Apresenta√ß√£o: &lt;a href=&#34;http://bendeivide.github.io/slides/estcomp/s06/&#34;&gt;Aula 06&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tempo: 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Podcast&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Material de apoio&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/cursor/nbasico/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; (N√≠vel B√°sico)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/cursor/nintermediario/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; (N√≠vel Intermedi√°rio)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=HSwb29EvCv8&amp;amp;list=PL-20Z1XFWKR2GatfNSFOwfRvPreZ-nW0D&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Playlist da disciplina de Estat√≠stica e Probabilidade&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Vis√£o Geral ao Markdown e RMarkdown&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;br/&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-16&#34;&gt;
  &lt;summary&gt;Aula 07 (11-12/04)&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema: Introdu√ß√£o ao Markdown&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Apresenta√ß√£o: &lt;a href=&#34;http://bendeivide.github.io/slides/estcomp/s07/&#34;&gt;Aula 07&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tempo: 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Podcast&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1o7PuXcS-5Exy6xtZgBUueZatjwS2U6dWY-qs7zCGLXI/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Material de apoio&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/cursor/nbasico/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; (N√≠vel B√°sico)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/cursor/nintermediario/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; (N√≠vel Intermedi√°rio)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=HSwb29EvCv8&amp;amp;list=PL-20Z1XFWKR2GatfNSFOwfRvPreZ-nW0D&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Playlist da disciplina de Estat√≠stica e Probabilidade&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Introdu√ß√£o ao Markdown&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;br/&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-17&#34;&gt;
  &lt;summary&gt;Aula 08 (13/04)&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema: Introdu√ß√£o ao RMarkdown&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Apresenta√ß√£o: &lt;a href=&#34;http://bendeivide.github.io/slides/estcomp/s06/&#34;&gt;Aula 08&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tempo: 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Podcast&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Material de apoio&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/cursor/nbasico/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; (N√≠vel B√°sico)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/cursor/nintermediario/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; (N√≠vel Intermedi√°rio)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=HSwb29EvCv8&amp;amp;list=PL-20Z1XFWKR2GatfNSFOwfRvPreZ-nW0D&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Playlist da disciplina de Estat√≠stica e Probabilidade&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Introdu√ß√£o ao RMarkdown&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;br/&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-18&#34;&gt;
  &lt;summary&gt;Aula 09 (18-19/04)&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema: Sincronizando projetos RStudio com o GitHub&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Apresenta√ß√£o: &lt;a href=&#34;http://bendeivide.github.io/slides/estcomp/s06/&#34;&gt;Aula 09&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tempo: 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Podcast&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Material de apoio&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/cursor/nbasico/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; (N√≠vel B√°sico)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/cursor/nintermediario/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; (N√≠vel Intermedi√°rio)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=HSwb29EvCv8&amp;amp;list=PL-20Z1XFWKR2GatfNSFOwfRvPreZ-nW0D&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Playlist da disciplina de Estat√≠stica e Probabilidade&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-19&#34;&gt;
  &lt;summary&gt;Aula 10 (20/04)&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema: Conceitos b√°sicos sobre distribui√ß√µes de probabilidade&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Apresenta√ß√£o: &lt;a href=&#34;&#34;&gt;Aula 10&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tempo: 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Podcast&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Material de apoio&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/cursor/nbasico/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; (N√≠vel B√°sico)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/cursor/nintermediario/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; (N√≠vel Intermedi√°rio)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=HSwb29EvCv8&amp;amp;list=PL-20Z1XFWKR2GatfNSFOwfRvPreZ-nW0D&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Playlist da disciplina de Estat√≠stica e Probabilidade&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-20&#34;&gt;
  &lt;summary&gt;Aula 11 (25-26/04)&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema: Distribui√ß√µes de probabilidade&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Apresenta√ß√£o: &lt;a href=&#34;&#34;&gt;Aula 11&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tempo: 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Podcast&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Material de apoio&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/cursor/nbasico/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; (N√≠vel B√°sico)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/cursor/nintermediario/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; (N√≠vel Intermedi√°rio)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=HSwb29EvCv8&amp;amp;list=PL-20Z1XFWKR2GatfNSFOwfRvPreZ-nW0D&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Playlist da disciplina de Estat√≠stica e Probabilidade&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-21&#34;&gt;
  &lt;summary&gt;Aula 12 (28/04)&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema: Distribui√ß√µes amostrais e TLC&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Apresenta√ß√£o: &lt;a href=&#34;&#34;&gt;Aula 12&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tempo: 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Podcast&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Material de apoio&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/r-scripts/estcomp/aula13.R&#34; target=&#34;_blank&#34;&gt;&lt;p&gt;&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula12.R&lt;/p&gt;
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/cursor/nbasico/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; (N√≠vel B√°sico)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/cursor/nintermediario/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; (N√≠vel Intermedi√°rio)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=HSwb29EvCv8&amp;amp;list=PL-20Z1XFWKR2GatfNSFOwfRvPreZ-nW0D&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Playlist da disciplina de Estat√≠stica e Probabilidade&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-22&#34;&gt;
  &lt;summary&gt;Aula 13 (02-03/05)&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema: Aproxima√ß√µes de distribui√ß√µes e geradores de n√∫meros aleat√≥rios&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Apresenta√ß√£o: &lt;a href=&#34;&#34;&gt;Aula 13&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tempo: 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Podcast&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Material de apoio&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/r-scripts/estcomp/aula13.R&#34; target=&#34;_blank&#34;&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;i class=&amp;quot;fab fa-r-project  pr-1 fa-fw&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;  aula13.R  &lt;/code&gt;&lt;/pre&gt;
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/media/quadgauss.pdf&#34; target=&#34;_blank&#34;&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;i class=&amp;quot;fa fa-file-pdf  pr-1 fa-fw&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;  Quadratura Gauss-Legendre  &lt;/code&gt;&lt;/pre&gt;
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/media/pol_ort.pdf&#34; target=&#34;_blank&#34;&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;i class=&amp;quot;fa fa-file-pdf  pr-1 fa-fw&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;  Apresenta√ß√£o sobre Quadratura Gauss-Legendre  &lt;/code&gt;&lt;/pre&gt;
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/media/dis_ben.pdf&#34; target=&#34;_blank&#34;&gt;&lt;p&gt;&lt;i class=&#34;fa fa-file-pdf  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Disserta√ß√£o (Ben D√™ivide)&lt;/p&gt;
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/cursor/nbasico/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; (N√≠vel B√°sico)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/cursor/nintermediario/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; (N√≠vel Intermedi√°rio)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=HSwb29EvCv8&amp;amp;list=PL-20Z1XFWKR2GatfNSFOwfRvPreZ-nW0D&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Playlist da disciplina de Estat√≠stica e Probabilidade&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-23&#34;&gt;
  &lt;summary&gt;Aula 14 (05/05)&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema: Estat√≠stica B√°sica no R - Estat√≠stica descritiva&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Apresenta√ß√£o: &lt;a href=&#34;&#34;&gt;Aula 14&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tempo: 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Podcast&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Material de apoio&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/cursor/nbasico/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; (N√≠vel B√°sico)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/cursor/nintermediario/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; (N√≠vel Intermedi√°rio)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=HSwb29EvCv8&amp;amp;list=PL-20Z1XFWKR2GatfNSFOwfRvPreZ-nW0D&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Playlist da disciplina de Estat√≠stica e Probabilidade&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-24&#34;&gt;
  &lt;summary&gt;Aula 15 (09-10/05)&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema: Estat√≠stica B√°sica no R - Estima√ß√£o de par√¢metros&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Apresenta√ß√£o: &lt;a href=&#34;&#34;&gt;Aula 15&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tempo: 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Podcast&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Material de apoio&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/cursor/nbasico/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; (N√≠vel B√°sico)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/cursor/nintermediario/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; (N√≠vel Intermedi√°rio)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=HSwb29EvCv8&amp;amp;list=PL-20Z1XFWKR2GatfNSFOwfRvPreZ-nW0D&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Playlist da disciplina de Estat√≠stica e Probabilidade&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-25&#34;&gt;
  &lt;summary&gt;Aula 16 (09-10/05)&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema: Estat√≠stica B√°sica no R - Teste de hip√≥teses (Parte I)&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Apresenta√ß√£o: &lt;a href=&#34;&#34;&gt;Aula 16&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tempo: 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Podcast&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Material de apoio&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/cursor/nbasico/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; (N√≠vel B√°sico)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/cursor/nintermediario/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; (N√≠vel Intermedi√°rio)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=HSwb29EvCv8&amp;amp;list=PL-20Z1XFWKR2GatfNSFOwfRvPreZ-nW0D&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Playlist da disciplina de Estat√≠stica e Probabilidade&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-26&#34;&gt;
  &lt;summary&gt;Aula 17 (16-17/05)&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema: Estat√≠stica B√°sica no R - Teste de hip√≥teses (Parte II)&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Apresenta√ß√£o: &lt;a href=&#34;&#34;&gt;Aula 17&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tempo: 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Podcast&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Material de apoio&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/cursor/nbasico/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; (N√≠vel B√°sico)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/cursor/nintermediario/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; (N√≠vel Intermedi√°rio)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=HSwb29EvCv8&amp;amp;list=PL-20Z1XFWKR2GatfNSFOwfRvPreZ-nW0D&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Playlist da disciplina de Estat√≠stica e Probabilidade&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;quiz&#34;&gt;Quiz&lt;/h2&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-27&#34;&gt;
  &lt;summary&gt;Quais as datas de avalia√ß√£o?&lt;/summary&gt;
  &lt;p&gt;Acessem: &lt;a href=&#34;#avaliacao&#34;&gt;Avalia√ß√£o&lt;/a&gt; e &lt;a href=&#34;#cronograma&#34;&gt;Cronograma&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-28&#34;&gt;
  &lt;summary&gt;Onde ocorrer√£o as aulas no Youtube?&lt;/summary&gt;
  &lt;p&gt;Acesse o canal: &lt;a href=&#34;https://youtube.com/bendeivide&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://youtube.com/bendeivide&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;</description>
    </item>
    
    <item>
      <title>R b√°sico</title>
      <link>http://bendeivide.github.io/courses/ear/rbasico/</link>
      <pubDate>Tue, 30 Jul 2024 19:42:59 +0000</pubDate>
      <guid>http://bendeivide.github.io/courses/ear/rbasico/</guid>
      <description>&lt;details class=&#34;toc-inpage d-print-none d-xl-none &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Sum√°rio&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#lancamento&#34;&gt;&lt;i class=&#34;fas fa-bullhorn&#34;&gt;&lt;/i&gt;  V√≠deo de lan√ßamento do curso&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#apoio&#34;&gt;&lt;i class=&#34;fas fa-brain&#34;&gt;&lt;/i&gt; Apoio&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#apresentacao&#34;&gt;&lt;i class=&#34;fas fa-chalkboard-teacher&#34;&gt;&lt;/i&gt;  Apresenta√ß√£o&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#topicos&#34;&gt;&lt;i class=&#34;fas fa-map&#34;&gt;&lt;/i&gt;  T√≥picos abordados&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#onde&#34;&gt;&lt;i class=&#34;fa fa-globe&#34;&gt;&lt;/i&gt; Onde?&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#inscricao&#34;&gt;&lt;i class=&#34;fa fa-link&#34;&gt;&lt;/i&gt; Inscri√ß√£o do curso&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#cronograma&#34;&gt;&lt;i class=&#34;fas fa-calendar-alt&#34;&gt;&lt;/i&gt; Calend√°rio e Cronograma&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#ementa&#34;&gt;&lt;i class=&#34;fab fa-readme&#34;&gt;&lt;/i&gt; Ementa&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#livro&#34;&gt;&lt;i class=&#34;fas fa-swatchbook&#34;&gt;&lt;/i&gt; Livro de apoio&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#aulas&#34;&gt;&lt;i class=&#34;fab fa-r-project&#34;&gt;&lt;/i&gt; Aulas&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#quiz&#34;&gt;&lt;i class=&#34;fas fa-question&#34;&gt;&lt;/i&gt; Quiz&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /media/EAR-rbasico_hueba3d5b284ff6994ab31d69d1f05f736_141641_188d08caec96117638ba2ef63a4b019c.webp 400w,
               /media/EAR-rbasico_hueba3d5b284ff6994ab31d69d1f05f736_141641_a1be7757ea23c2646a31c1a744ffd85b.webp 760w,
               /media/EAR-rbasico_hueba3d5b284ff6994ab31d69d1f05f736_141641_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/media/EAR-rbasico_hueba3d5b284ff6994ab31d69d1f05f736_141641_188d08caec96117638ba2ef63a4b019c.webp&#34;
               width=&#34;70%&#34;
               height=&#34;477&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;Programando o &lt;a href=&#34;http://r-project.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R&lt;/a&gt; em n√≠vel b√°sico.&lt;/p&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; 30 horas em 3 semanas&lt;/p&gt;
&lt;h2 id=&#34;lancamento&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-bullhorn&#34;&gt;&lt;/i&gt;  V√≠deo de lan√ßamento do curso&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i class=&#34;fas fa-calendar-day&#34;&gt;&lt;/i&gt; 17/08/2023 &lt;i class=&#34;fas fa-clock&#34;&gt;&lt;/i&gt; 14h&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/rbasico/lancamento/index.html&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;Slide&lt;/em&gt; de lan√ßamento&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;center&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/4Bo-4qYMjTo&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/center&gt;
&lt;h2 id=&#34;apoio&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-brain&#34;&gt;&lt;/i&gt; Apoio&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/slides/ceac/index.html&#34; target=&#34;_blank&#34;&gt;CEAC/UFSJ: Clube de Engenharia Assistida por Computador&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i class=&#34;fab fa-instagram&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://www.instagram.com/ceac_ufsj/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;@ceac_ufsj&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ufsj.edu.br&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;row&#34;&gt;
  &lt;div class=&#34;col-md-8&#34; markdown=&#34;1&#34;&gt;

  
  
  
  
  
  
  
  
  
  
  
  
  
  &lt;figure  &gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
                 /media/ceac_huff29e3605d6b85d3aeb4c3653c4164c2_315234_e5074b408d397d4f6a09d600bc1b6e05.webp 400w,
                 /media/ceac_huff29e3605d6b85d3aeb4c3653c4164c2_315234_551fc2be89d7945bc6006d032b5e44eb.webp 760w,
                 /media/ceac_huff29e3605d6b85d3aeb4c3653c4164c2_315234_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
                 src=&#34;http://bendeivide.github.io/media/ceac_huff29e3605d6b85d3aeb4c3653c4164c2_315234_e5074b408d397d4f6a09d600bc1b6e05.webp&#34;
                 width=&#34;60%&#34;
                 height=&#34;760&#34;
                 loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/figure&gt;
  &lt;/div&gt;
  &lt;div class=&#34;col-md-4&#34; markdown=&#34;1&#34;&gt;
  &lt;!-- ![Alt Text](../img/folder/blah.jpg) --&gt;

  
  
  
  
  
  
  
  
  
  
  
  
  
  &lt;figure  &gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
                 /media/ufsj_hu0fad3e7eab8c031f3ba987f70f8f0451_36447_f00385046409acb6ee4a2d0a9c771416.webp 400w,
                 /media/ufsj_hu0fad3e7eab8c031f3ba987f70f8f0451_36447_18526b9828b1e068de546d8c5d87b77b.webp 760w,
                 /media/ufsj_hu0fad3e7eab8c031f3ba987f70f8f0451_36447_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
                 src=&#34;http://bendeivide.github.io/media/ufsj_hu0fad3e7eab8c031f3ba987f70f8f0451_36447_f00385046409acb6ee4a2d0a9c771416.webp&#34;
                 width=&#34;100%&#34;
                 height=&#34;433&#34;
                 loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/figure&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;apresentacao&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-chalkboard-teacher&#34;&gt;&lt;/i&gt;  Apresenta√ß√£o&lt;/h2&gt;
&lt;center&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/pJmhR9MumAs&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/center&gt;
&lt;p&gt;A cole√ß√£o &lt;em&gt;Estudando o ambiente R&lt;/em&gt; √© fruto de cursos ministrados sobre a linguagem &lt;a href=&#34;http://r-project.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R&lt;/a&gt;, bem como colabora√ß√µes e estudos ao longo dos anos. Em 2005, quando ingressei no curso de Engenharia Agron√¥mica, fiquei fascinado com a disciplina de Estat√≠stica no segundo semestre do ano corrente. Na sequ√™ncia, obtive o primeiro contato com o ambiente &lt;a href=&#34;http://r-project.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R&lt;/a&gt; pouco mais de 9 anos de seu lan√ßamento e redistribui√ß√£o. Naquela √©poca, haviam poucos materiais em l√≠ngua portuguesa. Por√©m, foi o suficiente para eu entender que estava diante de uma grande ferramenta computacional e estat√≠stica, necess√°ria para a compreens√£o. √Ä √©poca, inclusive, at√© sonhei em chegar neste dia, qua seja, o dia do lan√ßamento de uma obra como esta.&lt;/p&gt;
&lt;p&gt;Hoje, no ano de 2022, usu√°rio h√° mais de 16 anos dessa linguagem, percebi um sentimento inquietante somente na posi√ß√£o de usu√°rio do &lt;a href=&#34;http://r-project.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R&lt;/a&gt;. Eu posso reafirmar que uma estrat√©gia muito poderosa de ensino/aprendizagem √© a t√©cnica &lt;em&gt;aprender por ensinar&lt;/em&gt;, particularmente, porque al√©m de democratizar o conhecimento  perpetuando-o, aprendo mais e mais sobre determinado assunto. Dessa forma, lotado no Departamento de Estat√≠stica, F√≠sica e Matem√°tica &lt;a href=&#34;http://defim.ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DEFIM&lt;/a&gt; desde 2018, campus Alto Paraopeba, pela Universidade Federal de S√£o Jo√£o del-Rei (&lt;a href=&#34;https://www.ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;), comecei a planejar diversos &lt;a href=&#34;http://bendeivide.github.io/cursor/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cursos sobre a linguagem R&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Com o apoio do Centro Acad√™mico de Engenharia de Telecomunica√ß√µes (Catel/UFSJ), iniciei, no ano de 2021, o primeiro curso para o m√≥dulo B√°sico, e na sequ√™ncia foi realizado o m√≥dulo intermedi√°rio. Todos no formato &lt;em&gt;online&lt;/em&gt;, para que o conhecimento ultrapassasse as fronteiras da Universidade. At√© o presente momento, o m√≥dulo avan√ßado que seria o √∫ltimo curso, est√° em fase de desenvolvimento. A ideia deu tanto certo, que apesar do momento de pandemia e situa√ß√£o dif√≠cil para o mundo, foi realizada mais de 1.000 inscri√ß√µes, tanto de alunos da UFSJ, como tamb√©m de alunos da Am√©rica do Sul, Mo√ßambique, Angola, dentre outros pa√≠ses e outros estados do Brasil. Tudo isso, realizado de forma gratuita e com emiss√£o de certificados emitidos pelo Catel. Hoje, temos a parceria do &lt;a href=&#34;https://www.instagram.com/ceac_ufsj/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CEAC&lt;/a&gt; (Clube de Engenharia Assistida por Computador/UFSJ) para o suporte nos cursos do EAR.&lt;/p&gt;
&lt;p&gt;Os cursos ministrados sobre o ambiente &lt;a href=&#34;http://r-project.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R&lt;/a&gt; tentaram de forma simplificada, apresentar as ideias b√°sicas sobre a sintaxe e sem√¢ntica da linguagem, sendo criado tr√™s m√≥dulos, o n√≠vel b√°sico, intermedi√°rio e avan√ßado. No primeiro contato do aluno com o &lt;a href=&#34;http://r-project.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R&lt;/a&gt; nos cursos, n√£o se aborda situa√ß√µes complexas, mas sim, o fundamental para uso como ferramenta b√°sica. √Ä medida que a aprendizagem nos m√≥dulos se avan√ßa, os problemas se tornam mais complexos, e a introdu√ß√£o de ferramentas tecnol√≥gicas √© utilizada para auxiliar os alunos no entendimento sobre a linguagem. O resultado dessa experi√™ncia ficar√° registrada, em forma de conhecimento, na cole√ß√£o apresentada a seguir.&lt;/p&gt;
&lt;p&gt;A cole√ß√£o &lt;em&gt;Estudando o ambiente &lt;a href=&#34;http://r-project.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R&lt;/a&gt;&lt;/em&gt; apresenta tr√™s &lt;em&gt;Volumes&lt;/em&gt; iniciais, intitulados por:  o &lt;em&gt;R b√°sico&lt;/em&gt; (&lt;em&gt;Volume I&lt;/em&gt;), o &lt;em&gt;R intermedi√°rio&lt;/em&gt;  (&lt;em&gt;Volume II&lt;/em&gt;) e o &lt;em&gt;R avan√ßado&lt;/em&gt; (&lt;em&gt;Volume III&lt;/em&gt;). Fazendo a alus√£o aos tr√™s livros iniciais sobre a linguagem &lt;code&gt;S&lt;/code&gt; desenvolvidos por John Chambers e colaboradores, √© realizado uma explana√ß√£o desde assuntos mais simples at√© no√ß√µes mais complexas sobre o &lt;a href=&#34;http://r-project.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R&lt;/a&gt;, restringindo apenas a sintaxe e sem√¢ntica da linguagem. Os &lt;em&gt;Volumes&lt;/em&gt; subsequentes ser√£o destinados a &lt;em&gt;Documenta√ß√µes no R&lt;/em&gt;, &lt;em&gt;Desenvolvimento de pacote &lt;a href=&#34;http://r-project.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R&lt;/a&gt;&lt;/em&gt;, &lt;em&gt;Gr√°ficos&lt;/em&gt;, &lt;em&gt;Banco de dados&lt;/em&gt;, &lt;em&gt;Interface Gr√°fica ao Usu√°rio&lt;/em&gt;, &lt;em&gt;Interface R com outras linguagens&lt;/em&gt;, &lt;em&gt;Programa√ß√£o Orientada a Objetos no R&lt;/em&gt;, &lt;em&gt;Fun√ß√µes do pacote &lt;a href=&#34;https://www.r-project.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;base&lt;/a&gt;&lt;/em&gt;, dentre outros.&lt;/p&gt;
&lt;p&gt;Tentando engajar os alunos para que se tornem protagonistas do processo de aprendizagem, e agora colegas de trabalho, tenho a parceria no &lt;em&gt;Volume I&lt;/em&gt;, de &lt;a href=&#34;https://digoarthur.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Diego Arthur&lt;/a&gt;, um ex-orientando, e agora um profissional que tenta se superar a cada desafio e assunto estudado. Por isso, tenho a imensa satisfa√ß√£o de ter a sua contribui√ß√£o e experi√™ncia neste material.&lt;/p&gt;
&lt;p&gt;Por fim, espero que este primeiro &lt;em&gt;curso&lt;/em&gt; sirva de refer√™ncia aos passos iniciais nessa ferramenta t√£o importante para a an√°lise de dados.&lt;/p&gt;
&lt;h2 id=&#34;topicos&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-map&#34;&gt;&lt;/i&gt;  T√≥picos abordados&lt;/h2&gt;
&lt;p&gt;Instala√ß√£o do R e RStudio. Princ√≠pios do R. Sintaxe e sem√¢ntica.&lt;/p&gt;
&lt;h2 id=&#34;onde&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fa fa-globe&#34;&gt;&lt;/i&gt; Onde?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i class=&#34;fas fa-route&#34;&gt;&lt;/i&gt; O curso ser√° ministrado na &lt;a href=&#34;http://ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;, campus Alto
Paraopeba (&lt;a href=&#34;http://ufsj.edu.br/cap/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CAP&lt;/a&gt;), no formato &lt;em&gt;online&lt;/em&gt; via Youtube, pelo canal &lt;a href=&#34;http://youtube.com/bendeivide&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://youtube.com/bendeivide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;i class=&#34;fas fa-calendar-day&#34;&gt;&lt;/i&gt; Data: &lt;strong&gt;In√≠cio: 13/09/2023  T√©rmino: 29/09/2023&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;inscricao&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fa fa-link&#34;&gt;&lt;/i&gt; Inscri√ß√£o do curso&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i class=&#34;fas fa-calendar-day&#34;&gt;&lt;/i&gt; Per√≠odo de inscri√ß√£o: &lt;strong&gt;In√≠cio: 09/08/2023  T√©rmino: 12/09/2023&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;responsive-wrap&#34;&gt;
  &lt;iframe src=&#34;https://forms.gle/PMaMhtPRDoa6F1kF9&#34; frameborder=&#34;0&#34; width=&#34;960&#34; height=&#34;569&#34; allowfullscreen=&#34;true&#34; mozallowfullscreen=&#34;true&#34; webkitallowfullscreen=&#34;true&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h2 id=&#34;cronograma&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-calendar-alt&#34;&gt;&lt;/i&gt; Calend√°rio e Cronograma&lt;/h2&gt;
&lt;img src=&#34;http://bendeivide.github.io/pt/courses/EAR/Rbasico_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;
&lt;h2 id=&#34;ementa&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fab fa-readme&#34;&gt;&lt;/i&gt; Ementa&lt;/h2&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-7&#34;&gt;
  &lt;summary&gt;Acesse a ementa do curso&lt;/summary&gt;
  &lt;p&gt;&lt;ol start=&#34;0&#34;&gt;
&lt;li&gt;Apresenta√ß√£o do Curso&lt;/li&gt;
&lt;li&gt;Instala√ß√£o do R e do RStudio&lt;/li&gt;
&lt;li&gt;Passos iniciais para a utiliza√ß√£o do R e do RStudio&lt;/li&gt;
&lt;li&gt;Hist√≥ria do R&lt;/li&gt;
&lt;li&gt;Como o R trabalha&lt;/li&gt;
&lt;li&gt;Comandos no R e Ambiente Global&lt;/li&gt;
&lt;li&gt;Arquivos .RData e .Rhistory&lt;/li&gt;
&lt;li&gt;Criando e salvando um Script&lt;/li&gt;
&lt;li&gt;Objetos&lt;/li&gt;
&lt;li&gt;Vetores&lt;/li&gt;
&lt;li&gt;Matrizes&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Arrays&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Listas&lt;/li&gt;
&lt;li&gt;Quadro de dados (&lt;em&gt;Data frames&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;Importando dados&lt;/li&gt;
&lt;li&gt;Fun√ß√µes&lt;/li&gt;
&lt;li&gt;Estruturas de controle&lt;/li&gt;
&lt;li&gt;Como criar fun√ß√µes&lt;/li&gt;
&lt;li&gt;Boas pr√°ticas de como escrever um c√≥digo&lt;/li&gt;
&lt;li&gt;Pacotes&lt;/li&gt;
&lt;li&gt;Carregando e Anexando pacotes&lt;/li&gt;
&lt;li&gt;&lt;em&gt;NAMESPACE&lt;/em&gt; de um pacote&lt;/li&gt;
&lt;li&gt;Quando devemos utilizar os operadores &lt;code&gt;::&lt;/code&gt; e &lt;code&gt;:::&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Ambientes e Caminhos de busca&lt;/li&gt;
&lt;li&gt;Interface com outras linguagens&lt;/li&gt;
&lt;li&gt;Considera√ß√µes e Prepara√ß√£o para o curso &lt;strong&gt;R intermedi√°rio&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;livro&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-swatchbook&#34;&gt;&lt;/i&gt; Livro de apoio&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Vers√£o F√≠sica:
&lt;ul&gt;
&lt;li&gt;
  &lt;i class=&#34;fab fa-whatsapp  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://api.whatsapp.com/send?phone=5584998196064&amp;amp;text=Ol%C3%A1!%20Sou%20Allanna%20Lopes%2C%20representante%20comercial%20do%20Livro%20%22R%20b%C3%A1sico%22.%20Antes%20de%20enviar%20a%20mensagem%20para%20mais%20detalhes%2C%20eu%20consigo%20enviar%20o%20livro%20por%20R%24%20150%2C00%20para%20qualquer%20local%20do%20Brasil!&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Allanna Lopes (Rep. comercial - venda direta)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://shopee.com.br/product/880978340/20053618529/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Shopee&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://produto.mercadolivre.com.br/MLB-2838245818-livro-r-basico-capa-simples-colorido-e-impresso-interna-em-preto-e-branco-_JM&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Mercado livre&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fab fa-amazon  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://www.amazon.com/dp/6500531914&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Amazon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Vers√£o digital:
&lt;ul&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-file-pdf  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://github.com/bendeivide/book-eambr01/raw/main/docs/book-eambr01.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R b√°sico (PDF)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://bendeivide.github.io/book-eambr01/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R b√°sico (Bookdown)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;aulas&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fab fa-r-project&#34;&gt;&lt;/i&gt; Aulas&lt;/h2&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-12&#34;&gt;
  &lt;summary&gt;&amp;#x1f4d8; Aula 00 - Apresenta√ß√£o do curso&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Apresenta√ß√£o do curso&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/rbasico/slide00/index.html&#34; target=&#34;_blank&#34;&gt;Aula 00&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 30 minutos&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1sVrVqx2X43KEHsLGfN25mj5og1zWJ3LLIdmLgnjr9VI/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/books/eambr01/&#34;&gt;Livro: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;courses/cursor/&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Exerc√≠cios propostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aula&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/wJw1ZP5Ycv4&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-13&#34;&gt;
  &lt;summary&gt;&amp;#x1f4d8; Aula 01 - Entendendo o curso EAR: R b√°sico&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Entendendo o curso EAR: R b√°sico&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/rbasico/slide01/index.html&#34; target=&#34;_blank&#34;&gt;Aula 01&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 50 minutos&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1IOUmC9iVxpggNW9Nil9v15aWguktIIiNWE3loXQEuag/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/books/eambr01/&#34;&gt;Livro: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;courses/cursor/&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Exerc√≠cios propostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aula&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/v5g791UgtpA&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-14&#34;&gt;
  &lt;summary&gt;&amp;#x1f4d8; Aula 02 - Passos iniciais para a utiliza√ß√£o do R e do RStudio&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Passos iniciais para a utiliza√ß√£o do R e do RStudio&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/rbasico/slide02/index.html&#34; target=&#34;_blank&#34;&gt;Aula 02&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 50 minutos&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1MrHvYDLFcNBij1_MIFn9a10LVr_s1VZw-OuaevOhoEY/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/books/eambr01/&#34;&gt;Livro: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;courses/cursor/&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Exerc√≠cios propostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aula&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/8yl5Nd1Qot8&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-15&#34;&gt;
  &lt;summary&gt;&amp;#x1f4d8; Aula 03 - Hit√≥ria do R&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Hit√≥ria do R&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/rbasico/slide03/index.html&#34; target=&#34;_blank&#34;&gt;Aula 03&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 50 minutos&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1zgqd3gPGGEnVb7uBCpHsDgOB--xQCoTI3rY6idOhhFM/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/books/eambr01/&#34;&gt;Livro: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;courses/cursor/&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Exerc√≠cios propostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aula&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/pPfL0Dp1mZw&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-16&#34;&gt;
  &lt;summary&gt;&amp;#x1f4d8; Aula 04 - Como o R trabalha?&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Como o R trabalha?&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/rbasico/slide04/index.html&#34; target=&#34;_blank&#34;&gt;Aula 04&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 50 minutos&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1osFh2BWlda2vsLgkaw7Nem7JWCdAnePXGhhz3rJXAww/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/books/eambr01/&#34;&gt;Livro: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;courses/cursor/&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Exerc√≠cios propostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aula&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/mN5IVnP9G5U&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-17&#34;&gt;
  &lt;summary&gt;&amp;#x1f4d8; Aula 05 - Comandos no R e Ambiente Global&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Comandos no R e Ambiente Global&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/rbasico/slide05/index.html&#34; target=&#34;_blank&#34;&gt;Aula 05&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 50 minutos&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1mdUF4Rxo2iSgxZdwD91dXLsaAQpAWPYEgqgIidAY-9k/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/books/eambr01/&#34;&gt;Livro: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;courses/cursor/&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Exerc√≠cios propostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aula&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/xAobFYXTN_k&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-18&#34;&gt;
  &lt;summary&gt;&amp;#x1f4d8; Aula 06 - Arquivos &lt;code&gt;.RData&lt;/code&gt; e &lt;code&gt;.Rhistory&lt;/code&gt;&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Arquivos &lt;code&gt;.RData&lt;/code&gt; e &lt;code&gt;.Rhistory&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/rbasico/slide06/index.html&#34; target=&#34;_blank&#34;&gt;Aula 06&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 50 minutos&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1Jqw5UpRYaHh_m7IeA5b-TLVglakioRKYFFZbHM27V1c/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/books/eambr01/&#34;&gt;Livro: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;courses/cursor/&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Exerc√≠cios propostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aula&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/xAobFYXTN_k&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-19&#34;&gt;
  &lt;summary&gt;&amp;#x1f4d8; Aula 07 - Criando e salvando um &lt;em&gt;Script&lt;/em&gt;&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Criando e salvando um &lt;code&gt;Script&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/rbasico/slide07/index.html&#34; target=&#34;_blank&#34;&gt;Aula 07&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 50 minutos&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/16smQaqbwIcOHLTxugF-yb3adXWfBeFLKihdAwAWewvg/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/books/eambr01/&#34;&gt;Livro: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;courses/cursor/&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Exerc√≠cios propostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aula&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/4jeDXHIEG3M&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-20&#34;&gt;
  &lt;summary&gt;&amp;#x1f4d8; &lt;em&gt;Live 1&lt;/em&gt; - D√∫vidas sobre as aulas 01 a 07&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Live 1&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/rbasico/live01/index.html&#34; target=&#34;_blank&#34;&gt;Live 01&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 50 minutos&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1mgs5zSLHaIGjknR1u-92NiI8FHdCyNMNEQdQDK07sEU/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/books/eambr01/&#34;&gt;Livro: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;courses/cursor/&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Exerc√≠cios propostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aula&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/eTLkrFEQf-s?feature=share&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-21&#34;&gt;
  &lt;summary&gt;&amp;#x1f4d8; Aula 08 - Objetos e estrutura de dados&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Objetos&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/rbasico/slide08/index.html&#34; target=&#34;_blank&#34;&gt;Aula 08&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 50 minutos&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1Y0pmTS6lB5ya0Ayy95Zkl0W6h8Zu8o7B8chAxbp1nxI/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/books/eambr01/&#34;&gt;Livro: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;courses/cursor/&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Exerc√≠cios propostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aula&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/lGNsTA8vOo0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-22&#34;&gt;
  &lt;summary&gt;&amp;#x1f4d8; Aula 09 - Vetores&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Vetores&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/rbasico/slide09/index.html&#34; target=&#34;_blank&#34;&gt;Aula 09&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 50 minutos&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1zWev7cGTy6pdcrb0FOeUVCloUFAgZSeRG4wj_yqnRN0/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/books/eambr01/&#34;&gt;Livro: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;courses/cursor/&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Exerc√≠cios propostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aula&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/guFBofLC3bs&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-23&#34;&gt;
  &lt;summary&gt;&amp;#x1f4d8; Aula 10 - Matrizes bidimensionais&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Matrizes bidimensionais&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/rbasico/slide10/index.html&#34; target=&#34;_blank&#34;&gt;Aula 10&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 50 minutos&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1LH0InipFAtyHnoUzd1Hyljf_nVkxTiByxQHQecreU-o/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/books/eambr01/&#34;&gt;Livro: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;courses/cursor/&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Exerc√≠cios propostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aula&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/fkect5pKNA8&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-24&#34;&gt;
  &lt;summary&gt;&amp;#x1f4d8; Aula 11 - &lt;code&gt;Arrays&lt;/code&gt; (Matrizes multidimensionais)&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; &lt;code&gt;Arrays&lt;/code&gt; (Matrizes multidimensionais)&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/rbasico/slide11/index.html&#34; target=&#34;_blank&#34;&gt;Aula 11&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 50 minutos&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1ewmRJ4LE2EATW3uxYxweVP92u4qGcImW6trfEKAv-EQ/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/books/eambr01/&#34;&gt;Livro: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;courses/cursor/&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Exerc√≠cios propostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aula&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/5GyjaYvDQ_0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-25&#34;&gt;
  &lt;summary&gt;&amp;#x1f4d8; Aula 12 - Listas&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Listas&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/rbasico/slide12/index.html&#34; target=&#34;_blank&#34;&gt;Aula 12&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 50 minutos&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1ebpIvvHWoL17BRa6MwbyX1Ue4aY7jyyoBL47_J3VR-M/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/books/eambr01/&#34;&gt;Livro: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;courses/cursor/&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Exerc√≠cios propostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aula&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/U4HqjFDxixk&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-26&#34;&gt;
  &lt;summary&gt;&amp;#x1f4d8; Aula 13 - Quadro de dados&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Quadro de dados&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/rbasico/slide13/index.html&#34; target=&#34;_blank&#34;&gt;Aula 13&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 50 minutos&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1lNur7uPo8g02Kf8Cp_TchxOq6ctpLrv0cz2u32WY1mU/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/books/eambr01/&#34;&gt;Livro: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;courses/cursor/&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Exerc√≠cios propostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aula&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/hRTi-QtWv1s?si=u9H2VBX1Tj1wsvsP&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-27&#34;&gt;
  &lt;summary&gt;&amp;#x1f4d8; Aula 14 - Importanto e Exportando dados&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Importando e Exportando dados&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/rbasico/slide14/index.html&#34; target=&#34;_blank&#34;&gt;Aula 14&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-database  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Arquivos:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/rbasico/alfafa.txt&#34; target=&#34;_blank&#34;&gt;alfafa.txt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/rbasico/datast1980.txt&#34; target=&#34;_blank&#34;&gt;datast1980.txt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/rbasico/producao.csv&#34; target=&#34;_blank&#34;&gt;producao.csv&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 50 minutos&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1m4Zv2Up1z6lFw-pazMs6IOKp5BYWKig3yD_XYYjK7b8/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/books/eambr01/&#34;&gt;Livro: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;courses/cursor/&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Exerc√≠cios propostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aula&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/aiUwAzIAd5Q?si=ZCoSpBHQs9O84YO_&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-28&#34;&gt;
  &lt;summary&gt;&amp;#x1f4d8; Aula 15 - Fun√ß√µes&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Fun√ß√µes&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/rbasico/slide15/index.html&#34; target=&#34;_blank&#34;&gt;Aula 15&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 50 minutos&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1XtlyiKlNEzgIR_-45g03gIokx7EMAWirU0KZISQju_A/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/books/eambr01/&#34;&gt;Livro: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;courses/cursor/&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Exerc√≠cios propostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aula&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/ufCueIl9i4A?si=yvlrjYFNAOHfbzHU&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-29&#34;&gt;
  &lt;summary&gt;&amp;#x1f4d8; &lt;em&gt;Live 2&lt;/em&gt; - D√∫vidas sobre as aulas 08 a 15&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Live 2&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/rbasico/live02/index.html&#34; target=&#34;_blank&#34;&gt;Live 02&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 50 minutos&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/11t02Fj8CVIScB1oqM-GT_ncRKjNPjudOJgpRiS3_0OY/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/books/eambr01/&#34;&gt;Livro: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;courses/cursor/&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Exerc√≠cios propostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aula&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/D8zjstTpDXA?si=i7gVIQjleDNSveyN&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-30&#34;&gt;
  &lt;summary&gt;&amp;#x1f4d8; Aula 16 - Estruturas de controle&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Estruturas de controle&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/rbasico/slide16/index.html&#34; target=&#34;_blank&#34;&gt;Aula 16&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 50 minutos&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1PV1xRegF91wmaQu7hzi9KjAkNrCUCaOHpBGfrl4wLLQ/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/books/eambr01/&#34;&gt;Livro: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;courses/cursor/&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Exerc√≠cios propostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aula&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/YdFdSfAQLSk?si=nq_ma0cYBL_AyfKy&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-31&#34;&gt;
  &lt;summary&gt;&amp;#x1f4d8; Aula 17 - Como criar fun√ß√µes&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Como criar fun√ß√µes&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/rbasico/slide17/index.html&#34; target=&#34;_blank&#34;&gt;Aula 17&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 50 minutos&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1rY5621jptLdVJQ66tYy-eNqXPc0DMSbz2lrzjrhE3eU/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/books/eambr01/&#34;&gt;Livro: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;courses/cursor/&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Exerc√≠cios propostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aula&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/72p1BxQHPDQ?si=MxeJQoYUBMOqifF6&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-32&#34;&gt;
  &lt;summary&gt;&amp;#x1f4d8; Aula 18 - Boas pr√°ticas de como escrever um c√≥digo&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Boas pr√°ticas de como escrever um c√≥digo&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/rbasico/slide18/index.html&#34; target=&#34;_blank&#34;&gt;Aula 18&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 50 minutos&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1vkja5FLurQaAfrM9e9kwE5820rdS-qARBK1jH-NxU1w/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/books/eambr01/&#34;&gt;Livro: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;courses/cursor/&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Exerc√≠cios propostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aula&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/-N4ypp074Bs?si=rEtCslQ2sTMcQFv_&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-33&#34;&gt;
  &lt;summary&gt;&amp;#x1f4d8; Aula 19 - Pacotes&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Pacotes&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/rbasico/slide19/index.html&#34; target=&#34;_blank&#34;&gt;Aula 19&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 50 minutos&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/15fWW02M7_X8AieV9V7vTjAonJeTqilbNsxsf-01K30w/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/books/eambr01/&#34;&gt;Livro: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;courses/cursor/&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Exerc√≠cios propostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aula&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/ceE7rCh5Djo&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-34&#34;&gt;
  &lt;summary&gt;&amp;#x1f4d8; Aula 20 - Carregando e anexando pacotes&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Carregando e anexando pacotes&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/rbasico/slide20/index.html&#34; target=&#34;_blank&#34;&gt;Aula 20&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 50 minutos&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1WUizNW27YDlUvWm9YdJKlsC855OYzWs5GW-jgov2g8E/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/books/eambr01/&#34;&gt;Livro: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;courses/cursor/&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Exerc√≠cios propostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aula&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/mSBggLlDauY&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-35&#34;&gt;
  &lt;summary&gt;&amp;#x1f4d8; Aula 21 - &lt;em&gt;NAMESPACE&lt;/em&gt; de um pacote&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; &lt;em&gt;NAMESPACE&lt;/em&gt; de um pacote&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/rbasico/slide21/index.html&#34; target=&#34;_blank&#34;&gt;Aula 21&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 50 minutos&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1p8nnjFM60Ql_1qwuPFharggZllA2WSnaIgyO3FV5WOQ/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/books/eambr01/&#34;&gt;Livro: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;courses/cursor/&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Exerc√≠cios propostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aula&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/9sYUJET4A1Q&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-36&#34;&gt;
  &lt;summary&gt;&amp;#x1f4d8; Aula 22 - Quando devemos utilizar os operadores &lt;code&gt;::&lt;/code&gt; e &lt;code&gt;:::&lt;/code&gt;&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Quando devemos utilizar os operadores &lt;code&gt;::&lt;/code&gt; e &lt;code&gt;:::&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/rbasico/slide22/index.html&#34; target=&#34;_blank&#34;&gt;Aula 22&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 50 minutos&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1MplgPYtw4CZCcycfYszio44t41tsaGtXtzTk2uYkrdo/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/books/eambr01/&#34;&gt;Livro: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;courses/cursor/&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Exerc√≠cios propostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aula&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/xMnkl3CoDRM&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-37&#34;&gt;
  &lt;summary&gt;&amp;#x1f4d8; Aula 23 - Ambientes e caminho de busca&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Ambientes e caminho de busca&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/rbasico/slide23/index.html&#34; target=&#34;_blank&#34;&gt;Aula 23&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 50 minutos&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1Qg9P_2FWf4zqY0Anc7PU94VggDEXHzD3tjaVYs0fJBU/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/books/eambr01/&#34;&gt;Livro: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;courses/cursor/&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Exerc√≠cios propostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aula&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/7qbiCt9Z7oY&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-38&#34;&gt;
  &lt;summary&gt;&amp;#x1f4d8; Aula 24 - Interface com outras linguagens&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Interface com outras linguagens&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/rbasico/slide24/index.html&#34; target=&#34;_blank&#34;&gt;Aula 24&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 50 minutos&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/15syp7KwF2Xwxv3sSUnTsxVWOgl4_3PfgDN1VdZdDegk/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/books/eambr01/&#34;&gt;Livro: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;courses/cursor/&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Exerc√≠cios propostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aula&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/KVgcP3Fswqc&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-39&#34;&gt;
  &lt;summary&gt;&amp;#x1f4d8; Aula 25 - Considera√ß√µes e Prepara√ß√£o para o curso &lt;strong&gt;R Intermedi√°rio&lt;/strong&gt;&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Considera√ß√µes e Prepara√ß√£o para a Programa√ß√£o em R (R Intermedi√°rio)&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/rbasico/slide25/index.html&#34; target=&#34;_blank&#34;&gt;Aula 25&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 50 minutos&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1UHZKzVVNo1XTjr39GvUsoEP1DyNvbuPKbVnIWNfVPUY/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/books/eambr01/&#34;&gt;Livro: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;courses/cursor/&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Exerc√≠cios propostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aula&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/KTY4FABRkOo&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-40&#34;&gt;
  &lt;summary&gt;&amp;#x1f4d8; &lt;em&gt;Live 3&lt;/em&gt; - D√∫vidas sobre as aulas 08 a 15&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Live 3&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/rbasico/live03/index.html&#34; target=&#34;_blank&#34;&gt;Live 02&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 50 minutos&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/books/eambr01/&#34;&gt;Livro: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;courses/cursor/&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;&#34;&gt;Exerc√≠cios propostos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aula&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/OnGg5ZPYYqU?feature=share&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;quiz&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-question&#34;&gt;&lt;/i&gt; Quiz&lt;/h2&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-41&#34;&gt;
  &lt;summary&gt;&amp;#x1f4d6; Livro de apoio?&lt;/summary&gt;
  &lt;p&gt;Acesse: &lt;a href=&#34;https://bendeivide.github.io/book-eambr01/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://bendeivide.github.io/book-eambr01/&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-42&#34;&gt;
  &lt;summary&gt;&amp;#x1f4c1; Curso anterior!&lt;/summary&gt;
  &lt;p&gt;Acesse: &lt;a href=&#34;http://bendeivide.github.io/cursor/nbasico#rwork&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://bendeivide.github.io/cursor/nbasico#rwork&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-43&#34;&gt;
  &lt;summary&gt;&amp;#x1f3ac; Playlist do youtube (cursos anteriores)&lt;/summary&gt;
  &lt;p&gt;Acesse: &lt;a href=&#34;https://www.youtube.com/watch?v=_JqtU3X101E&amp;amp;list=PL-20Z1XFWKR0y0qZdOM0KKqb4oEbAMs7O&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso R - N√≠vel B√°sico&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-44&#34;&gt;
  &lt;summary&gt;&amp;#x1f4da; Adquira o Livro f√≠sico &lt;strong&gt;R b√°sico&lt;/strong&gt;&lt;/summary&gt;
  &lt;p&gt;&lt;ul&gt;
&lt;li&gt;&lt;i class=&#34;fab fa-whatsapp  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://api.whatsapp.com/send?phone=5584998196064&amp;amp;text=Ol%C3%A1!%20Sou%20Allanna%20Lopes%2C%20representante%20comercial%20do%20Livro%20%22R%20b%C3%A1sico%22.%20Antes%20de%20enviar%20a%20mensagem%20para%20mais%20detalhes%2C%20eu%20consigo%20enviar%20o%20livro%20por%20R%24%20150%2C00%20para%20qualquer%20local%20do%20Brasil!&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Allanna Lopes (Rep. comercial - venda direta)&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://shopee.com.br/product/880978340/20053618529/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Shopee&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://produto.mercadolivre.com.br/MLB-2838245818-livro-r-basico-capa-simples-colorido-e-impresso-interna-em-preto-e-branco-_JM&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Mercado livre&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;i class=&#34;fab fa-amazon  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://www.amazon.com/dp/6500531914&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Amazon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;h2 id=&#34;vers√£o-digital&#34;&gt;Vers√£o digital:&lt;/h2&gt;
&lt;h2 id=&#34;i-classfas-fa-file-pdf--pr-1-fa-fwi-r-b√°sico-pdfhttpsgithubcombendeividebook-eambr01rawmaindocsbook-eambr01pdf&#34;&gt;&lt;i class=&#34;fas fa-file-pdf  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://github.com/bendeivide/book-eambr01/raw/main/docs/book-eambr01.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R b√°sico (PDF)&lt;/a&gt;&lt;/h2&gt;
&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://bendeivide.github.io/book-eambr01/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R b√°sico (Bookdown)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;</description>
    </item>
    
    <item>
      <title>üé• Youtube (2024)</title>
      <link>http://bendeivide.github.io/courses/rlm/normal/</link>
      <pubDate>Fri, 31 May 2024 18:15:10 +0000</pubDate>
      <guid>http://bendeivide.github.io/courses/rlm/normal/</guid>
      <description>&lt;p&gt;Curso de Regress√£o Linear M√∫ltipla&amp;hellip;&lt;/p&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; V√≠deos dispon√≠veis quase toda semana!&lt;/p&gt;
&lt;h2 id=&#34;apresenta√ß√£o&#34;&gt;Apresenta√ß√£o&lt;/h2&gt;
&lt;p&gt;Em termos gerais, abordaremos: &amp;hellip;&lt;/p&gt;
&lt;/br&gt;
&lt;!-- 
  &lt;i class=&#34;fas fa-microphone-alt  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Podcast --&gt;
&lt;!-- Em desenvolvimento... --&gt;
&lt;h2 id=&#34;onde&#34;&gt;Onde?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;canal: &lt;a href=&#34;http://youtube.com/bendeivide&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://youtube.com/bendeivide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ementa&#34;&gt;Ementa&lt;/h2&gt;
&lt;p&gt;N√≥s usamos essa ementa pela primeira vez, para sentirmos nesse primeiro semestre a demanda necess√°ria&lt;/p&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-2&#34;&gt;
  &lt;summary&gt;Acesse a ementa do curso&lt;/summary&gt;
  &lt;p&gt;&lt;ol&gt;
&lt;li&gt;INTRODU√á√ÉO&lt;/li&gt;
&lt;/ol&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;aulas&#34;&gt;Aulas&lt;/h2&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-3&#34;&gt;
  &lt;summary&gt;Aula 01 - Introdu√ß√£o e ferramentas para o curso&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema - Introdu√ß√£o e ferramentas para o curso&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Material de apoio&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/cursor/nbasico/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; (N√≠vel B√°sico)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/cursor/nintermediario/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; (N√≠vel Intermedi√°rio)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=HSwb29EvCv8&amp;amp;list=PL-20Z1XFWKR2GatfNSFOwfRvPreZ-nW0D&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Playlist da disciplina de Estat√≠stica e Probabilidade&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; V√≠deo&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/B2D8SrzKlkc&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;br/&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-4&#34;&gt;
  &lt;summary&gt;Aula 02 - O que √© um Modelo Linear?&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema - O que √© um Modelo Linear?&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-file-pdf  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a
href=&#34;https://raw.githubusercontent.com/bendeivide/bendeivide.github.io/main/docs/rlm/2024/aula02/nota02.pdf&#34; target=&#34;_blank&#34;&gt;Notas da aula 2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Material de apoio&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/cursor/nbasico/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; (N√≠vel B√°sico)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/cursor/nintermediario/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; (N√≠vel Intermedi√°rio)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=HSwb29EvCv8&amp;amp;list=PL-20Z1XFWKR2GatfNSFOwfRvPreZ-nW0D&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Playlist da disciplina de Estat√≠stica e Probabilidade&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; V√≠deo&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/5IRAFg1C6sI&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;br/&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-5&#34;&gt;
  &lt;summary&gt;Aula 03 - Regress√£o Linear Simples: Estima√ß√£o&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema - Regress√£o Linear Simples: Estima√ß√£o&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-file-pdf  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a
href=&#34;https://raw.githubusercontent.com/bendeivide/bendeivide.github.io/main/docs/rlm/2024/aula03/nota03.pdf&#34; target=&#34;_blank&#34;&gt;Notas da aula 3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a
href=&#34;https://raw.githubusercontent.com/bendeivide/bendeivide.github.io/main/docs/rlm/2024/aula03/aula03.R&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;Script&lt;/em&gt; da aula 3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Material de apoio&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/cursor/nbasico/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; (N√≠vel B√°sico)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/cursor/nintermediario/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; (N√≠vel Intermedi√°rio)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=HSwb29EvCv8&amp;amp;list=PL-20Z1XFWKR2GatfNSFOwfRvPreZ-nW0D&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Playlist da disciplina de Estat√≠stica e Probabilidade&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; V√≠deo&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/9WBb0E9Pl8s&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;br/&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-6&#34;&gt;
  &lt;summary&gt;Aula 04 - Regress√£o Linear Simples: Interpreta√ß√£o&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema - Regress√£o Linear Simples: Estima√ß√£o&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-file-pdf  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a
href=&#34;https://raw.githubusercontent.com/bendeivide/bendeivide.github.io/main/docs/rlm/2024/aula04/nota04.pdf&#34; target=&#34;_blank&#34;&gt;Notas da aula 4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Material de apoio&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/cursor/nbasico/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; (N√≠vel B√°sico)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/cursor/nintermediario/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; (N√≠vel Intermedi√°rio)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=HSwb29EvCv8&amp;amp;list=PL-20Z1XFWKR2GatfNSFOwfRvPreZ-nW0D&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Playlist da disciplina de Estat√≠stica e Probabilidade&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; V√≠deo&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/ATFmXfnk8Qc&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;br/&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-7&#34;&gt;
  &lt;summary&gt;Aula 05 - Regress√£o Linear Simples: Signific√¢ncia&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema - Regress√£o Linear Simples: Signific√¢ncia&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a
href=&#34;https://raw.githubusercontent.com/bendeivide/bendeivide.github.io/main/docs/rlm/2024/aula05/aula05.R&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;Script&lt;/em&gt; Aula 5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Material de apoio&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/cursor/nbasico/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; (N√≠vel B√°sico)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/cursor/nintermediario/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; (N√≠vel Intermedi√°rio)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=HSwb29EvCv8&amp;amp;list=PL-20Z1XFWKR2GatfNSFOwfRvPreZ-nW0D&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Playlist da disciplina de Estat√≠stica e Probabilidade&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; V√≠deo&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/0LivcenOkZw&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;br/&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;quiz&#34;&gt;Quiz&lt;/h2&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-8&#34;&gt;
  &lt;summary&gt;Quais as datas de avalia√ß√£o?&lt;/summary&gt;
  &lt;p&gt;Acessem: &lt;a href=&#34;#avaliacao&#34;&gt;Avalia√ß√£o&lt;/a&gt; e &lt;a href=&#34;#cronograma&#34;&gt;Cronograma&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-9&#34;&gt;
  &lt;summary&gt;Onde ocorrer√£o as aulas no Youtube?&lt;/summary&gt;
  &lt;p&gt;Acesse o canal: &lt;a href=&#34;https://youtube.com/bendeivide&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://youtube.com/bendeivide&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;</description>
    </item>
    
    <item>
      <title>üìö Ensino normal 2024.1</title>
      <link>http://bendeivide.github.io/courses/epaec/normal/</link>
      <pubDate>Tue, 19 Mar 2024 08:02:58 +0000</pubDate>
      <guid>http://bendeivide.github.io/courses/epaec/normal/</guid>
      <description>&lt;details class=&#34;toc-inpage d-print-none d-xl-none &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Sum√°rio&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#apresentacao&#34;&gt;&lt;i class=&#34;fas fa-chalkboard-teacher&#34;&gt;&lt;/i&gt; Apresenta√ß√£o&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#topicos&#34;&gt;&lt;i class=&#34;fas fa-map&#34;&gt;&lt;/i&gt; T√≥picos abordados&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#onde&#34;&gt;&lt;i class=&#34;fa fa-globe&#34;&gt;&lt;/i&gt; Onde?&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#cronograma&#34;&gt;&lt;i class=&#34;fas fa-calendar-alt&#34;&gt;&lt;/i&gt; Calend√°rio e Cronograma&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#whatsapp&#34;&gt;&lt;i class=&#34;fab fa-whatsapp&#34;&gt;&lt;/i&gt; Grupo de Whatsapp&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#formulario&#34;&gt;&lt;i class=&#34;fas fa-file-contract&#34;&gt;&lt;/i&gt; Preenchimento de dados para as avalia√ß√µes&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#notas&#34;&gt;&lt;i class=&#34;fas fa-file-alt&#34;&gt;&lt;/i&gt; Notas&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#ementa&#34;&gt;&lt;i class=&#34;fas fa-list-ol&#34;&gt;&lt;/i&gt; Ementa&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#metodologia&#34;&gt;&lt;i class=&#34;fab fa-readme&#34;&gt;&lt;/i&gt; Metodologia&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#avaliacao&#34;&gt;&lt;i class=&#34;fas fa-award&#34;&gt;&lt;/i&gt; Avalia√ß√£o&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#bibiografia&#34;&gt;&lt;i class=&#34;fa fa-book&#34;&gt;&lt;/i&gt; Bibliografia adotada para a disciplina&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#matadotado&#34;&gt;&lt;i class=&#34;fas fa-book-open&#34;&gt;&lt;/i&gt; Material adotado&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#mativas&#34;&gt;&lt;i class=&#34;fas fa-chalkboard&#34;&gt;&lt;/i&gt; Metodologias ativas&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#aprender&#34;&gt;&lt;i class=&#34;fab fa-leanpub&#34;&gt;&lt;/i&gt; Como estudar e aprender&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#aulas&#34;&gt;&lt;i class=&#34;fas fa-pencil-ruler&#34;&gt;&lt;/i&gt; Aulas&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#vejatbmn&#34;&gt;&lt;i class=&#34;fas fa-eye&#34;&gt;&lt;/i&gt; Veja tamb√©m&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#quiz&#34;&gt;&lt;i class=&#34;fas fa-question&#34;&gt;&lt;/i&gt; Quiz&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;

&lt;h2 id=&#34;apresentacao&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-chalkboard-teacher&#34;&gt;&lt;/i&gt; Apresenta√ß√£o&lt;/h2&gt;
&lt;p&gt;Curso de Estat√≠stica e Probabilidade oferecido no formato presencial
pela &lt;a href=&#34;http://ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;, campus Alto Paraopeba
(&lt;a href=&#34;http://ufsj.edu.br/cap/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CAP&lt;/a&gt;), Ouro Branco/MG.&lt;/p&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; 4 horas por semana, por 18 semanas&lt;/p&gt;
&lt;h2 id=&#34;topicos&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-map&#34;&gt;&lt;/i&gt; T√≥picos abordados&lt;/h2&gt;
&lt;p&gt;Defini√ß√µes gerais. Coleta, organiza√ß√£o de dados. Medidas de posi√ß√£o.
Medidas de dispers√£o. Probabilidades. Distribui√ß√µes de probabilidade.
Amostragem. Teoria da estima√ß√£o. Teoria da decis√£o. Correla√ß√£o e
regress√£o linear simples.&lt;/p&gt;
&lt;h2 id=&#34;onde&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fa fa-globe&#34;&gt;&lt;/i&gt; Onde?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;O curso √© ministrado na &lt;a href=&#34;http://ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;, campus Alto
Paraopeba (&lt;a href=&#34;http://ufsj.edu.br/cap/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CAP&lt;/a&gt;), para todos os cursos de
Engenharia do campus.&lt;/li&gt;
&lt;li&gt;Todas as nossas est√£o gravadas:
&lt;ul&gt;
&lt;li&gt;canal: &lt;a href=&#34;http://youtube.com/bendeivide&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://youtube.com/bendeivide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Per√≠odo:&lt;/li&gt;
&lt;li&gt;Aulas presenciais:
&lt;ul&gt;
&lt;li&gt;Engenheria Qu√≠mica:
&lt;ul&gt;
&lt;li&gt;segunda-feira (21:00 - 23:00, sala 207.4)&lt;/li&gt;
&lt;li&gt;ter√ßa-feira (21:00 - 23:00, sala 207.4)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Engenharia Mecatr√¥nica:
&lt;ul&gt;
&lt;li&gt;quinta-feira (19:00 - 21:00, sala 202.4)&lt;/li&gt;
&lt;li&gt;sexta-feira (21:00 - 23:00, sala 202n .4)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cronograma&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-calendar-alt&#34;&gt;&lt;/i&gt; Calend√°rio e Cronograma&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Calend√°rio&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://bendeivide.github.io/pt/courses/epaec/normal_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;img src=&#34;http://bendeivide.github.io/pt/courses/epaec/normal_files/figure-html/unnamed-chunk-1-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/document/d/1DP-9WJ_WiPURwRlOFyY1NKBFlBflDqnWDqcMllMJnxI/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cronograma de
aulas&lt;/a&gt;:
&lt;div class=&#34;responsive-wrap&#34;&gt;
      &lt;iframe src=&#34;https://docs.google.com/document/d/1DP-9WJ_WiPURwRlOFyY1NKBFlBflDqnWDqcMllMJnxI/edit?usp=sharing&#34; frameborder=&#34;0&#34; width=&#34;960&#34; height=&#34;569&#34; allowfullscreen=&#34;true&#34; mozallowfullscreen=&#34;true&#34; webkitallowfullscreen=&#34;true&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;whatsapp&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fab fa-whatsapp&#34;&gt;&lt;/i&gt; Grupo de Whatsapp&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chat.whatsapp.com/EzPBESx93hS0bj7TKqjDbv&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Link&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;formulario&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-file-contract&#34;&gt;&lt;/i&gt; Preenchimento de dados para as avalia√ß√µes&lt;/h2&gt;
&lt;div class=&#34;responsive-wrap&#34;&gt;
  &lt;iframe src=&#34;https://docs.google.com/forms/d/e/1FAIpQLSetgmgCVUzFIheWM6dLdwZcIix5zEmXWaqBDIQnCBhBjMbvEg/viewform?usp=sf_link&#34; frameborder=&#34;0&#34; width=&#34;960&#34; height=&#34;569&#34; allowfullscreen=&#34;true&#34; mozallowfullscreen=&#34;true&#34; webkitallowfullscreen=&#34;true&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h2 id=&#34;notas&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-file-alt&#34;&gt;&lt;/i&gt; Notas&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Engenharia Mecatr√¥nica
&lt;a href=&#34;https://docs.google.com/spreadsheets/d/1tEIZ3I92WoNtOSL0ix4S_dNEAIyojiIaQiCAzS_zwdg/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Link&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Engenharia Qu√≠mica
&lt;a href=&#34;https://docs.google.com/spreadsheets/d/1hSt6rwDFwkFNAeq4qIhOPCn3CcLXbSJwc1NTQ_qGe88/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Link&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ementa&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-list-ol&#34;&gt;&lt;/i&gt; Ementa&lt;/h2&gt;
&lt;p&gt;N√≥s usamos a ementa contida nos Projetos Pedag√≥gicos de Cursos (PPCs) da
CAP/UFSJ&lt;/p&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-4&#34;&gt;
  &lt;summary&gt;Acesse a ementa do curso&lt;/summary&gt;
  &lt;p&gt;&lt;ol&gt;
&lt;li&gt;DEFINI√á√ïES GERAIS E T√âCNICAS DE SOMAT√ìRIO:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Defini√ß√µes Gerais&lt;/li&gt;
&lt;li&gt;T√©cnicas de somat√≥rio&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;COLETA, ORGANIZA√á√ÉO E APRESENTA√á√ÉO DE DADOS:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Representa√ß√£o tabular&lt;/li&gt;
&lt;li&gt;Representa√ß√£o gr√°fica&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;MEDIDAS DE POSI√á√ÉO:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;M√©dia&lt;/li&gt;
&lt;li&gt;Mediana&lt;/li&gt;
&lt;li&gt;Moda&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;MEDIDAS DE DISPERS√ÉO:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Amplitude total&lt;/li&gt;
&lt;li&gt;Vari√¢ncia&lt;/li&gt;
&lt;li&gt;Desvio Padr√£o&lt;/li&gt;
&lt;li&gt;Coeficiente de Varia√ß√£o&lt;/li&gt;
&lt;li&gt;Erro padr√£o da M√©dia&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;PROBABILIDADES:
&lt;ul&gt;
&lt;li&gt;Conceitos b√°sicos&lt;/li&gt;
&lt;li&gt;Defini√ß√µes de probabilidades&lt;/li&gt;
&lt;li&gt;Propriedades&lt;/li&gt;
&lt;li&gt;Eventos independentes e probabilidade condicional&lt;/li&gt;
&lt;li&gt;Teorema de Bayes&lt;/li&gt;
&lt;li&gt;Fun√ß√£o de probabilidade discreta&lt;/li&gt;
&lt;li&gt;Fun√ß√£o de probabilidade cont√≠nua&lt;/li&gt;
&lt;li&gt;Fun√ß√£o de distribui√ß√£o de probabilidade acumulada&lt;/li&gt;
&lt;li&gt;Esperan√ßa matem√°tica e vari√¢ncia&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DISTRIBUI√á√ïES DE PROBABILIDADES:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Distribui√ß√µes discretas de probabilidades&lt;/li&gt;
&lt;li&gt;Distribui√ß√µes cont√≠nuas de probabilidades&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;AMOSTRAGEM:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Amostragem n√£o-probabil√≠stica e probabil√≠stica&lt;/li&gt;
&lt;li&gt;T√©cnicas de amostragem probabil√≠stica&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DISTRIBUI√á√ÉO DE AMOSTRAGEM:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Distribui√ß√£o de amostragem da m√©dia&lt;/li&gt;
&lt;li&gt;Distribui√ß√£o de amostragem de propor√ß√µes&lt;/li&gt;
&lt;li&gt;Distribui√ß√£o de amostragem de diferen√ßa entre m√©dias&lt;/li&gt;
&lt;li&gt;Distribui√ß√µes amostrais (qui-quadrado, t e F)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;TEORIA DA ESTIMA√á√ÉO:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Conceitos b√°sicos&lt;/li&gt;
&lt;li&gt;Tipos de estimativas&lt;/li&gt;
&lt;li&gt;Propriedades de um estimador&lt;/li&gt;
&lt;li&gt;Estima√ß√£o por ponto&lt;/li&gt;
&lt;li&gt;Estima√ß√£o por intervalo:
&lt;ul&gt;
&lt;li&gt;Intervalo de confian√ßa para a m√©dia&lt;/li&gt;
&lt;li&gt;Intervalo de confian√ßa para a vari√¢ncia&lt;/li&gt;
&lt;li&gt;Intervalo de confian√ßa para a diferen√ßa entre m√©dias&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Dimensionamento de amostras&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;TEORIA DA DECIS√ÉO:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Testes de hip√≥teses&lt;/li&gt;
&lt;li&gt;Erros tipo I e II&lt;/li&gt;
&lt;li&gt;Teste unilateral e bilateral&lt;/li&gt;
&lt;li&gt;Passos para a constru√ß√£o de um teste de hip√≥teses&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses para a m√©dia&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses para a propor√ß√£o&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses para a vari√¢ncia&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses para a diferen√ßa entre m√©dias&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CORRELA√á√ÉO E REGRESS√ÉO LINEAR SIMPLES:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Correla√ß√£o linear:&lt;/li&gt;
&lt;li&gt;Coeficiente de correla√ß√£o linear&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses acerca do coeficiente de correla√ß√£o linear&lt;/li&gt;
&lt;li&gt;Regress√£o linear simples:&lt;/li&gt;
&lt;li&gt;Modelo&lt;/li&gt;
&lt;li&gt;Estima√ß√£o dos par√¢metros do modelo&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses para o modelo de regress√£o&lt;/li&gt;
&lt;li&gt;Medidas de adequa√ß√£o do modelo&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;metodologia&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fab fa-readme&#34;&gt;&lt;/i&gt; Metodologia&lt;/h2&gt;
&lt;p&gt;Nossas aulas ser√£o divididas de acordo com as 18 semanas de aula. As
aulas ser√£o expositivas e dialogadas com os alunos presencialmente ou
via portal did√°tico, constitu√≠da pela seguinte estrat√©gia de ensino:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Motiva√ß√£o:
&lt;ul&gt;
&lt;li&gt;Levantamento do conhecimento pr√©vio dos alunos em rela√ß√£o ao
tema;&lt;/li&gt;
&lt;li&gt;Apresenta√ß√£o de algumas situa√ß√µes pr√°ticas para a compreens√£o
dos t√≥picos a serem abordados;&lt;/li&gt;
&lt;li&gt;Exposi√ß√£o dos objetivos da aula.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Desenvolvimento:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o ao assunto abordado;&lt;/li&gt;
&lt;li&gt;Apresenta√ß√£o de defini√ß√µes e teoremas envolvidos;&lt;/li&gt;
&lt;li&gt;Aplica√ß√£o de softwares estat√≠sticos, quando for pertinente;&lt;/li&gt;
&lt;li&gt;Exemplos e aplica√ß√µes na estat√≠stica e √°rea do curso, do assunto
abordado.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-5&#34;&gt;
  &lt;summary&gt;Detalhamento da metodologia&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;As aulas seguir√£o um modelo de metodologia ativa baseado nas coreografias did√°ticas. Criaremos um cen√°rio em que o propagador de conhecimento tamb√©m seja produzido pelo aluno. Ele ser√° o protagonista. Desta forma, traremos m√©todos de aprendizagem do tipo &amp;ldquo;ensinar por aprender&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Nossas aulas estar√£o dispon√≠veis em &lt;a href=&#34;http://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://bendeivide.github.io/&lt;/a&gt;. Para os alunos matriculados na disciplina, tamb√©m ser√° poss√≠vel acompanhar o material pelo portal did√°tico. Nossas aulas ter√£o &lt;strong&gt;4 (quatro) horas semanais de aulas presenciais&lt;/strong&gt;, um total de 72h**.&lt;/p&gt;
&lt;!-- Faremos tamb√©m uma retramiss√£o do conte√∫do abordado durante a semana pelo canal do youtube &lt;https://youtube.com/bendeivide&gt;. --&gt;
&lt;p&gt;Iremos utilizar diversas ferramentas do google como os seus editores de textos, planilhas e apresentadores. Tamb√©m utilizaremos o &lt;em&gt;overlief&lt;/em&gt; para usu√°rios de LaTeX. Com a linguagem &lt;em&gt;R&lt;/em&gt;, mostraremos documentos din√¢micos, usando o &lt;em&gt;R Markdown&lt;/em&gt; e o &lt;em&gt;shiny&lt;/em&gt;, tamb√©m para o desenvolvimento de materiais did√°ticos, quanto para as atividades com os alunos. Todas essas ferramentas tecnol√≥gicas s√£o gratuitas e de f√°cil instala√ß√£o para os alunos, uma vez que dareremos todo o suporte, de forma que os alunos estejam capacitados a utilizar todas as ferramentas quando necess√°rio.&lt;/p&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;avaliacao&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-award&#34;&gt;&lt;/i&gt; Avalia√ß√£o&lt;/h2&gt;
&lt;!-- - [Planilha de Notas (Engenharia Mecatr√¥nica)](https://docs.google.com/spreadsheets/d/1JQ3csMP-eLpWs6yDhDjwb9JRCk85Z-Yv8OAYTt2FZ0s/edit?usp=sharing) --&gt;
&lt;!-- - [Planilha de Notas (Engenharia de Telecomunica√ß√µes)](https://docs.google.com/spreadsheets/d/1vZHMVeUxkG4iEzkhigjahRB2ahnJD2pepK7sGk68V1E/edit#gid=0) --&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-6&#34;&gt;
  &lt;summary&gt;Segue um detalhamento das nossas avalia√ß√µes&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;Ser√£o distribu√≠dos 100 pontos para atividades avaliativas da seguinte forma:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1¬™ Avalia√ß√£o - Se√ß√µes 1, 2, 3, e 4 - 20 pontos;&lt;/li&gt;
&lt;li&gt;2¬™ Avalia√ß√£o - Se√ß√µes 5, 6, 7 e 8 - 30 pontos;&lt;/li&gt;
&lt;li&gt;3¬™ Avalia√ß√£o - Se√ß√µes 9, 10 e 11 - 30 pontos;&lt;/li&gt;
&lt;li&gt;Trabalhos (Trabalhos, Exerc√≠cios, Testes R√°pidos e laudas de artigos) - 20 pontos;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Uma outra alternativa √© desenvolvermos ideias de modo que o alunos possa contribuir com a disciplina, tais como cria√ß√£o de materiais did√°ticos, v√≠deo-aulas, etc. O objetivo √© torn√°-lo parte integrante do conhecimento formado dentro de sala de aula. Dessa forma, com essa ades√£o, o aluno pode est√° isento das avalia√ß√µes, e ser avaliado de acordo com as entregas semanais do que for acordado entre aluno e professor. Este ponto aglutina diversos projetos, principalmente o &lt;a href=&#34;http://bendeivide.github.io/project/ProjAPE&#34;&gt;Aprender por ensinar&lt;/a&gt;, &lt;a href=&#34;http://bendeivide.github.io/project/LEEM&#34;&gt;LEEM&lt;/a&gt;, &lt;a href=&#34;http://bendeivide.github.io/project/statscience&#34;&gt;statscience&lt;/a&gt;, &lt;a href=&#34;http://bendeivide.github.io/project/RapidinhasR&#34;&gt;Rapidinhas do R&lt;/a&gt;, dentre outros que possam surgir no processo. Por fim, o aluno acordar√° um contrato de quais demandas devem ser entregues e quais os direitos e deveres a ele imposto, para que isso possa ser poss√≠vel mensurar a sua aprendizagem na disciplina.&lt;/p&gt;
&lt;p&gt;Para ser aprovado o aluno dever√° obter nota final maior ou igual a 60 pontos e n√£o poder√° faltar mais de 25% das aulas. O discente que n√£o for aprovado por nota poder√° fazer uma prova substitutiva, incluindo todo o conte√∫do da disciplina, que substituir√° a menor nota dentre as tr√™s avalia√ß√µes.&lt;/p&gt;
&lt;p&gt;O discente que perder alguma avalia√ß√£o te√≥rica poder√° fazer uma segunda chamada, desde que justificada via coordenadoria.&lt;/p&gt;
&lt;p&gt;A perda de alguma avalia√ß√£o dever√° ser apresentado justificativa. Observa√ß√µes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;S√£o considerados motivos justi√ßados para fins de segunda chamada da avalia√ß√£o te√≥rica: exerc√≠cio da fun√ß√£o de representante discente nos √≥rg√£os colegiados ou diretor de entidades estudantis, desde que  comprovado o comparecimento a reuni√£o e ou encontros pertinentes a representa√ß√£o no dia e hor√°rio da referida avalia√ß√£o  (art. 142 e 143 do Regimento Geral da UFSJ);  doen√ßa infecto-contagiosa ou interna√ß√£o, desde que esta esteja comprovada por meio atestado m√©dico, contendo CID;&lt;/li&gt;
&lt;li&gt;Motivos pessoais, profissionais e atestados de consultas m√©dicas eletivas n√£o s√£o considerados como motivos justificados para que o discente tenha direito a segunda chamada de avalia√ß√£o te√≥rica;&lt;/li&gt;
&lt;li&gt;Na educa√ß√£o superior n√£o h√° abono de faltas, exceto nos seguintes casos: discente reservistas - Lei 4375, 17 de agosto de 1964; discente designado para compor a Comiss√£o Nacional de Avalia√ß√£o da Educa√ß√£o Superior (CONAES) que, em decorr√™ncia da designa√ß√£o, tenha participado de reuni√µes da CONAES em hor√°rio coincidente com as atividades acad√™micas (\S 5¬∫ do Art. 7¬∫ da Lei 10.861/2004). Portanto, atestados m√©dicos, de trabalho e de outras atividades acad√™micas, n√£o d√£o direito a abono de falta, tais aus√™ncias s√£o enquadradas no limites  dos 25%, √â para tais imprevistos que o aluno pode se ausentar em 25% das aulas;&lt;/li&gt;
&lt;li&gt;Nos casos de portadores de afec√ß√µes  (Decreto-lei 1044, de 21 de outubro de 1969) e estado de gesta√ß√£o (Lei 6202, de 17 de abril de 1975), o discente poder√° solicitar Regime Especial  como compensa√ß√£o de aus√™ncia √†s aulas. Em ambos os casos, a solicita√ß√£o, acompanhada do respectivo atestado m√©dico, dever√° ser protocolada na DICON, no in√≠cio do impedimento.&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;!-- ## &lt;i class=&#34;fas fa-check&#34;&gt;&lt;/i&gt; Como as provas ser√£o corrigidas? {id=&#34;correcao&#34; title=&#34;Clique aqui!&#34;} --&gt;
&lt;!-- -   &lt;a href=&#34;http://bendeivide.github.io/media/critprova.pdf&#34; target=&#34;_blank&#34;&gt;Crit√©rios de --&gt;
&lt;!--     avalia√ß√£o&lt;/a&gt; --&gt;
&lt;!-- ## &lt;i class=&#34;fas fa-file-signature&#34;&gt;&lt;/i&gt; Contrato {id=&#34;contrato&#34; title=&#34;Clique aqui!&#34;} --&gt;
&lt;!-- Contrato feito para a disciplina de Estat√≠stica e Probabilidade, como --&gt;
&lt;!-- meio de substituir as avalia√ß√µes tradicionais para uso de metodologias --&gt;
&lt;!-- ativas como m√©todo de avalia√ß√£o. Paralelo a disciplina, o aluno ir√° --&gt;
&lt;!-- acompanhando as aulas e desenvolvendo demandas semanais, como forma de --&gt;
&lt;!-- ser avaliado na disciplina. Assim, ao inv√©s de provas pontuais, toda --&gt;
&lt;!-- semana o aluno √© acompanhado e avaliado pelo professor. --&gt;
&lt;!-- &lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-8&#34;&gt;
  &lt;summary&gt;Abra o contrato aqui!&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&amp;ndash;&amp;gt;&lt;/p&gt;
&lt;!-- &lt;iframe src=&#34;https://docs.google.com/forms/d/e/1FAIpQLSfoKiObYtvuvc8v5UAA84X5wT8ICVZy5Qjp-p5x6knn-N7HnQ/viewform?embedded=true&#34; width=&#34;640&#34; height=&#34;2354&#34; frameborder=&#34;0&#34; marginheight=&#34;0&#34; marginwidth=&#34;0&#34;&gt; --&gt;
&lt;!-- Carregando... --&gt;
&lt;!-- &lt;/iframe&gt; --&gt;
&lt;!--&lt;/p&gt;
&lt;/details&gt; --&gt;
&lt;h2 id=&#34;bibiografia&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fa fa-book&#34;&gt;&lt;/i&gt; Bibliografia adotada para a disciplina&lt;/h2&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-9&#34;&gt;
  &lt;summary&gt;Bibliografia detalhada&lt;/summary&gt;
  &lt;p&gt;&lt;ul&gt;
&lt;li&gt;MONTGOMERY, Douglas C.; RUNGER, George C.. &lt;strong&gt;Estat√≠stica aplicada e
probabilidade para engenheiros&lt;/strong&gt;. 6. ed. Rio de Janeiro: LTC, 2016.
629 p. Tradu√ß√£o de: Ver√¥nica Calado.&lt;/li&gt;
&lt;li&gt;DEVORE, J. L.. &lt;strong&gt;Probabilidade e Estat√≠stica&lt;/strong&gt;: para engenharia e
ci√™ncias. S√£o Paulo: Pioneira Thomson, 2006. 692 p.&lt;/li&gt;
&lt;li&gt;MORETTIN, Luiz Gonzaga. &lt;strong&gt;Estat√≠stica B√°sica&lt;/strong&gt;: Probabilidade e
Infer√™ncia. S√£o Paulo: Pearson Prentice Hall, 2010. 375 p.&lt;/li&gt;
&lt;li&gt;BUSSAB, W. O.; MORETTIN, P.A. &lt;strong&gt;Estat√≠stica B√°sica&lt;/strong&gt;. 5. ed. S√£o
Paulo: Saraiva, 2003.&lt;/li&gt;
&lt;li&gt;COSTA NETO, P. L. O. &lt;strong&gt;Estat√≠stica&lt;/strong&gt;. 3. ed. S√£o Paulo: Edgard
Blucher, 2007.&lt;/li&gt;
&lt;li&gt;TRIOLA, M. F. &lt;strong&gt;Introdu√ß√£o √† Estat√≠stica&lt;/strong&gt;. Rio de janeiro: LTC,
2008.&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;matadotado&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-book-open&#34;&gt;&lt;/i&gt; Material adotado&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Livro refer√™ncia: &lt;a href=&#34;http://bendeivide.github.io/book-epaec/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;EPAEC&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Sugest√µes e cr√≠ticas sobre o livro podem ser enviadas para
&lt;a href=&#34;mailto:livrosdeben@gmail.com&#34;&gt;livrosdeben@gmail.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-10&#34;&gt;
  &lt;summary&gt;Materiais complementares&lt;/summary&gt;
  &lt;p&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://leg.ufpr.br/~paulojus/estbas/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Estat√≠stica B√°sica (Departamento de Estat√≠stica, UFPR)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://github.com/talesjfer/Apostila-Estatistica-Aplicada&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Estat√≠stica Aplicada (Tales Jesus Fernandes, UFLA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://repositorio.ufla.br/bitstream/1/41344/1/Gex112_0.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Resumo do Livro Estat√≠stica B√°sica (Daniel Furtado, UFLA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://educapes.capes.gov.br/bitstream/capes/432207/2/Livro_Estatistica%20e%20Probabilidade.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Estat√≠stica e Probabilidade (UECE)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.editorapantanal.com.br/ebooks/2021/estimacao-estatistica/ebook.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Estima√ß√£o Estat√≠stica (Assis, et. al. 2021)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.unifal-mg.edu.br/bibliotecas/system/files/imce/EBR_Unifal.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Introdu√ß√£o √† estat√≠stica com R (Eric Ferreira &amp;amp; Marcelo Oliveira )&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.researchgate.net/publication/345985082_Introducao_a_Linguagem_R_seus_fundamentos_e_sua_pratica&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Introdu√ß√£o a linguagem R: seus fundamentos e pr√°ticas (Pedro Faria &amp;amp; Jo√£o Parga)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://livraria.ufersa.edu.br/wp-content/uploads/sites/165/2020/08/testes-de-hipoteses-estatisticas-edufersa.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Teste de Hip√≥teses Estat√≠sticas (Janilson Pinheiro de Assis et. al., UFERSA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://livraria.ufersa.edu.br/wp-content/uploads/sites/165/2019/07/Glossario-de-Estatistica_2019-1.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gloss√°rio de Estat√≠stica (Janilson Pinheiro de Assis, UFERSA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCoL7IgyKRZ6JBog71LnoGzA&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Canal Ci√™ncia Estat√≠stica&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://editorapantanal.com.br/ebooks/2023/probabilidade-e-estatistica-exercicios/ebook.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Estat√≠stica e Probabilidade: Exerc√≠cios (Assis et. al., 2023)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;mativas&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-chalkboard&#34;&gt;&lt;/i&gt; Metodologias ativas&lt;/h2&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-11&#34;&gt;
  &lt;summary&gt;Aprender por ensinar&lt;/summary&gt;
  &lt;p&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://drive.google.com/file/d/1QCbtxb9vCOmgD4sxBjp8D8L8Z7GObiyg/view?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Modelo de Arquivo em power
point&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://drive.google.com/file/d/1Q8-YQYC48ufVJqQVj3_7VEytSouk0u_n/view?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Resultado em
v√≠deo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Os programas necess√°rios:
&lt;ul&gt;
&lt;li&gt;Editor de Slides: o MS Power Point (Instalado previamente no
Windows);
&lt;a href=&#34;https://www.libreoffice.org/download/download/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;LibreOffice&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Gravador de tela e de seu √°udio: &lt;a href=&#34;https://obsproject.com/pt-br/download&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OBS
Studio&lt;/a&gt; OBS.: Os
programas s√£o esses. Qualquer d√∫vida, favor me procurar.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/YqMQix2P1oU&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-12&#34;&gt;
  &lt;summary&gt;Mapas Mentais&lt;/summary&gt;
  &lt;p&gt;&lt;ul&gt;
&lt;li&gt;D√∫vidas de como desenvolver, fa√ßa uso dos buscadores na internet,
v√≠deo-aulas, etc. H√° muito material interessante na internet;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1tpHtGiDbpQ01zoxhOmQMa4Rqf4G6JbMO2c6EYdyrQCo/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Modelo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-13&#34;&gt;
  &lt;summary&gt;Resumo de Cornell&lt;/summary&gt;
  &lt;p&gt;&lt;ul&gt;
&lt;li&gt;D√∫vidas de como desenvolver, fa√ßa uso dos buscadores na internet,
v√≠deo-aulas, etc. H√° muito material interessante na internet;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1XEc3IWEcn2Kx40XjaOGF-wKAXHseTrOqbcIibdOmod8/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Modelo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;aprender&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fab fa-leanpub&#34;&gt;&lt;/i&gt; Como estudar e aprender&lt;/h2&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-14&#34;&gt;
  &lt;summary&gt;V√≠deoaula do Prof. Pierluigi Piazzi (Youtube: Canal Glauco Copeck XYZ)&lt;/summary&gt;
  &lt;p&gt;&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/noXqEGIZak8&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;aulas&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-pencil-ruler&#34;&gt;&lt;/i&gt; Aulas&lt;/h2&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-15&#34;&gt;
  &lt;summary&gt;üéì Aula 1&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Temas:&lt;/strong&gt; Apresenta√ß√£o do
curso e Defini√ß√µes gerais da estat√≠stica e t√©cnicas de somat√≥rio
(Cap√≠tulo 1)&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/estprob/s01/&#34; target=&#34;_blank&#34;&gt; Aula
01&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt;
&lt;a href=&#34;https://docs.google.com/document/d/1FH1XO5fz9eRCClym4BMeivzPZzHbEkKWXvQidTjZC_A/edit?usp=sharing&#34; target=&#34;_blank&#34;&gt;
&lt;strong&gt;Plano de aula&lt;/strong&gt; &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a
href=&#34;https://raw.githubusercontent.com/bendeivide/bendeivide.github.io/main/docs/epaec/2024.1/r-scripts/aula01.R&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;Script&lt;/em&gt; Aula 1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/remoto/&#34;
target=&#34;_blank&#34;&gt;Estat√≠stica e Probabilidade (Ensino Remoto)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/ear/rbasico/&#34;
target=&#34;_blank&#34;&gt; Curso EAR: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/exerresolvidos/&#34;
target=&#34;_blank&#34;&gt;Exerc√≠cios resolvidos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aulas&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/videoaulas/&#34;
target=&#34;_blank&#34;&gt;V√≠deoaulas&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-16&#34;&gt;
  &lt;summary&gt;üéì Aula 2&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Temas:&lt;/strong&gt; Exerc√≠cios sobre Defini√ß√µes gerais da estat√≠stica e t√©cnicas de somat√≥rio (Cap√≠tulo 1)&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/estprob/s02/&#34; target=&#34;_blank&#34;&gt; Aula
02&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt;
&lt;a href=&#34;https://docs.google.com/document/d/11Qg-S3Kxpd-omGlOpE_7nqvkcKV4GDZv9NIIlIrEgEc/edit?usp=sharing&#34; target=&#34;_blank&#34;&gt;
&lt;strong&gt;Plano de aula&lt;/strong&gt; &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a
href=&#34;https://raw.githubusercontent.com/bendeivide/bendeivide.github.io/main/docs/epaec/2024.1/r-scripts/aula02.R&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;Script&lt;/em&gt; Aula 2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/remoto/&#34;
target=&#34;_blank&#34;&gt;Estat√≠stica e Probabilidade (Ensino Remoto)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/ear/rbasico/&#34;
target=&#34;_blank&#34;&gt; Curso EAR: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/exerresolvidos/&#34;
target=&#34;_blank&#34;&gt;Exerc√≠cios resolvidos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aulas&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/videoaulas/&#34;
target=&#34;_blank&#34;&gt;V√≠deoaulas&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-17&#34;&gt;
  &lt;summary&gt;üéì Aula 3&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Temas:&lt;/strong&gt; Coleta, organiza√ß√£o e apresenta√ß√£o de dados&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/estprob/s03/&#34; target=&#34;_blank&#34;&gt; Aula
03&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt;
&lt;a href=&#34;https://docs.google.com/document/d/1rQ4MmpoFRLgUBbt7zktcAEaTODB9WFViY1dWTdnjVC0/edit?usp=sharing&#34; target=&#34;_blank&#34;&gt;
&lt;strong&gt;Plano de aula&lt;/strong&gt; &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a
href=&#34;https://raw.githubusercontent.com/bendeivide/bendeivide.github.io/main/docs/epaec/2024.1/r-scripts/aula03.R&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;Script&lt;/em&gt; Aula 3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/remoto/&#34;
target=&#34;_blank&#34;&gt;Estat√≠stica e Probabilidade (Ensino Remoto)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/ear/rbasico/&#34;
target=&#34;_blank&#34;&gt; Curso EAR: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/exerresolvidos/&#34;
target=&#34;_blank&#34;&gt;Exerc√≠cios resolvidos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aulas&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/videoaulas/&#34;
target=&#34;_blank&#34;&gt;V√≠deoaulas&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-18&#34;&gt;
  &lt;summary&gt;üéì Aula 4&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Temas:&lt;/strong&gt; Exerc√≠cios sobre Coleta, organiza√ß√£o e apresenta√ß√£o de dados&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/estprob/s04/&#34; target=&#34;_blank&#34;&gt; Aula
04&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt;
&lt;a href=&#34;https://docs.google.com/document/d/1go3LMsYDs2z2OWHFoZ5EFhVh6Efeb6iNyTIkPTK7lQk/edit?usp=sharing&#34; target=&#34;_blank&#34;&gt;
&lt;strong&gt;Plano de aula&lt;/strong&gt; &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a
href=&#34;https://raw.githubusercontent.com/bendeivide/bendeivide.github.io/main/docs/epaec/2024.1/r-scripts/aula04.R&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;Script&lt;/em&gt; Aula 4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/remoto/&#34;
target=&#34;_blank&#34;&gt;Estat√≠stica e Probabilidade (Ensino Remoto)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/ear/rbasico/&#34;
target=&#34;_blank&#34;&gt; Curso EAR: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/exerresolvidos/&#34;
target=&#34;_blank&#34;&gt;Exerc√≠cios resolvidos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aulas&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/videoaulas/&#34;
target=&#34;_blank&#34;&gt;V√≠deoaulas&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-19&#34;&gt;
  &lt;summary&gt;üéì Aula 5&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Medidas de posi√ß√£o&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/estprob/s05/&#34; target=&#34;_blank&#34;&gt; Aula
05&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1TGcA1kXbfpny6dALR0Ekn-CGbBH0N9_2Dx_hJChGphg/edit?usp=sharing&#34; target=&#34;_blank&#34;&gt; &lt;strong&gt;Plano de aula&lt;/strong&gt; &lt;/a&gt;&lt;/p&gt;
&lt;!-- &lt;i class=&#34;fas fa-pen&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/epaec/2023.2/qbranco/aula05.png&#34; target=&#34;_blank&#34;&gt;Quadro branco - Aula 05&lt;/a&gt; --&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a
href=&#34;https://raw.githubusercontent.com/bendeivide/bendeivide.github.io/main/docs/epaec/2024.1/r-scripts/aula05.R&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;Script&lt;/em&gt; Aula 5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/remoto/&#34;
target=&#34;_blank&#34;&gt;Estat√≠stica e Probabilidade (Ensino Remoto)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/ear/rbasico/&#34;
target=&#34;_blank&#34;&gt; Curso EAR: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/exerresolvidos/&#34;
target=&#34;_blank&#34;&gt;Exerc√≠cios resolvidos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aulas&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/videoaulas/&#34;
target=&#34;_blank&#34;&gt;V√≠deoaulas&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-20&#34;&gt;
  &lt;summary&gt;üéì Aula 6&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Exerc√≠cios sobre Medidas de posi√ß√£o&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/estprob/s06/&#34; target=&#34;_blank&#34;&gt; Aula
06&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1K29u8DbCXwgKkwNoUjFb1P10M1bDzaPu8vQDXnuPBMc/edit?usp=sharing&#34; target=&#34;_blank&#34;&gt; &lt;strong&gt;Plano de aula&lt;/strong&gt; &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a
href=&#34;https://raw.githubusercontent.com/bendeivide/bendeivide.github.io/main/docs/epaec/2024.1/r-scripts/aula06.R&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;Script&lt;/em&gt; Aula 6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/remoto/&#34;
target=&#34;_blank&#34;&gt;Estat√≠stica e Probabilidade (Ensino Remoto)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/ear/rbasico/&#34;
target=&#34;_blank&#34;&gt; Curso EAR: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/exerresolvidos/&#34;
target=&#34;_blank&#34;&gt;Exerc√≠cios resolvidos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aulas&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/videoaulas/&#34;
target=&#34;_blank&#34;&gt;V√≠deoaulas&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-21&#34;&gt;
  &lt;summary&gt;üéì Aula 7&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Medidas de dispers√£o&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/estprob/s07/&#34; target=&#34;_blank&#34;&gt; Aula
07&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1QWGBFJfO3ksSTQFqmnDhOoC5S35EXNHdHnAZ5E-SDK8/edit?usp=sharing&#34; target=&#34;_blank&#34;&gt; &lt;strong&gt;Plano de aula&lt;/strong&gt; &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a
href=&#34;&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;Script&lt;/em&gt; Aula 7&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/remoto/&#34;
target=&#34;_blank&#34;&gt;Estat√≠stica e Probabilidade (Ensino Remoto)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/ear/rbasico/&#34;
target=&#34;_blank&#34;&gt; Curso EAR: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/exerresolvidos/&#34;
target=&#34;_blank&#34;&gt;Exerc√≠cios resolvidos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aulas&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/videoaulas/&#34;
target=&#34;_blank&#34;&gt;V√≠deoaulas&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-22&#34;&gt;
  &lt;summary&gt;üéì Aula 8&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Exerc√≠cios sobre Medidas de dispers√£o&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/estprob/s08/&#34; target=&#34;_blank&#34;&gt; Aula
08&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1-IyLZTU8DV9SlSxem8wxewqfPR51l8wWP3D0moBHmlE/edit?usp=sharing&#34; target=&#34;_blank&#34;&gt; &lt;strong&gt;Plano de aula&lt;/strong&gt; &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a
href=&#34;&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;Script&lt;/em&gt; Aula 8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/remoto/&#34;
target=&#34;_blank&#34;&gt;Estat√≠stica e Probabilidade (Ensino Remoto)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/ear/rbasico/&#34;
target=&#34;_blank&#34;&gt; Curso EAR: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/exerresolvidos/&#34;
target=&#34;_blank&#34;&gt;Exerc√≠cios resolvidos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aulas&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/videoaulas/&#34;
target=&#34;_blank&#34;&gt;V√≠deoaulas&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-23&#34;&gt;
  &lt;summary&gt;üéì Aula 9&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Revis√£o para a Prova 1&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/estprob/s09/&#34; target=&#34;_blank&#34;&gt; Aula
09&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1-IyLZTU8DV9SlSxem8wxewqfPR51l8wWP3D0moBHmlE/edit?usp=sharing&#34; target=&#34;_blank&#34;&gt; &lt;strong&gt;Plano de aula&lt;/strong&gt; &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a
href=&#34;&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;Script&lt;/em&gt; Aula 9&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/remoto/&#34;
target=&#34;_blank&#34;&gt;Estat√≠stica e Probabilidade (Ensino Remoto)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/ear/rbasico/&#34;
target=&#34;_blank&#34;&gt; Curso EAR: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/exerresolvidos/&#34;
target=&#34;_blank&#34;&gt;Exerc√≠cios resolvidos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aulas&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/videoaulas/&#34;
target=&#34;_blank&#34;&gt;V√≠deoaulas&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-24&#34;&gt;
  &lt;summary&gt;üéì Aula 10&lt;/summary&gt;
  &lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Prova 1:&lt;/strong&gt; Realizado em hor√°rio de aula. Acesse o  &lt;a href=&#34;./#cronograma&#34; target=&#34;_blank&#34;&gt; cronograma de aulas&lt;/a&gt; para mais detalhes.&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-25&#34;&gt;
  &lt;summary&gt;üéì Aula 11&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Probabilidades (Parte I e Parte II)&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/estprob/s11/&#34; target=&#34;_blank&#34;&gt; Aula
11 (Parte I)&lt;/a&gt; e &lt;a href=&#34;http://bendeivide.github.io/slides/estprob/s11.2/&#34; target=&#34;_blank&#34;&gt; Aula
11 (Parte II)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Plano de aula&lt;/strong&gt;: &lt;a href=&#34;https://docs.google.com/document/d/1YYiwcfF-WzEYrPAHKDkwha0GkFx3Oe9kD-LPlNqFpsw/edit?usp=sharing&#34; target=&#34;_blank&#34;&gt; Parte (I) &lt;/a&gt; e &lt;a href=&#34;https://docs.google.com/document/d/1WWVCRRcdniJVPCs-XyGPAn9QFqU58a_HA2Fdn4qo3SI/edit?usp=sharing&#34; target=&#34;_blank&#34;&gt; Parte (II) &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a
href=&#34;&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;Script&lt;/em&gt; Aula 11&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/remoto/&#34;
target=&#34;_blank&#34;&gt;Estat√≠stica e Probabilidade (Ensino Remoto)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/ear/rbasico/&#34;
target=&#34;_blank&#34;&gt; Curso EAR: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/exerresolvidos/&#34;
target=&#34;_blank&#34;&gt;Exerc√≠cios resolvidos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aulas&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/videoaulas/&#34;
target=&#34;_blank&#34;&gt;V√≠deoaulas&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-26&#34;&gt;
  &lt;summary&gt;üéì Aula 12&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Probabilidades (Parte III)&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/estprob/s12/&#34; target=&#34;_blank&#34;&gt; Aula
12&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1or8cBxA9mgxAIFJh4DvfDt_TNBS_CA6bYaqaRQkJlFE/edit?usp=sharing&#34; target=&#34;_blank&#34;&gt; &lt;strong&gt;Plano de aula&lt;/strong&gt; &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a
href=&#34;&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;Script&lt;/em&gt; Aula 12&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/remoto/&#34;
target=&#34;_blank&#34;&gt;Estat√≠stica e Probabilidade (Ensino Remoto)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/ear/rbasico/&#34;
target=&#34;_blank&#34;&gt; Curso EAR: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/exerresolvidos/&#34;
target=&#34;_blank&#34;&gt;Exerc√≠cios resolvidos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aulas&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/videoaulas/&#34;
target=&#34;_blank&#34;&gt;V√≠deoaulas&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-27&#34;&gt;
  &lt;summary&gt;üéì Aula 13&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Exerc√≠cios sobre Probabilidades&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/estprob/s13/&#34; target=&#34;_blank&#34;&gt; Aula
13&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1otiPm3MYWiYXkSgKma4ctssfZAS2vc3jFym_tHFxb08/edit?usp=sharing&#34; target=&#34;_blank&#34;&gt; &lt;strong&gt;Plano de aula&lt;/strong&gt; &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a
href=&#34;&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;Script&lt;/em&gt; Aula 8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/remoto/&#34;
target=&#34;_blank&#34;&gt;Estat√≠stica e Probabilidade (Ensino Remoto)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/ear/rbasico/&#34;
target=&#34;_blank&#34;&gt; Curso EAR: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/exerresolvidos/&#34;
target=&#34;_blank&#34;&gt;Exerc√≠cios resolvidos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aulas&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/videoaulas/&#34;
target=&#34;_blank&#34;&gt;V√≠deoaulas&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-28&#34;&gt;
  &lt;summary&gt;üéì Aula 14&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Distribui√ß√µes de probabilidade (Parte I)&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/estprob/s14/&#34; target=&#34;_blank&#34;&gt; Aula
14&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1Slhnxykl6DNBnmjDu5IT-1dO6TIEm4byNj0qohkxNzs/edit?usp=sharing&#34; target=&#34;_blank&#34;&gt; &lt;strong&gt;Plano de aula&lt;/strong&gt; &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a
href=&#34;&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;Script&lt;/em&gt; Aula 15&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/remoto/&#34;
target=&#34;_blank&#34;&gt;Estat√≠stica e Probabilidade (Ensino Remoto)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/ear/rbasico/&#34;
target=&#34;_blank&#34;&gt; Curso EAR: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/exerresolvidos/&#34;
target=&#34;_blank&#34;&gt;Exerc√≠cios resolvidos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aulas&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/videoaulas/&#34;
target=&#34;_blank&#34;&gt;V√≠deoaulas&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-29&#34;&gt;
  &lt;summary&gt;üéì Aula 15&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Distribui√ß√µes de probabilidade (Parte II)&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/estprob/s15/&#34; target=&#34;_blank&#34;&gt; Aula
15&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1mH28OTcWdsB0-dT5M0KpnrpUK-PTZVQGLY5Dcy9Ha4A/edit?usp=sharing&#34; target=&#34;_blank&#34;&gt; &lt;strong&gt;Plano de aula&lt;/strong&gt; &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a
href=&#34;&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;Script&lt;/em&gt; Aula 15&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/remoto/&#34;
target=&#34;_blank&#34;&gt;Estat√≠stica e Probabilidade (Ensino Remoto)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/ear/rbasico/&#34;
target=&#34;_blank&#34;&gt; Curso EAR: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/exerresolvidos/&#34;
target=&#34;_blank&#34;&gt;Exerc√≠cios resolvidos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aulas&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/videoaulas/&#34;
target=&#34;_blank&#34;&gt;V√≠deoaulas&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-30&#34;&gt;
  &lt;summary&gt;üéì Aula 16&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tema:&lt;/strong&gt; Exerc√≠cios sobre Distribui√ß√µes de probabilidade&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-eye  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Apresenta√ß√£o:&lt;/strong&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/estprob/s16/&#34; target=&#34;_blank&#34;&gt; Aula
16&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Tempo:&lt;/strong&gt; 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Podcast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/18l6tH7yN2URhmtgrNZfC2GfYhlKVtMtfbva13kcL9Y4/edit?usp=sharing&#34; target=&#34;_blank&#34;&gt; &lt;strong&gt;Plano de aula&lt;/strong&gt; &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a
href=&#34;&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;Script&lt;/em&gt; Aula 16&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;Material para consulta&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/remoto/&#34;
target=&#34;_blank&#34;&gt;Estat√≠stica e Probabilidade (Ensino Remoto)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/ear/rbasico/&#34;
target=&#34;_blank&#34;&gt; Curso EAR: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/exerresolvidos/&#34;
target=&#34;_blank&#34;&gt;Exerc√≠cios resolvidos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;strong&gt;V√≠deo-aulas&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec/videoaulas/&#34;
target=&#34;_blank&#34;&gt;V√≠deoaulas&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-31&#34;&gt;
  &lt;summary&gt;üéì Aula 17&lt;/summary&gt;
  &lt;p&gt;Em aula!&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-32&#34;&gt;
  &lt;summary&gt;üéì Aula 18&lt;/summary&gt;
  &lt;p&gt;Em aula!&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-33&#34;&gt;
  &lt;summary&gt;üéì Aula 19&lt;/summary&gt;
  &lt;p&gt;Em aula!&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-34&#34;&gt;
  &lt;summary&gt;üéì Aula 20&lt;/summary&gt;
  &lt;p&gt;Em aula!&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-35&#34;&gt;
  &lt;summary&gt;üéì Aula 21&lt;/summary&gt;
  &lt;p&gt;Em aula!&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-36&#34;&gt;
  &lt;summary&gt;üéì Aula 22&lt;/summary&gt;
  &lt;p&gt;Prova 02&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-37&#34;&gt;
  &lt;summary&gt;üéì Aula 23&lt;/summary&gt;
  &lt;p&gt;Em aula!&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-38&#34;&gt;
  &lt;summary&gt;üéì Aula 24&lt;/summary&gt;
  &lt;p&gt;Em aula!&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-39&#34;&gt;
  &lt;summary&gt;üéì Aula 25&lt;/summary&gt;
  &lt;p&gt;Em aula!&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-40&#34;&gt;
  &lt;summary&gt;üéì Aula 26&lt;/summary&gt;
  &lt;p&gt;Em aula!&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-41&#34;&gt;
  &lt;summary&gt;üéì Aula 27&lt;/summary&gt;
  &lt;p&gt;Em aula!&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-42&#34;&gt;
  &lt;summary&gt;üéì Aula 28&lt;/summary&gt;
  &lt;p&gt;Em aula!&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-43&#34;&gt;
  &lt;summary&gt;üéì Aula 29&lt;/summary&gt;
  &lt;p&gt;Em aula!&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-44&#34;&gt;
  &lt;summary&gt;üéì Aula 30&lt;/summary&gt;
  &lt;p&gt;Em aula!&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-45&#34;&gt;
  &lt;summary&gt;üéì Aula 31&lt;/summary&gt;
  &lt;p&gt;Em aula!&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-46&#34;&gt;
  &lt;summary&gt;üéì Aula 32&lt;/summary&gt;
  &lt;p&gt;Em aula!&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-47&#34;&gt;
  &lt;summary&gt;üéì Aula 33&lt;/summary&gt;
  &lt;p&gt;Prova 3&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-48&#34;&gt;
  &lt;summary&gt;üéì Aula 34&lt;/summary&gt;
  &lt;p&gt;Palestra&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-49&#34;&gt;
  &lt;summary&gt;üéì Aula 35&lt;/summary&gt;
  &lt;p&gt;Segunda chamada&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-50&#34;&gt;
  &lt;summary&gt;üéì Aula 36&lt;/summary&gt;
  &lt;p&gt;Prova substitutiva&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;vejatbmn&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-eye&#34;&gt;&lt;/i&gt; Veja tamb√©m&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-tv  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a
href=&#34;http://bendeivide.github.io/courses/epaec/remoto/&#34;
target=&#34;_blank&#34;&gt;Ensino remoto 2021.2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-tv  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a
href=&#34;http://bendeivide.github.io/courses/epaec/remoto2022.1/&#34;
target=&#34;_blank&#34;&gt;Ensino remoto 2022.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-podcast  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a
href=&#34;http://bendeivide.github.io/courses/epaec/podcasts/&#34;
target=&#34;_blank&#34;&gt;Podcasts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-feather  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a
href=&#34;http://bendeivide.github.io/courses/epaec/exerresolvidos/&#34;
target=&#34;_blank&#34;&gt;Exerc√≠cios resolvidos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a
href=&#34;http://bendeivide.github.io/courses/ear/rbasico/&#34;
target=&#34;_blank&#34;&gt;Curso EAR: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-guitar  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a
href=&#34;http://bendeivide.github.io/project/cantest/&#34;
target=&#34;_blank&#34;&gt;Cantando com a Estat√≠stica&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-video  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a
href=&#34;http://bendeivide.github.io/courses/epaec/videoaulas/&#34;
target=&#34;_blank&#34;&gt;V√≠deos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-file  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a
href=&#34;http://bendeivide.github.io/courses/epaec/resest/&#34;
target=&#34;_blank&#34;&gt;Resumos da Estat√≠stica&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;quiz&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-question&#34;&gt;&lt;/i&gt; Quiz&lt;/h2&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-67&#34;&gt;
  &lt;summary&gt;Quais as datas de avalia√ß√£o?&lt;/summary&gt;
  &lt;p&gt;Acessem: &lt;a href=&#34;#avaliacao&#34;&gt;Avalia√ß√£o&lt;/a&gt; e &lt;a href=&#34;#cronograma&#34;&gt;Cronograma&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-68&#34;&gt;
  &lt;summary&gt;Como acessar o material de apoio?&lt;/summary&gt;
  &lt;p&gt;&lt;ul&gt;
&lt;li&gt;Acessem: &lt;a href=&#34;#matadotado&#34;&gt;Livro EPAEC&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Sugest√µes e cr√≠ticas sobre o livro podem ser enviadas para &lt;a href=&#34;mailto:livrosdeben@gmail.com&#34;&gt;livrosdeben@gmail.com&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
</description>
    </item>
    
    <item>
      <title>GEMS-R: Como desenvolver o primeiro pacote R</title>
      <link>http://bendeivide.github.io/courses/meupacoter/gems-ufs/</link>
      <pubDate>Thu, 17 Nov 2022 08:20:47 +0000</pubDate>
      <guid>http://bendeivide.github.io/courses/meupacoter/gems-ufs/</guid>
      <description>&lt;p&gt;Minicurso ministrado ao Grupo de Estudos em Melhoramento Vegetal do Semi√°rido, pela Universidade Federal de Sergipe, no dia 18 de novembro de 2022.&lt;/p&gt;
&lt;h2 id=&#34;local-data-e-hor√°rio&#34;&gt;Local, data e hor√°rio&lt;/h2&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-globe  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Via meet (Enviado pelo GEMS-UFS) | 
  &lt;i class=&#34;fas fa-calendar  pr-1 fa-fw&#34;&gt;&lt;/i&gt; 18/11/2022 | 
  &lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; 17h - 20h:30&lt;/p&gt;
&lt;h2 id=&#34;inscri√ß√£o-gratuita&#34;&gt;Inscri√ß√£o (Gratuita)&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://linktr.ee/gemsufs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://linktr.ee/gemsufs&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;apresenta√ß√£o&#34;&gt;Apresenta√ß√£o&lt;/h2&gt;
&lt;p&gt;Nesta apresenta√ß√£o, daremos o enfoco no desenvolvimento de um pacote &lt;strong&gt;R&lt;/strong&gt; b√°sico, isto √©, apresentando a estrutura m√≠nima que um pacote deve ter at√© a sua publica√ß√£o.&lt;/p&gt;
&lt;h2 id=&#34;ementa&#34;&gt;Ementa&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Introdu√ß√£o a desenvolvimento de pacotes&lt;/li&gt;
&lt;li&gt;Construindo o esqueleto de um pacote&lt;/li&gt;
&lt;li&gt;Configurando os arquivos b√°sicos de um pacote&lt;/li&gt;
&lt;li&gt;Checando o pacote&lt;/li&gt;
&lt;li&gt;Submetendo o pacote ao CRAN&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;material-de-apoio&#34;&gt;Material de apoio&lt;/h2&gt;
&lt;p&gt;P√°gina do &lt;a href=&#34;https://bendeivide.github.io/meupacoter/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;meupacoter&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;como-acompanhar-o-curso-com-o-meupacoter&#34;&gt;Como acompanhar o curso com o &lt;code&gt;meupacoter&lt;/code&gt;?&lt;/h2&gt;
&lt;p&gt;P√°gina Github do &lt;a href=&#34;https://github.com/bendeivide/meupacoter&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;meupacoter&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;slide-de-apresenta√ß√£o&#34;&gt;Slide de apresenta√ß√£o&lt;/h2&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-tv  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/slides/meupacoter-gems-ufs/&#34;&gt;GEMS-R: Como desenvolver o primeiro pacote R&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;quiz&#34;&gt;Quiz&lt;/h2&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-5&#34;&gt;
  &lt;summary&gt;Material de apoio?&lt;/summary&gt;
  &lt;p&gt;&lt;ul&gt;
&lt;li&gt;MeupacoteR: &lt;a href=&#34;https://bendeivide.github.io/meupacoter/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://bendeivide.github.io/meupacoter/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Livro R b√°sico: &lt;a href=&#34;https://bendeivide.github.io/books/eambr01/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://bendeivide.github.io/books/eambr01/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;</description>
    </item>
    
    <item>
      <title>Programa√ß√£o em R (N√≠vel B√°sico)</title>
      <link>http://bendeivide.github.io/courses/cursor/nbasico/</link>
      <pubDate>Thu, 29 Apr 2021 14:27:01 +0000</pubDate>
      <guid>http://bendeivide.github.io/courses/cursor/nbasico/</guid>
      <description>&lt;p&gt;Programando em n√≠vel b√°sico o &lt;a href=&#34;http://r-project.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; 6-7 horas por semana, por 4 semanas&lt;/p&gt;
&lt;h2 id=&#34;apresenta√ß√£o&#34;&gt;Apresenta√ß√£o&lt;/h2&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/_JqtU3X101E&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id=&#34;onde-foi-ministrado&#34;&gt;Onde foi ministrado?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;O curso foi ministrado pela UFSJ, em parceria com o Centro Acad√™mico de Engenharia de Telecomunica√ß√µes (CATEL), no per√≠odo de 18/02/2021 a 19/03/2021.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;material&#34;&gt;Material&lt;/h2&gt;
&lt;p&gt;O material encontra-se dispon√≠vel em &lt;a href=&#34;http://bendeivide.github.io/cursor/nbasico&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://bendeivide.github.io/cursor/nbasico&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;v√≠deo-aulas&#34;&gt;V√≠deo-aulas&lt;/h2&gt;
&lt;p&gt;Todas as v√≠deo-aulas encontram-se no material informado anteriormente, como tamb√©m pela playlist &lt;a href=&#34;https://www.youtube.com/playlist?list=PL-20Z1XFWKR0y0qZdOM0KKqb4oEbAMs7O&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso R&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;exerc√≠cios&#34;&gt;Exerc√≠cios&lt;/h2&gt;
&lt;p&gt;Os exerc√≠cios do curso, podem ser desenvolvidos via &lt;em&gt;web&lt;/em&gt; em &lt;a href=&#34;https://bendeivide.shinyapps.io/Curso-R/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://bendeivide.shinyapps.io/Curso-R/&lt;/a&gt;, como tamb√©m √© poss√≠vel baixar todos os &lt;a href=&#34;http://bendeivide.github.io/cursor/nbasico#scripts&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;scripts&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;quiz&#34;&gt;Quiz&lt;/h2&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-2&#34;&gt;
  &lt;summary&gt;Como o R trabalha?&lt;/summary&gt;
  &lt;p&gt;Acesse: &lt;a href=&#34;http://bendeivide.github.io/cursor/nbasico#rwork&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://bendeivide.github.io/cursor/nbasico#rwork&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;</description>
    </item>
    
    <item>
      <title>üì∫ Ensino Remoto 2022.1</title>
      <link>http://bendeivide.github.io/courses/epaec/remoto2022.1/</link>
      <pubDate>Tue, 14 Mar 2023 13:19:11 +0000</pubDate>
      <guid>http://bendeivide.github.io/courses/epaec/remoto2022.1/</guid>
      <description>&lt;p&gt;Curso de Estat√≠stica e Probabilidade oferecido no formato ensino remoto pela &lt;a href=&#34;http://ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;, campus Alto Paraopeba (&lt;a href=&#34;http://ufsj.edu.br/cap/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CAP&lt;/a&gt;), Ouro Branco/MG.&lt;/p&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; 4 horas por semana, por 18 semanas&lt;/p&gt;
&lt;h2 id=&#34;apresenta√ß√£o&#34;&gt;Apresenta√ß√£o&lt;/h2&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/l0JjW-E9jco&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;/br&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-microphone-alt  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Podcast&lt;/p&gt;
&lt;iframe src=&#34;https://open.spotify.com/embed/episode/5yPoI0gSWVR6rx0zVz2uys&#34; width=&#34;100%&#34; height=&#34;232&#34; frameborder=&#34;0&#34; allowtransparency=&#34;true&#34; allow=&#34;encrypted-media&#34;&gt;&lt;/iframe&gt;
&lt;h2 id=&#34;onde&#34;&gt;Onde?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;O curso √© ministrado na &lt;a href=&#34;http://ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;, campus Alto Paraopeba (&lt;a href=&#34;http://ufsj.edu.br/cap/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CAP&lt;/a&gt;), para todos os cursos de Engenharia do campus.&lt;/li&gt;
&lt;li&gt;Todas as nossas est√£o gravadas:
&lt;ul&gt;
&lt;li&gt;canal: &lt;a href=&#34;http://youtube.com/bendeivide&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://youtube.com/bendeivide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Per√≠odo: 21/03/2022 a 23/07/2022&lt;/li&gt;
&lt;li&gt;Aulas s√≠ncronas (Sala MEET): &lt;a href=&#34;meet.google.com/bzy-jwjn-cua&#34;&gt;meet.google.com/bzy-jwjn-cua&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Exerc√≠cios resolvidos e d√∫vidas:
&lt;ul&gt;
&lt;li&gt;quinta-feira (13h - 15h)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cronograma&#34;&gt;Cronograma e Fluxograma do curso&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Cronograma das aulas
&lt;div class=&#34;responsive-wrap&#34;&gt;
  &lt;iframe src=&#34;https://docs.google.com/document/d/10g4Zgnqqz06mRyibvYH1Aj9WBJjsgcO-ieg6Khkkm0M/edit?usp=sharing&#34; frameborder=&#34;0&#34; width=&#34;960&#34; height=&#34;569&#34; allowfullscreen=&#34;true&#34; mozallowfullscreen=&#34;true&#34; webkitallowfullscreen=&#34;true&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ementa&#34;&gt;Ementa&lt;/h2&gt;
&lt;p&gt;N√≥s usamos a ementa contida nos Projetos Pedag√≥gicos de Cursos (PPCs) da CAP/UFSJ&lt;/p&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-4&#34;&gt;
  &lt;summary&gt;Acesse a ementa do curso&lt;/summary&gt;
  &lt;p&gt;&lt;ol&gt;
&lt;li&gt;DEFINI√á√ïES GERAIS E T√âCNICAS DE SOMAT√ìRIO:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Defini√ß√µes Gerais&lt;/li&gt;
&lt;li&gt;T√©cnicas de somat√≥rio&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;COLETA, ORGANIZA√á√ÉO E APRESENTA√á√ÉO DE DADOS:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Representa√ß√£o tabular&lt;/li&gt;
&lt;li&gt;Representa√ß√£o gr√°fica&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;MEDIDAS DE POSI√á√ÉO:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;M√©dia&lt;/li&gt;
&lt;li&gt;Mediana&lt;/li&gt;
&lt;li&gt;Moda&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;MEDIDAS DE DISPERS√ÉO:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Amplitude total&lt;/li&gt;
&lt;li&gt;Vari√¢ncia&lt;/li&gt;
&lt;li&gt;Desvio Padr√£o&lt;/li&gt;
&lt;li&gt;Coeficiente de Varia√ß√£o&lt;/li&gt;
&lt;li&gt;Erro padr√£o da M√©dia&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;PROBABILIDADES:
&lt;ul&gt;
&lt;li&gt;Conceitos b√°sicos&lt;/li&gt;
&lt;li&gt;Defini√ß√µes de probabilidades&lt;/li&gt;
&lt;li&gt;Propriedades&lt;/li&gt;
&lt;li&gt;Eventos independentes e probabilidade condicional&lt;/li&gt;
&lt;li&gt;Teorema de Bayes&lt;/li&gt;
&lt;li&gt;Fun√ß√£o de probabilidade discreta&lt;/li&gt;
&lt;li&gt;Fun√ß√£o de probabilidade cont√≠nua&lt;/li&gt;
&lt;li&gt;Fun√ß√£o de distribui√ß√£o de probabilidade acumulada&lt;/li&gt;
&lt;li&gt;Esperan√ßa matem√°tica e vari√¢ncia&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DISTRIBUI√á√ïES DE PROBABILIDADES:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Distribui√ß√µes discretas de probabilidades&lt;/li&gt;
&lt;li&gt;Distribui√ß√µes cont√≠nuas de probabilidades&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;AMOSTRAGEM:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Amostragem n√£o-probabil√≠stica e probabil√≠stica&lt;/li&gt;
&lt;li&gt;T√©cnicas de amostragem probabil√≠stica&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DISTRIBUI√á√ÉO DE AMOSTRAGEM:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Distribui√ß√£o de amostragem da m√©dia&lt;/li&gt;
&lt;li&gt;Distribui√ß√£o de amostragem de propor√ß√µes&lt;/li&gt;
&lt;li&gt;Distribui√ß√£o de amostragem de diferen√ßa entre m√©dias&lt;/li&gt;
&lt;li&gt;Distribui√ß√µes amostrais (qui-quadrado, t e F)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;TEORIA DA ESTIMA√á√ÉO:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Conceitos b√°sicos&lt;/li&gt;
&lt;li&gt;Tipos de estimativas&lt;/li&gt;
&lt;li&gt;Propriedades de um estimador&lt;/li&gt;
&lt;li&gt;Estima√ß√£o por ponto&lt;/li&gt;
&lt;li&gt;Estima√ß√£o por intervalo:
&lt;ul&gt;
&lt;li&gt;Intervalo de confian√ßa para a m√©dia&lt;/li&gt;
&lt;li&gt;Intervalo de confian√ßa para a vari√¢ncia&lt;/li&gt;
&lt;li&gt;Intervalo de confian√ßa para a diferen√ßa entre m√©dias&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Dimensionamento de amostras&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;TEORIA DA DECIS√ÉO:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Testes de hip√≥teses&lt;/li&gt;
&lt;li&gt;Erros tipo I e II&lt;/li&gt;
&lt;li&gt;Teste unilateral e bilateral&lt;/li&gt;
&lt;li&gt;Passos para a constru√ß√£o de um teste de hip√≥teses&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses para a m√©dia&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses para a propor√ß√£o&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses para a vari√¢ncia&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses para a diferen√ßa entre m√©dias&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CORRELA√á√ÉO E REGRESS√ÉO LINEAR SIMPLES:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Correla√ß√£o linear:&lt;/li&gt;
&lt;li&gt;Coeficiente de correla√ß√£o linear&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses acerca do coeficiente de correla√ß√£o linear&lt;/li&gt;
&lt;li&gt;Regress√£o linear simples:&lt;/li&gt;
&lt;li&gt;Modelo&lt;/li&gt;
&lt;li&gt;Estima√ß√£o dos par√¢metros do modelo&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses para o modelo de regress√£o&lt;/li&gt;
&lt;li&gt;Medidas de adequa√ß√£o do modelo&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;metodologia&#34;&gt;Metodologia&lt;/h2&gt;
&lt;p&gt;Nossas aulas ser√£o divididas de acordo com as 18 semanas de aula.&lt;/p&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-5&#34;&gt;
  &lt;summary&gt;Detalhamento da metodologia&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;As aulas seguir√£o um modelo de metodologia ativa baseado nas coreografias did√°ticas. Criaremos um cen√°rio em que o propagador de conhecimento tamb√©m seja feito por parte do aluno. Ele ser√° o protagonista. Dessa forma, traremos m√©todos de aprendizagem do tipo &amp;ldquo;ensinar por aprender&amp;rdquo;, criaremos mapas mentais (&lt;a href=&#34;https://app.lucidchart.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://app.lucidchart.com&lt;/a&gt;) para nossas aulas, dentre outras t√©cnicas, para que nesse momento fique mais claro e objetivo o assunto proposto.&lt;/p&gt;
&lt;p&gt;Nossas aulas s√£o postadas pelos canais do youtube (&lt;a href=&#34;http://youtube.com/bendeivide&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://youtube.com/bendeivide&lt;/a&gt;), portal did√°tico da disciplina, reposit√≥rio GitHub (&lt;a href=&#34;http://github.com/bendeivide&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/bendeivide&lt;/a&gt;), alocaremos nas p√°ginas (&lt;a href=&#34;http://ufsj.edu.br/bendeivide&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://ufsj.edu.br/bendeivide&lt;/a&gt; e &lt;a href=&#34;http://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://bendeivide.github.io/&lt;/a&gt;), facebook (Ben Deivide), e instagram (&lt;a href=&#34;https://www.instagram.com/bendeivide/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;@bendeivide&lt;/a&gt;). Nossas aulas ter√£o &lt;strong&gt;2 (quatro) horas semanais de aulas ass√≠ncronas&lt;/strong&gt;, e &lt;strong&gt;2 (duas) horas de aulas s√≠ncronas&lt;/strong&gt;, &lt;strong&gt;totalizando em 36h de aulas ass√≠ncronas e 36h de aulas s√≠ncronas, um total de 72h&lt;/strong&gt;. Estas √∫ltimas ser√£o destinadas a d√∫vidas e resolu√ß√£o de exerc√≠cios. Usaremos tamb√©m o canal do youtube (lives), como tamb√©m o google Meet. Os hor√°rios das lives, acordaremos com os alunos, para que marquemos um hor√°rio em que grande maioria possa comparecer. De toda forma, gravaremos essas aulas, para que os demais possam tamb√©m assisti. Todas as demais informa√ß√µes ser√£o repassadas na primeira semana de aula.&lt;/p&gt;
&lt;p&gt;Irei utilizar diversas ferramentas do google como os seus editores de textos, planilhas e apresentadores. Tamb√©m utilizaremos o &lt;em&gt;overlief&lt;/em&gt; para usu√°rios de LaTeX. Com a linguagem &lt;em&gt;R&lt;/em&gt;, mostraremos documentos din√¢micos, usando o &lt;em&gt;R Markdown&lt;/em&gt; e o &lt;em&gt;shiny&lt;/em&gt;, tamb√©m para o desenvolvimento de materiais did√°ticos, quanto para as atividades com os alunos. Todas essas ferramentas tecnol√≥gicas s√£o gratuitas e de f√°cil instala√ß√£o para os alunos, uma vez que darei todo o suporte para os alunos, de forma que estejam capacitados a utilizar todas as ferramentas quando necess√°rio.&lt;/p&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;avaliacao&#34;&gt;Avalia√ß√£o&lt;/h2&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-6&#34;&gt;
  &lt;summary&gt;Segue um detalhamento das nossas avalia√ß√µes&lt;/summary&gt;
  &lt;p&gt;&lt;ul&gt;
&lt;li&gt;1¬™ Avalia√ß√£o - Se√ß√µes 1, 2, 3, 4 e  - 30 pontos&lt;/li&gt;
&lt;li&gt;2¬™ Avalia√ß√£o - Se√ß√µes 5, 6, 7 e 8  - 30 pontos&lt;/li&gt;
&lt;li&gt;3¬™ Avalia√ß√£o - Se√ß√µes 9, 10 e 11 - 40 pontos&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A nota final do aluno ser√° dada pela soma das notas das atividades avaliativas divididas por 10. Para ser aprovado o aluno dever√° obter nota final maior ou igual a 60 pontos. O discente que n√£o for aprovado por nota poder√° fazer uma avalia√ß√£o substitutiva, incluindo todo o conte√∫do da disciplina, que substituir√° a menor nota dentre as tr√™s avalia√ß√µes. As datas das avalia√ß√µes s√£o informadas na primeira semana de aula.&lt;/p&gt;
&lt;p&gt;Na metodologia &lt;em&gt;aprender por ensinar&lt;/em&gt;, poderemos destinar atividades tamb√©m pedindo aos alunos que explanem sobre determinado tema espec√≠fico para determinada aula. Para estes, as atividades da semana ser√£o dispensadas, e atribu√≠das as notas para a devida atividade da semana, proporcional ao seu desempenho, de exposi√ß√£o do tema, material utilizado para a apresenta√ß√£o, e concord√¢ncia com o assunto estudado.&lt;/p&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;bibliografia-adotada-para-a-disciplina&#34;&gt;Bibliografia adotada para a disciplina&lt;/h2&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-7&#34;&gt;
  &lt;summary&gt;Bibliografia detalhada&lt;/summary&gt;
  &lt;p&gt;&lt;ul&gt;
&lt;li&gt;MONTGOMERY, Douglas C.; RUNGER, George C.. &lt;strong&gt;Estat√≠stica aplicada e probabilidade para engenheiros&lt;/strong&gt;. 6. ed. Rio de Janeiro: LTC, 2016. 629 p. Tradu√ß√£o de: Ver√¥nica Calado.&lt;/li&gt;
&lt;li&gt;DEVORE, J. L.. &lt;strong&gt;Probabilidade e Estat√≠stica&lt;/strong&gt;: para engenharia e ci√™ncias. S√£o Paulo: Pioneira Thomson, 2006. 692 p.&lt;/li&gt;
&lt;li&gt;MORETTIN, Luiz Gonzaga. &lt;strong&gt;Estat√≠stica B√°sica&lt;/strong&gt;: Probabilidade e Infer√™ncia. S√£o Paulo: Pearson Prentice Hall, 2010. 375 p.&lt;/li&gt;
&lt;li&gt;BUSSAB, W. O.; MORETTIN, P.A. &lt;strong&gt;Estat√≠stica B√°sica&lt;/strong&gt;. 5. ed. S√£o Paulo: Saraiva, 2003.&lt;/li&gt;
&lt;li&gt;COSTA NETO, P. L. O. &lt;strong&gt;Estat√≠stica&lt;/strong&gt;. 3. ed. S√£o Paulo: Edgard Blucher, 2007.&lt;/li&gt;
&lt;li&gt;TRIOLA, M. F. &lt;strong&gt;Introdu√ß√£o √† Estat√≠stica&lt;/strong&gt;. Rio de janeiro: LTC, 2008.&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;material-adotado&#34;&gt;Material adotado&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Livro refer√™ncia: &lt;a href=&#34;http://bendeivide.github.io/book-epaec/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;EPAEC&lt;/a&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-8&#34;&gt;
  &lt;summary&gt;Materiais complementares&lt;/summary&gt;
  &lt;p&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://leg.ufpr.br/~paulojus/estbas/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Estat√≠stica B√°sica (Departamento de Estat√≠stica, UFPR)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://github.com/talesjfer/Apostila-Estatistica-Aplicada&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Estat√≠stica Aplicada (Tales Jesus Fernandes, UFLA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://repositorio.ufla.br/bitstream/1/41344/1/Gex112_0.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Resumo do Livro Estat√≠stica B√°sica (Daniel Furtado, UFLA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://educapes.capes.gov.br/bitstream/capes/432207/2/Livro_Estatistica%20e%20Probabilidade.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Estat√≠stica e Probabilidade (UECE)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.editorapantanal.com.br/ebooks/2021/estimacao-estatistica/ebook.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Estima√ß√£o Estat√≠stica (Assis, et. al. 2021)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.unifal-mg.edu.br/bibliotecas/system/files/imce/EBR_Unifal.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Introdu√ß√£o √† estat√≠stica com R (Eric Ferreira &amp;amp; Marcelo Oliveira )&lt;/a&gt;
-&lt;a href=&#34;https://livraria.ufersa.edu.br/wp-content/uploads/sites/165/2020/08/testes-de-hipoteses-estatisticas-edufersa.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Teste de Hip√≥teses Estat√≠sticas (Janilson Pinheiro de Assis et. al., UFERSA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://livraria.ufersa.edu.br/wp-content/uploads/sites/165/2019/07/Glossario-de-Estatistica_2019-1.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gloss√°rio de Estat√≠stica (Janilson Pinheiro de Assis, UFERSA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCoL7IgyKRZ6JBog71LnoGzA&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Canal Ci√™ncia Estat√≠stica&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;metodologias-ativas&#34;&gt;Metodologias ativas&lt;/h2&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-9&#34;&gt;
  &lt;summary&gt;Aprender por ensinar&lt;/summary&gt;
  &lt;p&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://drive.google.com/file/d/1QCbtxb9vCOmgD4sxBjp8D8L8Z7GObiyg/view?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Modelo de Arquivo em power point&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://drive.google.com/file/d/1Q8-YQYC48ufVJqQVj3_7VEytSouk0u_n/view?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Resultado em v√≠deo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Os programas necess√°rios:
&lt;ul&gt;
&lt;li&gt;Editor de Slides: o MS Power Point (Instalado previamente no Windows); &lt;a href=&#34;https://www.libreoffice.org/download/download/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;LibreOffice&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Gravador de tela e de seu √°udio: &lt;a href=&#34;https://obsproject.com/pt-br/download&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OBS Studio&lt;/a&gt;
OBS.: Os programas s√£o esses. Qualquer d√∫vida, favor me procurar.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/YqMQix2P1oU&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-10&#34;&gt;
  &lt;summary&gt;Mapas Mentais&lt;/summary&gt;
  &lt;p&gt;&lt;ul&gt;
&lt;li&gt;D√∫vidas de como desenvolver, fa√ßa uso dos buscadores na internet, v√≠deo-aulas, etc. H√° muito material interessante na internet;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1tpHtGiDbpQ01zoxhOmQMa4Rqf4G6JbMO2c6EYdyrQCo/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Modelo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-11&#34;&gt;
  &lt;summary&gt;Resumo de Cornell&lt;/summary&gt;
  &lt;p&gt;&lt;ul&gt;
&lt;li&gt;D√∫vidas de como desenvolver, fa√ßa uso dos buscadores na internet, v√≠deo-aulas, etc. H√° muito material interessante na internet;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1XEc3IWEcn2Kx40XjaOGF-wKAXHseTrOqbcIibdOmod8/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Modelo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;semanas-aulas&#34;&gt;Semanas (AULAS)&lt;/h2&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-12&#34;&gt;
  &lt;summary&gt;Semana 9 (16-20/05/22)&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-sampling.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 7: &lt;em&gt;Amostragem&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-cap8.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 8: &lt;em&gt;Distribui√ß√µes amostrais&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1qgq5uhQee_-kzsPfcRooZ7gUiZD2X3Yq1tYRqgTeZG0/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tempo: 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Podcast&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Material escrito sobre o assunto
- &lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-sampling.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 7: &lt;em&gt;Amostragem&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-cap8.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 8: &lt;em&gt;Distribui√ß√µes amostrais&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Exerc√≠cios Propostos (&lt;a href=&#34;&#34;&gt;Cap. 7&lt;/a&gt;, &lt;a href=&#34;&#34;&gt;Cap. 8&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula te√≥rica (Aula ass√≠ncrona)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/lv575JfSVeY&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/br&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula te√≥rica e de exerc√≠cios resolvidos (Aula ass√≠ncrona)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/HXB1Y09C3Q4&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;br/&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula te√≥rica e de exerc√≠cios resolvidos (Aula ass√≠ncrona)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/inVZFge6hjk&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-13&#34;&gt;
  &lt;summary&gt;Semana 10 (23-27/05/22)&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema: Revis√£o para a prova 2&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aulas referentes ao cap√≠tulo 5, 6, 7, 8&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/iyJfr8kveM8&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/Cr2FzwFSxes&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/yAbdNyy44QQ&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/lv575JfSVeY&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/HXB1Y09C3Q4&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/inVZFge6hjk&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-14&#34;&gt;
  &lt;summary&gt;Semana 11 (30/05 - 3/06/22)&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Semana da prova 2&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Prova dia 02/06/2022, aberto durante o dia, por√©m prova com 2h de dura√ß√£o, uma vez sendo aberta (Via portal did√°tico)&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Estudo complementar para a semana:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o ao R (Parte I)&lt;/li&gt;
&lt;li&gt;Introdu√ß√£o ao R (Parte II)&lt;/li&gt;
&lt;li&gt;Introdu√ß√£o ao R (Parte III)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula sobre introdu√ß√£o ao R (Parte I)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/IIwd05FQa04&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/br&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula sobre introdu√ß√£o ao R (Parte II)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/uFvKMDOvccg&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;br/&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula sobre introdu√ß√£o ao R (Parte III)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/h1_EGAAHPZY&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-15&#34;&gt;
  &lt;summary&gt;Semana 12 (06-10/06/22)&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-teoest.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 9: &lt;em&gt;Teoria da Estima√ß√£o&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1EyGEIOdbod2s6GYMMav879-TuPyuZhAI2kKajH-NFdU/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tempo: 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Podcast&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Material escrito sobre o assunto&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-teoest.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 9: &lt;em&gt;Teoria da Estima√ß√£o&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Exerc√≠cios Propostos (&lt;a href=&#34;&#34;&gt;Cap. 9&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Scripts
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/r-scripts/aula25.R&#34; target=&#34;_blank&#34;&gt;Aula25.R&lt;/a&gt;, &lt;a href=&#34;http://bendeivide.github.io/r-scripts/aula27.R&#34; target=&#34;_blank&#34;&gt;Aula27.R&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula te√≥rica (Aula ass√≠ncrona)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/wOePk5UupBY&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/br&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula te√≥rica e de exerc√≠cios resolvidos (Aula ass√≠ncrona)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/hsFQ2MEZYIY&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;br/&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula te√≥rica e de exerc√≠cios resolvidos (Aula ass√≠ncrona)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/wk46c8ocOew&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-16&#34;&gt;
  &lt;summary&gt;Semana 13 (13-17/06/22)&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-teodec.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 10: &lt;em&gt;Teoria da Decis√£o&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1l03kPLy1hc-4OSO5l0I0Qym6jjWXK68ZLASgMk5qRWs/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tempo: 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Podcast&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Material escrito sobre o assunto&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-teodec.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 10: &lt;em&gt;Teoria da Decis√£o&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Exerc√≠cios Propostos (&lt;a href=&#34;&#34;&gt;Cap. 10&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Scripts
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/r-scripts/aula28.R&#34; target=&#34;_blank&#34;&gt;Aula28.R&lt;/a&gt;, &lt;a href=&#34;http://bendeivide.github.io/r-scripts/aula29.R&#34; target=&#34;_blank&#34;&gt;Aula29.R&lt;/a&gt;, &lt;a href=&#34;http://bendeivide.github.io/r-scripts/aula30.R&#34; target=&#34;_blank&#34;&gt;Aula30.R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Shiny
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://bendeivide.shinyapps.io/Est_Exp/#section-revis%C3%A3o-sobre-teste-de-hip%C3%B3teses&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Revis√£o sobre testes de Hip√≥teses&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula te√≥rica (Aula ass√≠ncrona)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/ODvqwgqnUSw&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/br&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula te√≥rica e de exerc√≠cios resolvidos (Aula ass√≠ncrona)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/Kkeleyj1s0c&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;br/&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula te√≥rica e de exerc√≠cios resolvidos (Aula ass√≠ncrona)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/K3vNKV1tFfY&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-17&#34;&gt;
  &lt;summary&gt;Semana 14 (20-24/06/22)&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-cor-reg.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 11: &lt;em&gt;Regress√£o Linear Simples&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1x-za421EvQl1SrTVwN_RnHKSVpw6sTSjQQvJCH1D6Sg/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tempo: 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Podcast&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Material escrito sobre o assunto&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-cor-reg.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 11: &lt;em&gt;Regress√£o Linear Simples&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Exerc√≠cios Propostos (&lt;a href=&#34;&#34;&gt;Cap. 11&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Scripts
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/r-scripts/aula31.R&#34; target=&#34;_blank&#34;&gt;Aula31.R&lt;/a&gt;, &lt;a href=&#34;http://bendeivide.github.io/r-scripts/aula32.R&#34; target=&#34;_blank&#34;&gt;Aula32.R&lt;/a&gt;, &lt;a href=&#34;http://bendeivide.github.io/r-scripts/aula33.R&#34; target=&#34;_blank&#34;&gt;Aula33.R&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula te√≥rica (Aula ass√≠ncrona)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/b7sujMt7zzo&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/br&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula te√≥rica e de exerc√≠cios resolvidos (Aula ass√≠ncrona)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/Wqi9MezUj7s&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;br/&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula te√≥rica e de exerc√≠cios resolvidos (Aula ass√≠ncrona)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/EjjSCbDiOY4&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-18&#34;&gt;
  &lt;summary&gt;Semana 15 (27/07 - 08/07/22)&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema: Revis√£o para prova 3 e:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o ao R (Parte VII)&lt;/li&gt;
&lt;li&gt;Introdu√ß√£o ao R (Parte VIII)&lt;/li&gt;
&lt;li&gt;Introdu√ß√£o ao R (Parte IX)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/19CWsUHqVnqOVPEasKP0HrOM_M_BhkGqmcCoOZaa0WU8/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tempo: 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Podcast&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Material escrito sobre o assunto&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/cursor/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso R - Programa√ß√£o em R (N√≠vel B√°sico)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.shinyapps.io/Curso-R/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Exerc√≠cios Propostos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/cursor/nbasico.html#scripts&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Scripts
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula sobre introdu√ß√£o ao R (Parte VII)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/7tpe_1_RC_E&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/br&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula sobre introdu√ß√£o ao R (Parte VIII)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/pqLyntw_iB4&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;br/&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula sobre introdu√ß√£o ao R (Parte IX)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/lMFFKqcJxcI&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-19&#34;&gt;
  &lt;summary&gt;Semana 16 (04-08/07/22)&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Semana da prova 3&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Prova dia 07/07/2022, aberto durante o dia, por√©m prova com 2h de dura√ß√£o, uma vez sendo aberta (Via portal did√°tico)&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Conte√∫do complementar durante a semana:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Reapresenta√ß√£o da palestra intitulada &lt;strong&gt;&amp;ldquo;R como uma ferramenta acad√™mica&amp;rdquo;&lt;/strong&gt;, realizada na UFPI&lt;/li&gt;
&lt;/ul&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/_43yBb_s-R8&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-20&#34;&gt;
  &lt;summary&gt;Semana 17 (11-15/07/22)&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Segunda Chamada&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Prova dia 14/07/2022, aberto durante o dia, por√©m prova com 2h de dura√ß√£o, uma vez sendo aberta (Via portal did√°tico)&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Conte√∫do complementar durante a semana:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Reapresenta√ß√£o da palestra intitulada &lt;strong&gt;&amp;ldquo;Desenvolvimento de pacotes R&amp;rdquo;&lt;/strong&gt;, realizada nos &lt;a href=&#34;https://ufsj.edu.br/demat/scm.php&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Semin√°rios - Caf√© com Matem√°tica - DEMAT/UFSJ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/mGUY6Cxzr58&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-21&#34;&gt;
  &lt;summary&gt;Semana 18 (18-22/07/22)&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Prova substitutiva&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Prova dia 21/07/2022, aberto durante o dia, por√©m prova com 2h de dura√ß√£o, uma vez sendo aberta (Via portal did√°tico)&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Conte√∫do complementar durante a semana:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Reapresenta√ß√£o da palestra intitulada &lt;strong&gt;&amp;ldquo;R al√©m das an√°lises estat√≠sticas&amp;rdquo;&lt;/strong&gt;, realizada nos &lt;a href=&#34;https://youtu.be/wnOGptAI5Zs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Programa de Ver√£o DES/ICET/UFLA, 2022&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/wnOGptAI5Zs&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;quiz&#34;&gt;Quiz&lt;/h2&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-22&#34;&gt;
  &lt;summary&gt;Quais as datas de avalia√ß√£o?&lt;/summary&gt;
  &lt;p&gt;Acessem: &lt;a href=&#34;#avaliacao&#34;&gt;Avalia√ß√£o&lt;/a&gt; e &lt;a href=&#34;#cronograma&#34;&gt;Cronograma&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-23&#34;&gt;
  &lt;summary&gt;Onde ocorrem as aulas s√≠ncronas?&lt;/summary&gt;
  &lt;p&gt;Acesse o portal did√°tico, e verifique no bloco &lt;strong&gt;Informa√ß√µes Gerais&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;</description>
    </item>
    
    <item>
      <title>Programa√ß√£o em R (N√≠vel Intermedi√°rio)</title>
      <link>http://bendeivide.github.io/courses/cursor/nintermediario/</link>
      <pubDate>Thu, 29 Jul 2021 21:18:41 +0000</pubDate>
      <guid>http://bendeivide.github.io/courses/cursor/nintermediario/</guid>
      <description>&lt;p&gt;Programando em n√≠vel intermedi√°rio o &lt;a href=&#34;http://r-project.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; 5 horas por semana, por 8 semanas
Per√≠odo de 30/07/2021 a 30/09/2021&lt;/p&gt;
&lt;h2 id=&#34;apresenta√ß√£o&#34;&gt;Apresenta√ß√£o&lt;/h2&gt;
&lt;p&gt;Esse m√≥dulo ter√° o objetivo de detalhar o ambiente R, caracterizando melhor a sua linguagem, aprofundando &lt;strong&gt;manipula√ß√µes de objetos&lt;/strong&gt;, &lt;strong&gt;c√≥pias de objetos&lt;/strong&gt;, bem como &lt;strong&gt;ambientes&lt;/strong&gt;. Falaremos sobre a cria√ß√£o de gr√°ficos e &lt;strong&gt;documenta√ß√µes em R&lt;/strong&gt;. Complementaremos tamb√©m, sobre assuntos mais aprofundados como &lt;strong&gt;programa√ß√£o funcional&lt;/strong&gt;, &lt;strong&gt;programa√ß√£o orientada a objetos&lt;/strong&gt;, &lt;strong&gt;metaprograma√ß√£o&lt;/strong&gt; e uma introdu√ß√£o sobre &lt;strong&gt;desenvolvimento de pacotes&lt;/strong&gt;.&lt;/p&gt;
&lt;!-- 
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/_JqtU3X101E&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
 --&gt;
&lt;h2 id=&#34;lembrete-do-curso&#34;&gt;Lembrete do Curso&lt;/h2&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/iLE_afepQuk&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2 id=&#34;live-de-apresenta√ß√£o-do-curso&#34;&gt;&lt;em&gt;Live&lt;/em&gt; de Apresenta√ß√£o do Curso&lt;/h2&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/tegLquZ1jsw&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2 id=&#34;inscricao&#34;&gt;Como fazer a inscri√ß√£o?&lt;/h2&gt;
&lt;p&gt;
  &lt;i class=&#34;far fa-calendar-check  pr-1 fa-fw&#34;&gt;&lt;/i&gt; 04/06/2021 - 25/07/2021&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Incri√ß√£o (GRATUITA E COM CERTIFICADO - CATEL/UFSJ):&lt;/li&gt;
&lt;/ul&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-3&#34;&gt;
  &lt;summary&gt;Inscri√ß√£o Aqui!&lt;/summary&gt;
  &lt;p&gt;&lt;iframe src=&#34;https://docs.google.com/forms/d/e/1FAIpQLSdiZnLPYuu9OWed_ECYrVv1U9L4NxGh9BZjAjAe0KnBEflcWQ/viewform?embedded=true&#34; width=&#34;640&#34; height=&#34;1920&#34; frameborder=&#34;0&#34; marginheight=&#34;0&#34; marginwidth=&#34;0&#34;&gt;Carregando‚Ä¶&lt;/iframe&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;onde-ser√°-ministrado&#34;&gt;Onde ser√° ministrado?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;O curso ser√° ministrado pelo canal do &lt;a href=&#34;https://youtube.com/bendeivide&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Youtube/Ben D√™ivide&lt;/a&gt;. Se inscreva no canal e ative o sininho, pois disponibilizaremos as v√≠deo-aulas toda semana (30/07/2021 a 30/09/2021).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;material&#34;&gt;Material&lt;/h2&gt;
&lt;p&gt;O material encontra-se dispon√≠vel em &lt;a href=&#34;http://bendeivide.github.io/cursor/nintermediario&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://bendeivide.github.io/cursor/nintermediario&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;v√≠deo-aulas&#34;&gt;V√≠deo-aulas&lt;/h2&gt;
&lt;p&gt;Todas as v√≠deo-aulas encontram-se no material informado anteriormente, como tamb√©m pela playlist &lt;a href=&#34;https://youtube.com/playlist?list=PL-20Z1XFWKR2K-rWoInwE1WnwtBiulX2S&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso R&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;exerc√≠cios&#34;&gt;Exerc√≠cios&lt;/h2&gt;
&lt;p&gt;Os exerc√≠cios do curso, podem ser desenvolvidos via &lt;em&gt;web&lt;/em&gt; em &lt;a href=&#34;https://bendeivide.shinyapps.io/Curso-R/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://bendeivide.shinyapps.io/Curso-R/&lt;/a&gt;, como tamb√©m √© poss√≠vel baixar todos os &lt;a href=&#34;http://bendeivide.github.io/cursor/nintermediario#scripts&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;scripts&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;quiz&#34;&gt;Quiz&lt;/h2&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-4&#34;&gt;
  &lt;summary&gt;Como encontrar o m√≥dulo B√°sico do curso R?&lt;/summary&gt;
  &lt;p&gt;Acesse: &lt;a href=&#34;http://bendeivide.github.io/cursor/nbasico&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://bendeivide.github.io/cursor/nbasico&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-5&#34;&gt;
  &lt;summary&gt;Onde fa√ßo a inscri√ß√£o?&lt;/summary&gt;
  &lt;p&gt;Acesse: &lt;a href=&#34;http://bendeivide.github.io/cursor/nbasico&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://bendeivide.github.io/cursor/nbasico&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;</description>
    </item>
    
    <item>
      <title>üì∫ Ensino Remoto 2021.2</title>
      <link>http://bendeivide.github.io/courses/epaec/remoto/</link>
      <pubDate>Tue, 14 Mar 2023 13:18:51 +0000</pubDate>
      <guid>http://bendeivide.github.io/courses/epaec/remoto/</guid>
      <description>&lt;p&gt;Curso de Estat√≠stica e Probabilidade oferecido no formato ensino remoto pela &lt;a href=&#34;http://ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;, campus Alto Paraopeba (&lt;a href=&#34;http://ufsj.edu.br/cap/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CAP&lt;/a&gt;), Ouro Branco/MG.&lt;/p&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; 4 horas por semana, por 14 semanas (13/09/2021 a 17/12/2021)&lt;/p&gt;
&lt;h2 id=&#34;apresenta√ß√£o&#34;&gt;Apresenta√ß√£o&lt;/h2&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/l0JjW-E9jco&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;/br&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-microphone-alt  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Podcast&lt;/p&gt;
&lt;iframe src=&#34;https://open.spotify.com/embed/episode/5yPoI0gSWVR6rx0zVz2uys&#34; width=&#34;100%&#34; height=&#34;232&#34; frameborder=&#34;0&#34; allowtransparency=&#34;true&#34; allow=&#34;encrypted-media&#34;&gt;&lt;/iframe&gt;
&lt;h2 id=&#34;onde&#34;&gt;Onde?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;O curso √© ministrado na &lt;a href=&#34;http://ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;, campus Alto Paraopeba (&lt;a href=&#34;http://ufsj.edu.br/cap/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CAP&lt;/a&gt;), para todos os cursos de Engenharia do campus.&lt;/li&gt;
&lt;li&gt;Todas as nossas est√£o gravadas:
&lt;ul&gt;
&lt;li&gt;canal: &lt;a href=&#34;http://youtube.com/bendeivide&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://youtube.com/bendeivide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Per√≠odo: 13/09/2021 a 17/12/2021&lt;/li&gt;
&lt;li&gt;Aulas s√≠ncronas (Sala MEET):
&lt;ul&gt;
&lt;li&gt;Exerc√≠cios resolvidos e d√∫vidas:
&lt;ul&gt;
&lt;li&gt;quarta-feira (17h05min. - 18h55min.)&lt;/li&gt;
&lt;li&gt;quinta-feira (19h05min. - 20h50min.)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cronograma&#34;&gt;Cronograma e Fluxograma do curso&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1mEgSlU8CsOSmrH36PrDVP8A0JokRJX-ZVvZRKqTjWts&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fluxograma do curso&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Cronograma das aulas
&lt;div class=&#34;responsive-wrap&#34;&gt;
  &lt;iframe src=&#34;https://docs.google.com/document/d/13MF8VGm_Jo-sjd_gH8M9LMOuP3pqrds4no-HyrmIzOc&#34; frameborder=&#34;0&#34; width=&#34;960&#34; height=&#34;569&#34; allowfullscreen=&#34;true&#34; mozallowfullscreen=&#34;true&#34; webkitallowfullscreen=&#34;true&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ementa&#34;&gt;Ementa&lt;/h2&gt;
&lt;p&gt;N√≥s usamos a ementa contida nos Projetos Pedag√≥gicos de Cursos (PPCs) da CAP/UFSJ&lt;/p&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-4&#34;&gt;
  &lt;summary&gt;Acesse a ementa do curso&lt;/summary&gt;
  &lt;p&gt;&lt;ol&gt;
&lt;li&gt;DEFINI√á√ïES GERAIS E T√âCNICAS DE SOMAT√ìRIO:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Defini√ß√µes Gerais&lt;/li&gt;
&lt;li&gt;T√©cnicas de somat√≥rio&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;COLETA, ORGANIZA√á√ÉO E APRESENTA√á√ÉO DE DADOS:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Representa√ß√£o tabular&lt;/li&gt;
&lt;li&gt;Representa√ß√£o gr√°fica&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;MEDIDAS DE POSI√á√ÉO:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;M√©dia&lt;/li&gt;
&lt;li&gt;Mediana&lt;/li&gt;
&lt;li&gt;Moda&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;MEDIDAS DE DISPERS√ÉO:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Amplitude total&lt;/li&gt;
&lt;li&gt;Vari√¢ncia&lt;/li&gt;
&lt;li&gt;Desvio Padr√£o&lt;/li&gt;
&lt;li&gt;Coeficiente de Varia√ß√£o&lt;/li&gt;
&lt;li&gt;Erro padr√£o da M√©dia&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;PROBABILIDADES:
&lt;ul&gt;
&lt;li&gt;Conceitos b√°sicos&lt;/li&gt;
&lt;li&gt;Defini√ß√µes de probabilidades&lt;/li&gt;
&lt;li&gt;Propriedades&lt;/li&gt;
&lt;li&gt;Eventos independentes e probabilidade condicional&lt;/li&gt;
&lt;li&gt;Teorema de Bayes&lt;/li&gt;
&lt;li&gt;Fun√ß√£o de probabilidade discreta&lt;/li&gt;
&lt;li&gt;Fun√ß√£o de probabilidade cont√≠nua&lt;/li&gt;
&lt;li&gt;Fun√ß√£o de distribui√ß√£o de probabilidade acumulada&lt;/li&gt;
&lt;li&gt;Esperan√ßa matem√°tica e vari√¢ncia&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DISTRIBUI√á√ïES DE PROBABILIDADES:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Distribui√ß√µes discretas de probabilidades&lt;/li&gt;
&lt;li&gt;Distribui√ß√µes cont√≠nuas de probabilidades&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;AMOSTRAGEM:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Amostragem n√£o-probabil√≠stica e probabil√≠stica&lt;/li&gt;
&lt;li&gt;T√©cnicas de amostragem probabil√≠stica&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DISTRIBUI√á√ÉO DE AMOSTRAGEM:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Distribui√ß√£o de amostragem da m√©dia&lt;/li&gt;
&lt;li&gt;Distribui√ß√£o de amostragem de propor√ß√µes&lt;/li&gt;
&lt;li&gt;Distribui√ß√£o de amostragem de diferen√ßa entre m√©dias&lt;/li&gt;
&lt;li&gt;Distribui√ß√µes amostrais (qui-quadrado, t e F)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;TEORIA DA ESTIMA√á√ÉO:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Conceitos b√°sicos&lt;/li&gt;
&lt;li&gt;Tipos de estimativas&lt;/li&gt;
&lt;li&gt;Propriedades de um estimador&lt;/li&gt;
&lt;li&gt;Estima√ß√£o por ponto&lt;/li&gt;
&lt;li&gt;Estima√ß√£o por intervalo:
&lt;ul&gt;
&lt;li&gt;Intervalo de confian√ßa para a m√©dia&lt;/li&gt;
&lt;li&gt;Intervalo de confian√ßa para a vari√¢ncia&lt;/li&gt;
&lt;li&gt;Intervalo de confian√ßa para a diferen√ßa entre m√©dias&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Dimensionamento de amostras&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;TEORIA DA DECIS√ÉO:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Testes de hip√≥teses&lt;/li&gt;
&lt;li&gt;Erros tipo I e II&lt;/li&gt;
&lt;li&gt;Teste unilateral e bilateral&lt;/li&gt;
&lt;li&gt;Passos para a constru√ß√£o de um teste de hip√≥teses&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses para a m√©dia&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses para a propor√ß√£o&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses para a vari√¢ncia&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses para a diferen√ßa entre m√©dias&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CORRELA√á√ÉO E REGRESS√ÉO LINEAR SIMPLES:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Correla√ß√£o linear:&lt;/li&gt;
&lt;li&gt;Coeficiente de correla√ß√£o linear&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses acerca do coeficiente de correla√ß√£o linear&lt;/li&gt;
&lt;li&gt;Regress√£o linear simples:&lt;/li&gt;
&lt;li&gt;Modelo&lt;/li&gt;
&lt;li&gt;Estima√ß√£o dos par√¢metros do modelo&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses para o modelo de regress√£o&lt;/li&gt;
&lt;li&gt;Medidas de adequa√ß√£o do modelo&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;metodologia&#34;&gt;Metodologia&lt;/h2&gt;
&lt;p&gt;Nossas aulas ser√£o divididas de acordo com as 14 semanas de aula.&lt;/p&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-5&#34;&gt;
  &lt;summary&gt;Detalhamento da metodologia&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;As aulas seguir√£o um modelo de metodologia ativa baseado nas coreografias did√°ticas. Criaremos um cen√°rio em que o propagador de conhecimento tamb√©m seja feito por parte do aluno. Ele ser√° o protagonista. Dessa forma, traremos m√©todos de aprendizagem do tipo &amp;ldquo;ensinar por aprender&amp;rdquo;, criaremos mapas mentais (&lt;a href=&#34;https://app.lucidchart.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://app.lucidchart.com&lt;/a&gt;) para nossas aulas, dentre outras t√©cnicas, para que nesse momento fique mais claro e objetivo o assunto proposto.&lt;/p&gt;
&lt;p&gt;Nossas aulas s√£o postadas pelos canais do youtube (&lt;a href=&#34;http://youtube.com/bendeivide&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://youtube.com/bendeivide&lt;/a&gt;), portal did√°tico da disciplina, reposit√≥rio GitHub (&lt;a href=&#34;http://github.com/bendeivide&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/bendeivide&lt;/a&gt;), alocaremos nas p√°ginas (&lt;a href=&#34;http://ufsj.edu.br/bendeivide&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://ufsj.edu.br/bendeivide&lt;/a&gt; e &lt;a href=&#34;http://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://bendeivide.github.io/&lt;/a&gt;), facebook (Ben Deivide), e instagram (&lt;a href=&#34;https://www.instagram.com/bendeivide/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;@bendeivide&lt;/a&gt;). Nossas aulas ter√£o &lt;strong&gt;4 (quatro) horas semanais de aulas ass√≠ncronas&lt;/strong&gt;, e &lt;strong&gt;2 (duas) horas de aulas s√≠ncronas&lt;/strong&gt;, &lt;strong&gt;totalizando em 48h de aulas ass√≠ncronas e 24h de aulas s√≠ncronas, um total de 72h&lt;/strong&gt;. Estas √∫ltimas ser√£o destinadas a d√∫vidas e resolu√ß√£o de exerc√≠cios. Usaremos tamb√©m o canal do youtube (lives), como tamb√©m o google Meet. Os hor√°rios das lives, acordaremos com os alunos, para que marquemos um hor√°rio em que grande maioria possa comparecer. De toda forma, gravaremos essas aulas, para que os demais possam tamb√©m assisti. Todas as demais informa√ß√µes ser√£o repassadas na primeira semana de aula.&lt;/p&gt;
&lt;p&gt;Irei utilizar diversas ferramentas do google como os seus editores de textos, planilhas e apresentadores. Tamb√©m utilizaremos o &lt;em&gt;overlief&lt;/em&gt; para usu√°rios de LaTeX. Com a linguagem &lt;em&gt;R&lt;/em&gt;, mostraremos documentos din√¢micos, usando o &lt;em&gt;R Markdown&lt;/em&gt; e o &lt;em&gt;shiny&lt;/em&gt;, tamb√©m para o desenvolvimento de materiais did√°ticos, quanto para as atividades com os alunos. Todas essas ferramentas tecnol√≥gicas s√£o gratuitas e de f√°cil instala√ß√£o para os alunos, uma vez que darei todo o suporte para os alunos, de forma que estejam capacitados a utilizar todas as ferramentas quando necess√°rio.&lt;/p&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;avaliacao&#34;&gt;Avalia√ß√£o&lt;/h2&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-6&#34;&gt;
  &lt;summary&gt;Segue um detalhamento das nossas avalia√ß√µes&lt;/summary&gt;
  &lt;p&gt;&lt;ul&gt;
&lt;li&gt;1¬™ Avalia√ß√£o - Se√ß√µes 1, 2, 3, 4 e  - 30 pontos&lt;/li&gt;
&lt;li&gt;2¬™ Avalia√ß√£o - Se√ß√µes 5, 6, 7 e 8 - 30 pontos&lt;/li&gt;
&lt;li&gt;3¬™ Avalia√ß√£o - Se√ß√µes 9, 10 e 11 - 40 pontos&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A nota final do aluno ser√° dada pela soma das notas das atividades avaliativas divididas por 10. Para ser aprovado o aluno dever√° obter nota final maior ou igual a 60 pontos. O discente que n√£o for aprovado por nota poder√° fazer uma avalia√ß√£o substitutiva, incluindo todo o conte√∫do da disciplina, que substituir√° a menor nota dentre as tr√™s avalia√ß√µes. As datas das avalia√ß√µes s√£o informadas na primeira semana de aula.&lt;/p&gt;
&lt;p&gt;Na metodologia &lt;em&gt;aprender por ensinar&lt;/em&gt;, poderemos destinar atividades tamb√©m pedindo aos alunos que explanem sobre determinado tema espec√≠fico para determinada aula. Para estes, as atividades da semana ser√£o dispensadas, e atribu√≠das as notas para a devida atividade da semana, proporcional ao seu desempenho, de exposi√ß√£o do tema, material utilizado para a apresenta√ß√£o, e concord√¢ncia com o assunto estudado.&lt;/p&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;bibliografia-adotada-para-a-disciplina&#34;&gt;Bibliografia adotada para a disciplina&lt;/h2&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-7&#34;&gt;
  &lt;summary&gt;Bibliografia detalhada&lt;/summary&gt;
  &lt;p&gt;&lt;ul&gt;
&lt;li&gt;MONTGOMERY, Douglas C.; RUNGER, George C.. &lt;strong&gt;Estat√≠stica aplicada e probabilidade para engenheiros&lt;/strong&gt;. 6. ed. Rio de Janeiro: LTC, 2016. 629 p. Tradu√ß√£o de: Ver√¥nica Calado.&lt;/li&gt;
&lt;li&gt;DEVORE, J. L.. &lt;strong&gt;Probabilidade e Estat√≠stica&lt;/strong&gt;: para engenharia e ci√™ncias. S√£o Paulo: Pioneira Thomson, 2006. 692 p.&lt;/li&gt;
&lt;li&gt;MORETTIN, Luiz Gonzaga. &lt;strong&gt;Estat√≠stica B√°sica&lt;/strong&gt;: Probabilidade e Infer√™ncia. S√£o Paulo: Pearson Prentice Hall, 2010. 375 p.&lt;/li&gt;
&lt;li&gt;BUSSAB, W. O.; MORETTIN, P.A. &lt;strong&gt;Estat√≠stica B√°sica&lt;/strong&gt;. 5. ed. S√£o Paulo: Saraiva, 2003.&lt;/li&gt;
&lt;li&gt;COSTA NETO, P. L. O. &lt;strong&gt;Estat√≠stica&lt;/strong&gt;. 3. ed. S√£o Paulo: Edgard Blucher, 2007.&lt;/li&gt;
&lt;li&gt;TRIOLA, M. F. &lt;strong&gt;Introdu√ß√£o √† Estat√≠stica&lt;/strong&gt;. Rio de janeiro: LTC, 2008.&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;material-adotado&#34;&gt;Material adotado&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Livro refer√™ncia: &lt;a href=&#34;http://bendeivide.github.io/book-epaec/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;EPAEC&lt;/a&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-8&#34;&gt;
  &lt;summary&gt;Materiais complementares&lt;/summary&gt;
  &lt;p&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://leg.ufpr.br/~paulojus/estbas/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Estat√≠stica B√°sica (Departamento de Estat√≠stica, UFPR)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://github.com/talesjfer/Apostila-Estatistica-Aplicada&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Estat√≠stica Aplicada (Tales Jesus Fernandes, UFLA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://repositorio.ufla.br/bitstream/1/41344/1/Gex112_0.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Resumo do Livro Estat√≠stica B√°sica (Daniel Furtado, UFLA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://educapes.capes.gov.br/bitstream/capes/432207/2/Livro_Estatistica%20e%20Probabilidade.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Estat√≠stica e Probabilidade (UECE)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.editorapantanal.com.br/ebooks/2021/estimacao-estatistica/ebook.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Estima√ß√£o Estat√≠stica (Assis, et. al. 2021)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.unifal-mg.edu.br/bibliotecas/system/files/imce/EBR_Unifal.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Introdu√ß√£o √† estat√≠stica com R (Eric Ferreira &amp;amp; Marcelo Oliveira )&lt;/a&gt;
-&lt;a href=&#34;https://livraria.ufersa.edu.br/wp-content/uploads/sites/165/2020/08/testes-de-hipoteses-estatisticas-edufersa.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Teste de Hip√≥teses Estat√≠sticas (Janilson Pinheiro de Assis et. al., UFERSA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://livraria.ufersa.edu.br/wp-content/uploads/sites/165/2019/07/Glossario-de-Estatistica_2019-1.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gloss√°rio de Estat√≠stica (Janilson Pinheiro de Assis, UFERSA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCoL7IgyKRZ6JBog71LnoGzA&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Canal Ci√™ncia Estat√≠stica&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;metodologias-ativas&#34;&gt;Metodologias ativas&lt;/h2&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-9&#34;&gt;
  &lt;summary&gt;Aprender por ensinar&lt;/summary&gt;
  &lt;p&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://drive.google.com/file/d/1QCbtxb9vCOmgD4sxBjp8D8L8Z7GObiyg/view?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Modelo de Arquivo em power point&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://drive.google.com/file/d/1Q8-YQYC48ufVJqQVj3_7VEytSouk0u_n/view?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Resultado em v√≠deo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Os programas necess√°rios:
&lt;ul&gt;
&lt;li&gt;Editor de Slides: o MS Power Point (Instalado previamente no Windows); &lt;a href=&#34;https://www.libreoffice.org/download/download/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;LibreOffice&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Gravador de tela e de seu √°udio: &lt;a href=&#34;https://obsproject.com/pt-br/download&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OBS Studio&lt;/a&gt;
OBS.: Os programas s√£o esses. Qualquer d√∫vida, favor me procurar.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/YqMQix2P1oU&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-10&#34;&gt;
  &lt;summary&gt;Mapas Mentais&lt;/summary&gt;
  &lt;p&gt;&lt;ul&gt;
&lt;li&gt;D√∫vidas de como desenvolver, fa√ßa uso dos buscadores na internet, v√≠deo-aulas, etc. H√° muito material interessante na internet;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1tpHtGiDbpQ01zoxhOmQMa4Rqf4G6JbMO2c6EYdyrQCo/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Modelo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-11&#34;&gt;
  &lt;summary&gt;Resumo de Cornell&lt;/summary&gt;
  &lt;p&gt;&lt;ul&gt;
&lt;li&gt;D√∫vidas de como desenvolver, fa√ßa uso dos buscadores na internet, v√≠deo-aulas, etc. H√° muito material interessante na internet;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1XEc3IWEcn2Kx40XjaOGF-wKAXHseTrOqbcIibdOmod8/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Modelo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;semanas-aulas&#34;&gt;Semanas (AULAS)&lt;/h2&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-12&#34;&gt;
  &lt;summary&gt;Semana 1 (13-17/09/21)&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/dgets.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 1: &lt;em&gt;Defini√ß√µes gerais e t√©cnicas de somat√≥rio&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-coad.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 2: &lt;em&gt;Coleta, organiza√ß√£o e apresenta√ß√£o de dados&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1lqP6CwpRPd4FnOvU_EULI4MzwxccrZ7Zo3BsKFwONRk/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tempo: 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Podcast&lt;/p&gt;
&lt;iframe src=&#34;https://open.spotify.com/embed/episode/00QWz0x2xOdXCdC2uLCvbU&#34; width=&#34;100%&#34; height=&#34;232&#34; frameborder=&#34;0&#34; allowtransparency=&#34;true&#34; allow=&#34;encrypted-media&#34;&gt;&lt;/iframe&gt;
&lt;/br&gt;
&lt;iframe src=&#34;https://open.spotify.com/embed/show/0NhBadqLICDJjoYRGNgrxv&#34; width=&#34;100%&#34; height=&#34;232&#34; frameborder=&#34;0&#34; allowtransparency=&#34;true&#34; allow=&#34;encrypted-media&#34;&gt;&lt;/iframe&gt;
&lt;/br&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Material escrito sobre o assunto&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/dgets.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 1: &lt;em&gt;Defini√ß√µes gerais e t√©cnicas de somat√≥rio&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-coad.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 2: &lt;em&gt;Coleta, organiza√ß√£o e apresenta√ß√£o de dados&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Exerc√≠cios Propostos (&lt;a href=&#34;https://bendeivide.github.io/book-epaec/dgets.html#exerc%C3%ADcios-prospostos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap. 1&lt;/a&gt;, &lt;a href=&#34;https://bendeivide.github.io/book-epaec/dgets.html#exerc%C3%ADcios-propostos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap. 2&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Scripts
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/r-scripts/aula01.R&#34; target=&#34;_blank&#34;&gt;Aula01.R&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula te√≥rica (Aula ass√≠ncrona)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/bVObtgCFISs&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/br&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula de exerc√≠cios resolvidos (Aula ass√≠ncrona)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/DZ4PzyY5YYg&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;br/&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula de exerc√≠cios resolvidos (Aula ass√≠ncrona)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/xlmWSTrp_SI&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-13&#34;&gt;
  &lt;summary&gt;Semana 2 (20-24/09/21)&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-mp.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 3: &lt;em&gt;Medidas de Posi√ß√£o&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-md.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 4: &lt;em&gt;Medidas de Dispers√£o&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1AMKB8PSYQMudpvpu7eM5Yx8PWbfYuHyLeZmzYxfPWo4/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tempo: 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Podcast&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Material escrito sobre o assunto&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-mp.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 3: &lt;em&gt;Medidas de Posi√ß√£o&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-md.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 4: &lt;em&gt;Medidas de Dispers√£o&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Exerc√≠cios Propostos (&lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-mp.html#exerc%C3%ADcios-propostos-2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap. 3&lt;/a&gt;, &lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-md.html#exerc%C3%ADcios-propostos-3&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap. 4&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
   &lt;!-- - Scripts 
  &lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/r-scripts/aula01.R&#34; target=&#34;_blank&#34;&gt;Aula01.R&lt;/a&gt; --&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula te√≥rica (Aula ass√≠ncrona)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/s-yrirgOA8A&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/br&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula te√≥rica e de exerc√≠cios resolvidos (Aula ass√≠ncrona)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/7V34LUYrlxY&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;br/&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula te√≥rica e de exerc√≠cios resolvidos (Aula ass√≠ncrona)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/l2yBewnBkdE&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-14&#34;&gt;
  &lt;summary&gt;Semana 3 (27/04-01/10/2021)&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/dgets.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 1: &lt;em&gt;Defini√ß√µes gerais e t√©cnicas de somat√≥rio&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-coad.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 2: &lt;em&gt;Coleta, organiza√ß√£o e apresenta√ß√£o de dados&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-mp.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 3: &lt;em&gt;Medidas de Posi√ß√£o&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-md.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 4: &lt;em&gt;Medidas de Dispers√£o&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1WUq-iQrX5gzhkC9tq_np8XyCST7etVZUoJha4XceHyk/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tempo: 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Podcast&lt;/p&gt;
&lt;iframe src=&#34;https://open.spotify.com/embed/episode/00QWz0x2xOdXCdC2uLCvbU&#34; width=&#34;100%&#34; height=&#34;232&#34; frameborder=&#34;0&#34; allowtransparency=&#34;true&#34; allow=&#34;encrypted-media&#34;&gt;&lt;/iframe&gt;
&lt;/br&gt;
&lt;iframe src=&#34;https://open.spotify.com/embed/show/0NhBadqLICDJjoYRGNgrxv&#34; width=&#34;100%&#34; height=&#34;232&#34; frameborder=&#34;0&#34; allowtransparency=&#34;true&#34; allow=&#34;encrypted-media&#34;&gt;&lt;/iframe&gt;
&lt;/br&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Material escrito sobre o assunto&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/dgets.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 1: &lt;em&gt;Defini√ß√µes gerais e t√©cnicas de somat√≥rio&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-coad.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 2: &lt;em&gt;Coleta, organiza√ß√£o e apresenta√ß√£o de dados&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-mp.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 3: &lt;em&gt;Medidas de Posi√ß√£o&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-md.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 4: &lt;em&gt;Medidas de Dispers√£o&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Exerc√≠cios Propostos (&lt;a href=&#34;https://bendeivide.github.io/book-epaec/dgets.html#exerc%C3%ADcios-prospostos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap. 1&lt;/a&gt;, &lt;a href=&#34;https://bendeivide.github.io/book-epaec/dgets.html#exerc%C3%ADcios-propostos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap. 2&lt;/a&gt;, &lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-mp.html#exerc%C3%ADcios-propostos-2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap. 3&lt;/a&gt;, &lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-md.html#exerc%C3%ADcios-propostos-3&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap. 4&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
   &lt;!-- - Scripts 
  &lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/r-scripts/aula01.R&#34; target=&#34;_blank&#34;&gt;Aula01.R&lt;/a&gt; --&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula te√≥rica (Aula ass√≠ncrona)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/FzWIJqrriqw&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/br&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula te√≥rica e de exerc√≠cios resolvidos (Aula s√≠ncrona)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/NpGw4F2VwE8&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;br/&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula te√≥rica e de exerc√≠cios resolvidos (Aula s√≠ncrona)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/UaHIdoTk2mI&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-15&#34;&gt;
  &lt;summary&gt;Semana 4 (04-08/10/21)&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o ao R (Parte I)&lt;/li&gt;
&lt;li&gt;Introdu√ß√£o ao R (Parte II)&lt;/li&gt;
&lt;li&gt;Introdu√ß√£o ao R (Parte III)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1bettPvFN9APOJlVdexkqKejroBKxuzaRESut_6hbNCE/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tempo: 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Podcast&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Material escrito sobre o assunto&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/cursor/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso R - Programa√ß√£o em R (N√≠vel B√°sico)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.shinyapps.io/Curso-R/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Exerc√≠cios Propostos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/cursor/nbasico.html#scripts&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Scripts
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula sobre introdu√ß√£o ao R (Parte I)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/IIwd05FQa04&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/br&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula sobre introdu√ß√£o ao R (Parte II)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/uFvKMDOvccg&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;br/&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula sobre introdu√ß√£o ao R (Parte III)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/h1_EGAAHPZY&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-16&#34;&gt;
  &lt;summary&gt;Semana 5 (11-15/10/21)&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-cap5.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 5: &lt;em&gt;Probabilidades&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-cap6.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 6: &lt;em&gt;Distribui√ß√µes de probabilidade&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1UvfeLHp8mp7gl_ptxLPlCfws9OWwmZLjBAsppGbVlmM/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tempo: 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Podcast&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Material escrito sobre o assunto&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-cap5.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 5: &lt;em&gt;Probabilidades&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-cap6.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 6: &lt;em&gt;Distribui√ß√µes de probabilidade&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Exerc√≠cios Propostos (&lt;a href=&#34;&#34;&gt;Cap. 5&lt;/a&gt;, &lt;a href=&#34;&#34;&gt;Cap. 6&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula te√≥rica (Aula ass√≠ncrona)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/Hp27xiGDTy0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/br&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula te√≥rica e de exerc√≠cios resolvidos (Aula ass√≠ncrona)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/NrwKFwsDNbw&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;br/&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula te√≥rica e de exerc√≠cios resolvidos (Aula ass√≠ncrona)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/UpevhEkRaoE&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-17&#34;&gt;
  &lt;summary&gt;Semana 6 (18-22/10/21)&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-sampling.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 7: &lt;em&gt;Amostragem&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-cap8.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 8: &lt;em&gt;Distribui√ß√µes amostrais&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1qgq5uhQee_-kzsPfcRooZ7gUiZD2X3Yq1tYRqgTeZG0/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tempo: 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Podcast&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Material escrito sobre o assunto
- &lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-sampling.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 7: &lt;em&gt;Amostragem&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-cap8.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 8: &lt;em&gt;Distribui√ß√µes amostrais&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Exerc√≠cios Propostos (&lt;a href=&#34;&#34;&gt;Cap. 7&lt;/a&gt;, &lt;a href=&#34;&#34;&gt;Cap. 8&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula te√≥rica (Aula ass√≠ncrona)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/lv575JfSVeY&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/br&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula te√≥rica e de exerc√≠cios resolvidos (Aula ass√≠ncrona)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/HXB1Y09C3Q4&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;br/&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula te√≥rica e de exerc√≠cios resolvidos (Aula ass√≠ncrona)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/inVZFge6hjk&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-18&#34;&gt;
  &lt;summary&gt;Semana 7 (25-29/10/2021)&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-cap5.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 5: &lt;em&gt;Probabilidades&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-cap6.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 6: &lt;em&gt;Distribui√ß√µes de probabilidade&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/14UKbi7EMrnjDxqi1ible6M3idkuni6OE7WKv2Ni4d6Y/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tempo: 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Podcast&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Material escrito sobre o assunto&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-cap5.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 5: &lt;em&gt;Probabilidades&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-cap6.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 6: &lt;em&gt;Distribui√ß√µes de probabilidade&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Exerc√≠cios Propostos (&lt;a href=&#34;&#34;&gt;Cap. 6&lt;/a&gt;, &lt;a href=&#34;&#34;&gt;Cap. 7&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Scripts
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/r-scripts/aula21.R&#34; target=&#34;_blank&#34;&gt;Aula21.R&lt;/a&gt;,&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula te√≥rica (Aula ass√≠ncrona)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/iyJfr8kveM8&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/br&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula te√≥rica e de exerc√≠cios resolvidos (Aula ass√≠ncrona)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/Cr2FzwFSxes&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;br/&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula te√≥rica e de exerc√≠cios resolvidos (Aula ass√≠ncrona)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/yAbdNyy44QQ&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-19&#34;&gt;
  &lt;summary&gt;Semana 8 (01-05/11/21)&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o ao R (Parte IV)&lt;/li&gt;
&lt;li&gt;Introdu√ß√£o ao R (Parte V)&lt;/li&gt;
&lt;li&gt;Introdu√ß√£o ao R (Parte VI)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1kKIKZltWyleQdJ2n_cQXa47jV6Jooqm-NNJzPX52cLQ/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tempo: 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Podcast&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Material escrito sobre o assunto&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/cursor/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso R - Programa√ß√£o em R (N√≠vel B√°sico)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.shinyapps.io/Curso-R/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Exerc√≠cios Propostos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/cursor/nbasico.html#scripts&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Scripts
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula sobre introdu√ß√£o ao R (Parte IV)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/VTCgAA5RDqI&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/br&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula sobre introdu√ß√£o ao R (Parte V)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/I2ODco7LH4U&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;br/&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula sobre introdu√ß√£o ao R (Parte VI)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/AO6HFh9ZPJ0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-20&#34;&gt;
  &lt;summary&gt;Semana 9 (08-12/11/21)&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-teoest.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 9: &lt;em&gt;Teoria da Estima√ß√£o&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1EyGEIOdbod2s6GYMMav879-TuPyuZhAI2kKajH-NFdU/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tempo: 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Podcast&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Material escrito sobre o assunto&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-teoest.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 9: &lt;em&gt;Teoria da Estima√ß√£o&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Exerc√≠cios Propostos (&lt;a href=&#34;&#34;&gt;Cap. 9&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Scripts
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/r-scripts/aula25.R&#34; target=&#34;_blank&#34;&gt;Aula25.R&lt;/a&gt;, &lt;a href=&#34;http://bendeivide.github.io/r-scripts/aula27.R&#34; target=&#34;_blank&#34;&gt;Aula27.R&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula te√≥rica (Aula ass√≠ncrona)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/wOePk5UupBY&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/br&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula te√≥rica e de exerc√≠cios resolvidos (Aula ass√≠ncrona)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/hsFQ2MEZYIY&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;br/&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula te√≥rica e de exerc√≠cios resolvidos (Aula ass√≠ncrona)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/wk46c8ocOew&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-21&#34;&gt;
  &lt;summary&gt;Semana 10 (15-19/11/21)&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-teodec.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 10: &lt;em&gt;Teoria da Decis√£o&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1l03kPLy1hc-4OSO5l0I0Qym6jjWXK68ZLASgMk5qRWs/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tempo: 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Podcast&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Material escrito sobre o assunto&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-teodec.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 10: &lt;em&gt;Teoria da Decis√£o&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Exerc√≠cios Propostos (&lt;a href=&#34;&#34;&gt;Cap. 10&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Scripts
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/r-scripts/aula28.R&#34; target=&#34;_blank&#34;&gt;Aula28.R&lt;/a&gt;, &lt;a href=&#34;http://bendeivide.github.io/r-scripts/aula29.R&#34; target=&#34;_blank&#34;&gt;Aula29.R&lt;/a&gt;, &lt;a href=&#34;http://bendeivide.github.io/r-scripts/aula30.R&#34; target=&#34;_blank&#34;&gt;Aula30.R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Shiny
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://bendeivide.shinyapps.io/Est_Exp/#section-revis%C3%A3o-sobre-teste-de-hip%C3%B3teses&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Revis√£o sobre testes de Hip√≥teses&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula te√≥rica (Aula ass√≠ncrona)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/ODvqwgqnUSw&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/br&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula te√≥rica e de exerc√≠cios resolvidos (Aula ass√≠ncrona)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/Kkeleyj1s0c&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;br/&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula te√≥rica e de exerc√≠cios resolvidos (Aula ass√≠ncrona)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/K3vNKV1tFfY&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-22&#34;&gt;
  &lt;summary&gt;Semana 11 (22-26/11/21)&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-cor-reg.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 11: &lt;em&gt;Regress√£o Linear Simples&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/1x-za421EvQl1SrTVwN_RnHKSVpw6sTSjQQvJCH1D6Sg/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tempo: 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Podcast&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Material escrito sobre o assunto&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/book-epaec/chap-cor-reg.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cap√≠tulo 11: &lt;em&gt;Regress√£o Linear Simples&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Exerc√≠cios Propostos (&lt;a href=&#34;&#34;&gt;Cap. 11&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Scripts
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/r-scripts/aula31.R&#34; target=&#34;_blank&#34;&gt;Aula31.R&lt;/a&gt;, &lt;a href=&#34;http://bendeivide.github.io/r-scripts/aula32.R&#34; target=&#34;_blank&#34;&gt;Aula32.R&lt;/a&gt;, &lt;a href=&#34;http://bendeivide.github.io/r-scripts/aula33.R&#34; target=&#34;_blank&#34;&gt;Aula33.R&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula te√≥rica (Aula ass√≠ncrona)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/b7sujMt7zzo&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/br&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula te√≥rica e de exerc√≠cios resolvidos (Aula ass√≠ncrona)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/Wqi9MezUj7s&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;br/&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula te√≥rica e de exerc√≠cios resolvidos (Aula ass√≠ncrona)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/EjjSCbDiOY4&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-23&#34;&gt;
  &lt;summary&gt;Semana 12 (29/11-03-12/2021)&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o ao R (Parte VII)&lt;/li&gt;
&lt;li&gt;Introdu√ß√£o ao R (Parte VIII)&lt;/li&gt;
&lt;li&gt;Introdu√ß√£o ao R (Parte IX)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://docs.google.com/document/d/19CWsUHqVnqOVPEasKP0HrOM_M_BhkGqmcCoOZaa0WU8/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plano de aula&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tempo: 1h 50min.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-headphones  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Podcast&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-book-reader  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Material escrito sobre o assunto&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/cursor/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso R - Programa√ß√£o em R (N√≠vel B√°sico)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.shinyapps.io/Curso-R/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Exerc√≠cios Propostos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/cursor/nbasico.html#scripts&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Scripts
&lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula sobre introdu√ß√£o ao R (Parte VII)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/7tpe_1_RC_E&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/br&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula sobre introdu√ß√£o ao R (Parte VIII)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/pqLyntw_iB4&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;br/&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Aula sobre introdu√ß√£o ao R (Parte IX)&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/lMFFKqcJxcI&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-24&#34;&gt;
  &lt;summary&gt;Semana 13 (06-10/12/21)&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&lt;i class=&#34;fas fa-pen-fancy  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Tema:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Reapresenta√ß√£o da palestra intitulada &lt;strong&gt;&amp;ldquo;R como uma ferramenta acad√™mica&amp;rdquo;&lt;/strong&gt;, realizada na UFPI&lt;/li&gt;
&lt;/ul&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/_43yBb_s-R8&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-25&#34;&gt;
  &lt;summary&gt;Semana 14 (13-17/12/21)&lt;/summary&gt;
  &lt;p&gt;&lt;ul&gt;
&lt;li&gt;Reapresenta√ß√£o da palestra intitulada &lt;strong&gt;&amp;ldquo;Desenvolvimento de pacotes R&amp;rdquo;&lt;/strong&gt;, realizado nos &lt;a href=&#34;https://ufsj.edu.br/demat/scm.php&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Semin√°rios - Caf√© com Matem√°tica - DEMAT/UFSJ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/mGUY6Cxzr58&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;quiz&#34;&gt;Quiz&lt;/h2&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-26&#34;&gt;
  &lt;summary&gt;Quais as datas de avalia√ß√£o?&lt;/summary&gt;
  &lt;p&gt;Acessem: &lt;a href=&#34;#avaliacao&#34;&gt;Avalia√ß√£o&lt;/a&gt; e &lt;a href=&#34;#cronograma&#34;&gt;Cronograma&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-27&#34;&gt;
  &lt;summary&gt;Onde ocorrem as aulas s√≠ncronas?&lt;/summary&gt;
  &lt;p&gt;Acesse o portal did√°tico, e verifique no bloco &lt;strong&gt;Informa√ß√µes Gerais&lt;/strong&gt;&lt;/p&gt;
&lt;/details&gt;</description>
    </item>
    
    <item>
      <title>Programa√ß√£o em R (N√≠vel Avan√ßado)</title>
      <link>http://bendeivide.github.io/courses/cursor/navancado/</link>
      <pubDate>Thu, 29 Apr 2021 14:27:10 +0000</pubDate>
      <guid>http://bendeivide.github.io/courses/cursor/navancado/</guid>
      <description>&lt;p&gt;Programando em n√≠vel avan√ßado o &lt;a href=&#34;http://r-project.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; 6-7 horas por semana, por 4 semanas&lt;/p&gt;
&lt;h2 id=&#34;apresenta√ß√£o&#34;&gt;Apresenta√ß√£o&lt;/h2&gt;
&lt;!-- 
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/_JqtU3X101E&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
 --&gt;
&lt;h2 id=&#34;onde-foi-ministrado&#34;&gt;Onde foi ministrado?&lt;/h2&gt;
&lt;!-- - O curso foi ministrado pela UFSJ, em parceria com o Centro Acad√™mico de Engenharia de Telecomunica√ß√µes (CATEL), no per√≠odo de 18/02/2021 a 19/03/2021. --&gt;
&lt;h2 id=&#34;material&#34;&gt;Material&lt;/h2&gt;
&lt;!-- O material encontra-se dispon√≠vel em &lt;http://bendeivide.github.io/cursor/nbasico&gt; --&gt;
&lt;h2 id=&#34;v√≠deo-aulas&#34;&gt;V√≠deo-aulas&lt;/h2&gt;
&lt;!-- Todas as v√≠deo-aulas encontram-se no material informado anteriormente, como tamb√©m pela playlist [Curso R](https://www.youtube.com/playlist?list=PL-20Z1XFWKR0y0qZdOM0KKqb4oEbAMs7O). --&gt;
&lt;h2 id=&#34;exerc√≠cios&#34;&gt;Exerc√≠cios&lt;/h2&gt;
&lt;!-- Os exerc√≠cios do curso, podem ser desenvolvidos via *web* em &lt;https://bendeivide.shinyapps.io/Curso-R/&gt;, como tamb√©m √© poss√≠vel baixar todos os [scripts](http://bendeivide.github.io/cursor/nbasico#scripts). --&gt;
&lt;h2 id=&#34;quiz&#34;&gt;Quiz&lt;/h2&gt;
&lt;!-- &lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-2&#34;&gt;
  &lt;summary&gt;Como o R trabalha?&lt;/summary&gt;
  &lt;p&gt;&lt;p&gt;&amp;ndash;&amp;gt;&lt;/p&gt;
&lt;!-- Acesse: &lt;http://bendeivide.github.io/cursor/nbasico#rwork&gt; --&gt;
&lt;!--&lt;/p&gt;
&lt;/details&gt; --&gt;</description>
    </item>
    
    <item>
      <title>‚úçÔ∏è Exerc√≠cios resolvidos</title>
      <link>http://bendeivide.github.io/courses/epaec/exerresolvidos/</link>
      <pubDate>Wed, 12 Jul 2023 16:34:32 +0000</pubDate>
      <guid>http://bendeivide.github.io/courses/epaec/exerresolvidos/</guid>
      <description>&lt;details class=&#34;toc-inpage d-print-none d-xl-none &#34; open&gt;
   &lt;summary class=&#34;font-weight-bold&#34;&gt;Sum√°rio&lt;/summary&gt;
   &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#apresentacao&#34;&gt;&lt;i class=&#34;fas fa-chalkboard-teacher&#34;&gt;&lt;/i&gt;  Apresenta√ß√£o&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#planilha&#34;&gt;&lt;i class=&#34;fas fa-file-excel&#34;&gt;&lt;/i&gt; Planilha dos exerc√≠cios resolvidos&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#ementa&#34;&gt;&lt;i class=&#34;fas fa-list-ol&#34;&gt;&lt;/i&gt; Ementa&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#playlist&#34;&gt;&lt;i class=&#34;fa fa-link&#34;&gt;&lt;/i&gt; &lt;em&gt;Link&lt;/em&gt; da &lt;em&gt;playlist&lt;/em&gt; de v√≠deos dos exerc√≠cios resolvidos&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#exercporassunto&#34;&gt;&lt;i class=&#34;fas fa-pen&#34;&gt;&lt;/i&gt; Exerc√≠cios Resolvidos por assunto&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#exerpublicacao&#34;&gt;&lt;i class=&#34;fas fa-calendar&#34;&gt;&lt;/i&gt; Exerc√≠cios Resolvidos por data de publica√ß√£o&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#vejatbmn&#34;&gt;&lt;i class=&#34;fas fa-eye&#34;&gt;&lt;/i&gt; Veja tamb√©m&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
 &lt;/details&gt;

&lt;p&gt;Exerc√≠cios resolvidos da disciplina de &lt;strong&gt;Estat√≠stica e Probabilidade&lt;/strong&gt; aplicadas √†s Engenharias e Ci√™ncias (EPAEC) da &lt;a href=&#34;http://ufsj.edu.br&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;, ministradas pelo Prof. &lt;a href=&#34;http://bendeivide.github.io/author/ben-deivide/&#34;&gt;Ben D√™ivide&lt;/a&gt;. Para mais informa√ß√µes sobre a disciplina, acesse o curso: &lt;a href=&#34;http://bendeivide.github.io/courses/epaec/&#34; target=&#34;_blank&#34;&gt; Estat√≠stica e Probabilidade (UFSJ) &lt;/a&gt;. Esse trabalho est√° vinculado ao &lt;a href=&#34;http://bendeivide.github.io/project/projape/&#34; target=&#34;_blank&#34;&gt; Projeto Aprender Por Ensinar (PAPE)&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;apresentacao&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-chalkboard-teacher&#34;&gt;&lt;/i&gt;  Apresenta√ß√£o&lt;/h2&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/LPANRN0F4Uo&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2 id=&#34;planilha&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-file-excel&#34;&gt;&lt;/i&gt; Planilha dos exerc√≠cios resolvidos&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/spreadsheets/d/1RBRDmeQB3i0Gt3ofwpH4_9YdWEiCiBV9mcyflggbqoc/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Planilha&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ementa&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-list-ol&#34;&gt;&lt;/i&gt; Ementa&lt;/h2&gt;
&lt;p&gt;N√≥s usamos a ementa contida nos Projetos Pedag√≥gicos de Cursos (PPCs) da CAP/UFSJ&lt;/p&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-4&#34;&gt;
  &lt;summary&gt;Acesse a ementa do curso&lt;/summary&gt;
  &lt;p&gt;&lt;ol&gt;
&lt;li&gt;DEFINI√á√ïES GERAIS E T√âCNICAS DE SOMAT√ìRIO:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Defini√ß√µes Gerais&lt;/li&gt;
&lt;li&gt;T√©cnicas de somat√≥rio&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;COLETA, ORGANIZA√á√ÉO E APRESENTA√á√ÉO DE DADOS:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Representa√ß√£o tabular&lt;/li&gt;
&lt;li&gt;Representa√ß√£o gr√°fica&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;MEDIDAS DE POSI√á√ÉO:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;M√©dia&lt;/li&gt;
&lt;li&gt;Mediana&lt;/li&gt;
&lt;li&gt;Moda&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;MEDIDAS DE DISPERS√ÉO:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Amplitude total&lt;/li&gt;
&lt;li&gt;Vari√¢ncia&lt;/li&gt;
&lt;li&gt;Desvio Padr√£o&lt;/li&gt;
&lt;li&gt;Coeficiente de Varia√ß√£o&lt;/li&gt;
&lt;li&gt;Erro padr√£o da M√©dia&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;PROBABILIDADES:
&lt;ul&gt;
&lt;li&gt;Conceitos b√°sicos&lt;/li&gt;
&lt;li&gt;Defini√ß√µes de probabilidades&lt;/li&gt;
&lt;li&gt;Propriedades&lt;/li&gt;
&lt;li&gt;Eventos independentes e probabilidade condicional&lt;/li&gt;
&lt;li&gt;Teorema de Bayes&lt;/li&gt;
&lt;li&gt;Fun√ß√£o de probabilidade discreta&lt;/li&gt;
&lt;li&gt;Fun√ß√£o de probabilidade cont√≠nua&lt;/li&gt;
&lt;li&gt;Fun√ß√£o de distribui√ß√£o de probabilidade acumulada&lt;/li&gt;
&lt;li&gt;Esperan√ßa matem√°tica e vari√¢ncia&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DISTRIBUI√á√ïES DE PROBABILIDADES:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Distribui√ß√µes discretas de probabilidades&lt;/li&gt;
&lt;li&gt;Distribui√ß√µes cont√≠nuas de probabilidades&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;AMOSTRAGEM:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Amostragem n√£o-probabil√≠stica e probabil√≠stica&lt;/li&gt;
&lt;li&gt;T√©cnicas de amostragem probabil√≠stica&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DISTRIBUI√á√ÉO DE AMOSTRAGEM:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Distribui√ß√£o de amostragem da m√©dia&lt;/li&gt;
&lt;li&gt;Distribui√ß√£o de amostragem de propor√ß√µes&lt;/li&gt;
&lt;li&gt;Distribui√ß√£o de amostragem de diferen√ßa entre m√©dias&lt;/li&gt;
&lt;li&gt;Distribui√ß√µes amostrais (qui-quadrado, t e F)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;TEORIA DA ESTIMA√á√ÉO:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Conceitos b√°sicos&lt;/li&gt;
&lt;li&gt;Tipos de estimativas&lt;/li&gt;
&lt;li&gt;Propriedades de um estimador&lt;/li&gt;
&lt;li&gt;Estima√ß√£o por ponto&lt;/li&gt;
&lt;li&gt;Estima√ß√£o por intervalo:
&lt;ul&gt;
&lt;li&gt;Intervalo de confian√ßa para a m√©dia&lt;/li&gt;
&lt;li&gt;Intervalo de confian√ßa para a vari√¢ncia&lt;/li&gt;
&lt;li&gt;Intervalo de confian√ßa para a diferen√ßa entre m√©dias&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Dimensionamento de amostras&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;TEORIA DA DECIS√ÉO:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Testes de hip√≥teses&lt;/li&gt;
&lt;li&gt;Erros tipo I e II&lt;/li&gt;
&lt;li&gt;Teste unilateral e bilateral&lt;/li&gt;
&lt;li&gt;Passos para a constru√ß√£o de um teste de hip√≥teses&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses para a m√©dia&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses para a propor√ß√£o&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses para a vari√¢ncia&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses para a diferen√ßa entre m√©dias&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CORRELA√á√ÉO E REGRESS√ÉO LINEAR SIMPLES:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Correla√ß√£o linear:&lt;/li&gt;
&lt;li&gt;Coeficiente de correla√ß√£o linear&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses acerca do coeficiente de correla√ß√£o linear&lt;/li&gt;
&lt;li&gt;Regress√£o linear simples:&lt;/li&gt;
&lt;li&gt;Modelo&lt;/li&gt;
&lt;li&gt;Estima√ß√£o dos par√¢metros do modelo&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses para o modelo de regress√£o&lt;/li&gt;
&lt;li&gt;Medidas de adequa√ß√£o do modelo&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;playlist&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fa fa-link&#34;&gt;&lt;/i&gt; &lt;em&gt;Link&lt;/em&gt; da &lt;em&gt;playlist&lt;/em&gt; de v√≠deos dos exerc√≠cios resolvidos&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://youtube.com/playlist?list=PL-20Z1XFWKR1DfCJHuB3_FLwsPwUe66R0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Playlist - PAPE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;exercporassunto&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-pen&#34;&gt;&lt;/i&gt; Exerc√≠cios Resolvidos por assunto&lt;/h2&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-5&#34;&gt;
  &lt;summary&gt;V√≠deoaulas sobre o Cap√≠tulo 1&lt;/summary&gt;
  &lt;p&gt;&lt;h3 id=&#34;er0001---defini√ß√µes-b√°sicas-popula√ß√£o-amostra-e-vari√°vel&#34;&gt;ER0001 - Defini√ß√µes b√°sicas: Popula√ß√£o, Amostra e Vari√°vel&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/MK1_GE5GajM&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0003---t√©cnicas-de-somat√≥rio&#34;&gt;ER0003 - T√©cnicas de somat√≥rio&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/-dfpBtvWn-o&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0013---tabula√ß√£o-e-t√©cnicas-de-somat√≥rio&#34;&gt;ER0013 - Tabula√ß√£o e t√©cnicas de somat√≥rio&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/Fk9MH7qHAYk&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0040---popula√ß√£o-amostra-e-vari√°veis&#34;&gt;ER0040 - Popula√ß√£o, amostra e vari√°veis&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/9LOlpGN_XGo&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-6&#34;&gt;
  &lt;summary&gt;V√≠deoaulas sobre o Cap√≠tulo 2&lt;/summary&gt;
  &lt;p&gt;&lt;h3 id=&#34;er0004---distribui√ß√µes-de-frequ√™ncia&#34;&gt;ER0004 - Distribui√ß√µes de frequ√™ncia&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/__rHs-Lqq1k&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-7&#34;&gt;
  &lt;summary&gt;V√≠deoaulas sobre o Cap√≠tulo 3&lt;/summary&gt;
  &lt;p&gt;&lt;h3 id=&#34;er0005---medidas-de-posi√ß√£o&#34;&gt;ER0005 - Medidas de Posi√ß√£o&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/l8b5g1ELAw0&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-8&#34;&gt;
  &lt;summary&gt;V√≠deoaulas sobre o Cap√≠tulo 4&lt;/summary&gt;
  &lt;p&gt;&lt;h3 id=&#34;er0006---medidas-de-dispers√£o-amplitude&#34;&gt;ER0006 - Medidas de Dispers√£o: Amplitude&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/jMhxClWoJTo&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0009---medidas-de-dispers√£o&#34;&gt;ER0009 - Medidas de dispers√£o&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/q67RgKF_Kd0&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-9&#34;&gt;
  &lt;summary&gt;V√≠deoaulas sobre o Cap√≠tulo 5&lt;/summary&gt;
  &lt;p&gt;&lt;h3 id=&#34;er0007---probabilidade&#34;&gt;ER0007 - Probabilidade&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/7mCx1StP6xQ&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0008---probabilidade-parte-ii&#34;&gt;ER0008 - Probabilidade (Parte II)&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/oynHT8CFKuo&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0014---probabilidade-parte-iii&#34;&gt;ER0014 - Probabilidade (Parte III)&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/4d5jD0mN4W0&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0016---probabilidade-parte-iv&#34;&gt;ER0016 - Probabilidade (Parte IV)&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/vo3_Fe4WL4A&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0017---probabilidade-parte-v&#34;&gt;ER0017 - Probabilidade (Parte V)&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/6Knw57qU8PQ&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0018---probabilidades&#34;&gt;ER0018 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/dllk1uXLw1U&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0019---probabilidades&#34;&gt;ER0019 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/NH3Die7xJOk&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0020---probabilidades&#34;&gt;ER0020 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/AS6o8r254mQ&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0021---probabilidades&#34;&gt;ER0021 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/41sA9qmXwoc&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0022---probabilidades&#34;&gt;ER0022 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/M6Pl2iSYJcA&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0023---probabilidades&#34;&gt;ER0023 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/vT6qsCa5di4&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0024---probabilidades&#34;&gt;ER0024 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/VQdSN4pmvjk&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0025---fun√ß√£o-densidade-de-probabilidade&#34;&gt;ER0025 - Fun√ß√£o densidade de probabilidade&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/6lP3qBzDqtk&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0026---probabilidades&#34;&gt;ER0026 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/zao04kZQ_hY&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0029---experimento-aleat√≥rio&#34;&gt;ER0029 - Experimento Aleat√≥rio&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/0_pPrRpTvS0&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0030---espa√ßo-amostral&#34;&gt;ER0030 - Espa√ßo amostral&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/a6BB8BDhYOc&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0031---probabilidades&#34;&gt;ER0031 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/P3N80VeewxI&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0032---probabilidades&#34;&gt;ER0032 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/Z74El8pSqJ4&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0033---probabilidades&#34;&gt;ER0033 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/ECjshNNMwqA&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0034---probabilidades&#34;&gt;ER0034 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/BBlzB_xgkk4&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0035---probabilidades&#34;&gt;ER0035 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/IFjhkvrr4zM&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0036---probabilidades&#34;&gt;ER0036 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/g0amWvWQa6E&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0038---probabilidades&#34;&gt;ER0038 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/qqEJzYHVhS8&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0039---probabilidades&#34;&gt;ER0039 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/vlS7DItLs6s&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0041---experimento-aleat√≥rio-e-espa√ßo-amostral&#34;&gt;ER0041 - Experimento aleat√≥rio e Espa√ßo amostral&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/JN1ZXX9ktmw&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0042---probabilidades&#34;&gt;ER0042 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/ODVGo2-jttE&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0043---probabilidades&#34;&gt;ER0043 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/NxOteDbeDDY&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0037---probabilidades&#34;&gt;ER0037 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/TxYTH11ZVtU&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-10&#34;&gt;
  &lt;summary&gt;V√≠deoaulas sobre o Cap√≠tulo 6&lt;/summary&gt;
  &lt;p&gt;&lt;h3 id=&#34;er0002---distribui√ß√£o-bernoulli&#34;&gt;ER0002 - Distribui√ß√£o Bernoulli&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/ThpaNllq7zU&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0011---distribui√ß√£o-binomial&#34;&gt;ER0011 - Distribui√ß√£o Binomial&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/JWxiKiETuEI&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0012---distribui√ß√µes-de-probabilidade&#34;&gt;ER0012 - Distribui√ß√µes de probabilidade&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/5jRbR9yExS8&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0015---distribui√ß√£o-normal&#34;&gt;ER0015 - Distribui√ß√£o Normal&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/sbXV_n-Qr1s&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0027---distribui√ß√£o-poisson&#34;&gt;ER0027 - Distribui√ß√£o Poisson&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/aJ104RpikhI&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0028---distribui√ß√£o-poisson&#34;&gt;ER0028 - Distribui√ß√£o Poisson&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/1-Bix-lz2q8&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-11&#34;&gt;
  &lt;summary&gt;V√≠deoaulas sobre o Cap√≠tulo 7&lt;/summary&gt;
  &lt;p&gt;&lt;h3 id=&#34;er0010---amostragem-sem-reposi√ß√£o&#34;&gt;ER0010 - Amostragem sem reposi√ß√£o&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/Ixb-hjWn0GE&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;exerpublicacao&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-calendar&#34;&gt;&lt;/i&gt; Exerc√≠cios Resolvidos por data de publica√ß√£o&lt;/h2&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-12&#34;&gt;
  &lt;summary&gt;V√≠deoaulas por data de publica√ß√£o&lt;/summary&gt;
  &lt;p&gt;&lt;h3 id=&#34;er0001---defini√ß√µes-b√°sicas-popula√ß√£o-amostra-e-vari√°vel&#34;&gt;ER0001 - Defini√ß√µes b√°sicas: Popula√ß√£o, Amostra e Vari√°vel&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/MK1_GE5GajM&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0002---distribui√ß√£o-bernoulli&#34;&gt;ER0002 - Distribui√ß√£o Bernoulli&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/ThpaNllq7zU&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0003---t√©cnicas-de-somat√≥rio&#34;&gt;ER0003 - T√©cnicas de somat√≥rio&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/-dfpBtvWn-o&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0004---distribui√ß√µes-de-frequ√™ncia&#34;&gt;ER0004 - Distribui√ß√µes de frequ√™ncia&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/__rHs-Lqq1k&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0005---medidas-de-posi√ß√£o&#34;&gt;ER0005 - Medidas de Posi√ß√£o&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/l8b5g1ELAw0&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0006---medidas-de-dispers√£o-amplitude&#34;&gt;ER0006 - Medidas de Dispers√£o: Amplitude&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/jMhxClWoJTo&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0007---probabilidade&#34;&gt;ER0007 - Probabilidade&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/7mCx1StP6xQ&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0008---probabilidade-parte-ii&#34;&gt;ER0008 - Probabilidade (Parte II)&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/oynHT8CFKuo&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0009---medidas-de-dispers√£o&#34;&gt;ER0009 - Medidas de dispers√£o&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/q67RgKF_Kd0&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0010---amostragem-sem-reposi√ß√£o&#34;&gt;ER0010 - Amostragem sem reposi√ß√£o&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/Ixb-hjWn0GE&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0011---distribui√ß√£o-binomial&#34;&gt;ER0011 - Distribui√ß√£o Binomial&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/JWxiKiETuEI&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0012---distribui√ß√µes-de-probabilidade&#34;&gt;ER0012 - Distribui√ß√µes de probabilidade&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/5jRbR9yExS8&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0013---tabula√ß√£o-e-t√©cnicas-de-somat√≥rio&#34;&gt;ER0013 - Tabula√ß√£o e t√©cnicas de somat√≥rio&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/Fk9MH7qHAYk&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0014---probabilidades&#34;&gt;ER0014 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/4d5jD0mN4W0&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0015---distribui√ß√µes-de-probabilidade&#34;&gt;ER0015 - Distribui√ß√µes de probabilidade&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/sbXV_n-Qr1s&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0016---probabilidades&#34;&gt;ER0016 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/vo3_Fe4WL4A&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0017---probabilidades&#34;&gt;ER0017 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/6Knw57qU8PQ&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0018---probabilidades&#34;&gt;ER0018 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/dllk1uXLw1U&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0019---probabilidades&#34;&gt;ER0019 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/NH3Die7xJOk&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0020---probabilidades&#34;&gt;ER0020 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/AS6o8r254mQ&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0021---probabilidades&#34;&gt;ER0021 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/41sA9qmXwoc&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0022---probabilidades&#34;&gt;ER0022 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/M6Pl2iSYJcA&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0023---probabilidades&#34;&gt;ER0023 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/vT6qsCa5di4&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0024---probabilidades&#34;&gt;ER0024 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/VQdSN4pmvjk&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0025---fun√ß√£o-densidade-de-probabilidade&#34;&gt;ER0025 - Fun√ß√£o densidade de probabilidade&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/6lP3qBzDqtk&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0026---probabilidades&#34;&gt;ER0026 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/zao04kZQ_hY&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0027---distribui√ß√£o-poisson&#34;&gt;ER0027 - Distribui√ß√£o Poisson&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/aJ104RpikhI&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0028---distribui√ß√£o-poisson&#34;&gt;ER0028 - Distribui√ß√£o Poisson&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/1-Bix-lz2q8&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0029---experimento-aleat√≥rio&#34;&gt;ER0029 - Experimento Aleat√≥rio&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/0_pPrRpTvS0&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0030---espa√ßo-amostral&#34;&gt;ER0030 - Espa√ßo amostral&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/a6BB8BDhYOc&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0031---probabilidades&#34;&gt;ER0031 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/P3N80VeewxI&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0032---probabilidades&#34;&gt;ER0032 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/Z74El8pSqJ4&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0033---probabilidades&#34;&gt;ER0033 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/ECjshNNMwqA&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0034---probabilidades&#34;&gt;ER0034 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/BBlzB_xgkk4&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0035---probabilidades&#34;&gt;ER0035 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/IFjhkvrr4zM&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0036---probabilidades&#34;&gt;ER0036 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/g0amWvWQa6E&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0037---probabilidades&#34;&gt;ER0037 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/TxYTH11ZVtU&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0038---probabilidades&#34;&gt;ER0038 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/qqEJzYHVhS8&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0039---probabilidades&#34;&gt;ER0039 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/vlS7DItLs6s&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0040---popula√ß√£o-amostra-e-vari√°veis&#34;&gt;ER0040 - Popula√ß√£o, amostra e vari√°veis&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/9LOlpGN_XGo&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0041---experimento-aleat√≥rio-e-espa√ßo-amostral&#34;&gt;ER0041 - Experimento aleat√≥rio e Espa√ßo amostral&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/JN1ZXX9ktmw&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0042---probabilidades&#34;&gt;ER0042 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/ODVGo2-jttE&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0043---probabilidades&#34;&gt;ER0043 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/NxOteDbeDDY&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0044---distribui√ß√£o-normal&#34;&gt;ER0044 - Distribui√ß√£o normal&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/MXMHN3P7M5Y&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0045---probabilidades&#34;&gt;ER0045 - Probabilidades&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/sac-oJoH1PE&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0046---esperan√ßa-matem√°tica&#34;&gt;ER0046 - Esperan√ßa matem√°tica&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/-hKMR31cj_Y&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0047---distribui√ß√£o-binomial&#34;&gt;ER0047 - Distribui√ß√£o binomial&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/6zTzHOXAIlM&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0048---distribui√ß√£o-binomial&#34;&gt;ER0048 - Distribui√ß√£o Binomial&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/NOzY5I5QYDE&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0049---distribui√ß√£o-poisson&#34;&gt;ER0049 - Distribui√ß√£o Poisson&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/4gRTq9hgEXY&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0050---distribui√ß√£o-poisson&#34;&gt;ER0050 - Distribui√ß√£o Poisson&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/VnK0UsRBJig&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0051---distribui√ß√£o-poisson&#34;&gt;ER0051 - Distribui√ß√£o Poisson&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/DZicoEcJ2yA&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0052---distribui√ß√£o-normal&#34;&gt;ER0052 - Distribui√ß√£o Normal&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/7fJY-I7k6vI&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0053---distribui√ß√£o-normal&#34;&gt;ER0053 - Distribui√ß√£o Normal&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/P9emPPRYspE&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0054---distribui√ß√£o-normal&#34;&gt;ER0054 - Distribui√ß√£o Normal&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/aVls8wTZVeE&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0055---fun√ß√£o-densidade-de-probabilidade&#34;&gt;ER0055 - Fun√ß√£o densidade de probabilidade&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/cFE5cXUcMxU&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0056---fun√ß√£o-densidade-de-probabilidade&#34;&gt;ER0056 - Fun√ß√£o densidade de probabilidade&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/EmPqDriTaSs&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0057---distribui√ß√£o-normal&#34;&gt;ER0057 - Distribui√ß√£o normal&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/cGzrAeoBaQI&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0058---distribui√ß√£o-normal&#34;&gt;ER0058 - Distribui√ß√£o normal&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/v34XqnJrb3c&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0059---distribui√ß√£o-de-amostragem-m√©dia-de-uma-normal&#34;&gt;ER0059 - Distribui√ß√£o de amostragem (M√©dia de uma normal)&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/EGpzBfVY8Z0&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0060---distribui√ß√£o-de-amostragem-t-de-student&#34;&gt;ER0060 - Distribui√ß√£o de amostragem (t de Student)&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/vRPuMiDBbDU&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0061---distribui√ß√£o-de-amostragem-m√©dia-de-uma-normal&#34;&gt;ER0061 - Distribui√ß√£o de amostragem (M√©dia de uma normal)&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/YMqbV41-m8Q&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0062---distribui√ß√£o-amostral&#34;&gt;ER0062 - DIstribui√ß√£o amostral&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/gsyhTTnHSb8&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0063---distribui√ß√µes-de-amostragem-aproxima√ß√£o-da-binomal-√†-normal&#34;&gt;ER0063 - Distribui√ß√µes de amostragem: Aproxima√ß√£o da binomal √† normal&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/EphtlSdZ890&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0064---distribui√ß√µes-de-amostragem-aproxima√ß√£o-da-poisson-√†-normal&#34;&gt;ER0064 - Distribui√ß√µes de amostragem: Aproxima√ß√£o da Poisson √† normal&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/yeUKCZllIRs&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0065---amostragem-tamanho-amostral-baseado-em-um-ic-para-propor√ß√µes&#34;&gt;ER0065 - Amostragem: Tamanho amostral baseado em um IC para propor√ß√µes&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/hdI_Oc3JKfc&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0066---estima√ß√£o-intervalar-ic-para-o-par√¢metro-propor√ß√£o&#34;&gt;ER0066 - Estima√ß√£o intervalar: IC para o par√¢metro propor√ß√£o&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/BLAPLnBnrOE&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0067---estima√ß√£o-intervalar-ic-para-propor√ß√£o&#34;&gt;ER0067 - Estima√ß√£o intervalar: IC para propor√ß√£o&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/GzzupIidReI&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0068---estima√ß√£o-pontual-para-propor√ß√£o&#34;&gt;ER0068 - Estima√ß√£o pontual para propor√ß√£o&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/WIoJ6p9cJyU&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0069---estima√ß√£o-pontual&#34;&gt;ER0069 - Estima√ß√£o pontual&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/xFzI_pxi2xE&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0070---teoria-da-decis√£o-para-a-m√©dia-populacional-de-uma-normal&#34;&gt;ER0070 - Teoria da decis√£o para a m√©dia populacional de uma normal&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/-EzBV-MXqHQ&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0071---estima√ß√£o-intervalar-para-m√©dia-de-uma-popula√ß√£o-normal&#34;&gt;ER0071 - Estima√ß√£o intervalar para m√©dia de uma popula√ß√£o normal&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/JxN14V93-4A&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0072---tamanho-amostral-de-uma-normal&#34;&gt;ER0072 - Tamanho amostral de uma normal&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/2N6KT-T69Rk&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0073---tamanho-amostral-de-uma-popula√ß√£o-normal&#34;&gt;ER0073 - Tamanho amostral de uma popula√ß√£o normal&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/PXUpF8898ws&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0074---estima√ß√£o-intervalar-para-a-vari√¢ncia-populacional-de-uma-normal&#34;&gt;ER0074 - Estima√ß√£o intervalar para a vari√¢ncia populacional de uma normal&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/SdxdjGYAhbg&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0075---estima√ß√£o-intervalar-e-tamanho-amostral&#34;&gt;ER0075 - Estima√ß√£o intervalar e tamanho amostral&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/yB6l0wUEG3w&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0076---estima√ß√£o-intervalar-para-a-proporc√£o-populacional&#34;&gt;ER0076 - Estima√ß√£o intervalar para a proporc√£o populacional&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/K0mVHBdEYTs&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0077---estima√ß√£o-intervalar-para-a-m√©dia-populacional&#34;&gt;ER0077 - Estima√ß√£o intervalar para a m√©dia populacional&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/Cy_fzbY_n3Y&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0078---teoria-de-decis√£o-para-a-m√©dia-populacional-de-uma-normal&#34;&gt;ER0078 - Teoria de decis√£o para a m√©dia populacional de uma normal&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/lgg66pLAIq4&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0079---teoria-de-decis√£-para-diferen√ßa-de-m√©dias-populacionais-normais-independentes&#34;&gt;ER0079 - Teoria de decis√£ para diferen√ßa de m√©dias populacionais normais independentes&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/uI_44_rQjco&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0080---estima√ß√£o-intervalar-para-a-m√©dia-populacional-normal-com-vari√¢ncia-pop-desconhecida&#34;&gt;ER0080 - Estima√ß√£o intervalar para a m√©dia populacional normal com vari√¢ncia pop. desconhecida&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/-zeJznUEYA0&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0081---estima√ß√£o-intervalar-para-m√©dia-pop-normal-com-vari√¢ncia-pop-desconhecida&#34;&gt;ER0081 - Estima√ß√£o intervalar para m√©dia pop. normal com vari√¢ncia pop. desconhecida&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/-Cfzo6VUe_U&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0082---tamanho-amostral-baseado-no-ic-para-propor√ß√£o-populacional&#34;&gt;ER0082 - Tamanho amostral baseado no IC para propor√ß√£o populacional&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/ku5-Ld1VNoA&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0083---estima√ß√£o-intervalar-para-a-diferen√ßa-entre-m√©dias-pop-normais-independentes&#34;&gt;ER0083 - Estima√ß√£o intervalar para a diferen√ßa entre m√©dias pop. normais independentes&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/b2kQkdaewN8&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0084---teoria-da-decis√£o-para-a-m√©dia-pop-normal-com-vari√¢ncia-pop-desconhecida&#34;&gt;ER0084 - Teoria da decis√£o para a m√©dia pop. normal com vari√¢ncia pop. desconhecida&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/5NKbjx91RrY&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0085---teoria-da-decis√£o-para-m√©dia-pop-normal&#34;&gt;ER0085 - Teoria da decis√£o para m√©dia pop. normal&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/CETKiNIw2kU&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0086---teoria-de-decis√£o-para-a-m√©dia-pop-normal-com-vari√¢ncia-pop-desconhecida&#34;&gt;ER0086 - Teoria de decis√£o para a m√©dia pop. normal com vari√¢ncia pop. desconhecida&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/ORrINGDbe2Q&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0087---estima√ß√£o-intervalar-para-a-m√©dia-pop-normal-com-vari√¢ncia-pop-desconhecida&#34;&gt;ER0087 - Estima√ß√£o intervalar para a m√©dia pop. normal com vari√¢ncia pop. desconhecida&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/0QCSb9NZBF8&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0088---teoria-da-decis√£o-elabora√ß√£o-das-hip√≥teses-complementares-h0-e-h1&#34;&gt;ER0088 - Teoria da decis√£o: Elabora√ß√£o das hip√≥teses complementares (H0 e H1)&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/gwrPCt7B6PI&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0089---teoria-de-decis√£o-c√°lculo-da-probabilidade-do-erro-tipo-i-e-ii-em-hip√≥teses-simples&#34;&gt;ER0089 - Teoria de decis√£o: C√°lculo da probabilidade do Erro tipo I e II, em hip√≥teses simples&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/jszRgugoQ2E&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0090---c√°lculo-das-probabilidades-do-erro-tipo-i-e-ii&#34;&gt;ER0090 - C√°lculo das probabilidades do erro tipo I e II&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/iTrOZFQS47g&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0091---estima√ß√£o-intervalar-p-ara-m√©dia-de-uma-pop-normal-com-vari√¢ncia-pop-desconhecida&#34;&gt;ER0091 - Estima√ß√£o intervalar p ara m√©dia de uma pop normal com vari√¢ncia pop. desconhecida&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/UQEqwZ4GrDM&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0092---estima√ß√£o-intervalar-para-a-m√©dia-populacional-normal&#34;&gt;ER0092 - estima√ß√£o intervalar para a m√©dia populacional normal&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/fgwl3gmHW1s&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0093---teoria-de-decis√£o-para-duas-m√©dias-pop-ind-normais-com-vari√¢ncias-homoced√°sticas&#34;&gt;ER0093 - Teoria de decis√£o para duas m√©dias pop. ind. normais com vari√¢ncias homoced√°sticas&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/06IsSZJpWg4&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0094---teoria-de-decis√£o-para-duas-m√©dias-pop-ind-normais-com-vari√¢ncias-homoced√°sticas&#34;&gt;ER0094 - Teoria de decis√£o para duas m√©dias pop. ind. normais com vari√¢ncias homoced√°sticas&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/0Dspbr2XiGw&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0095---teoria-de-decis√£o-para-duas-m√©dias-pop-ind-normais-com-vari√¢ncias-homoced√°sticas&#34;&gt;ER0095 - Teoria de decis√£o para duas m√©dias pop. ind. normais com vari√¢ncias homoced√°sticas&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/CciW23UmiTc&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0096---teoria-de-decis√£o-para-duas-m√©dias-pop-ind-normais-com-vari√¢ncias-homoced√°sticas&#34;&gt;ER0096 - Teoria de decis√£o para duas m√©dias pop. ind. normais com vari√¢ncias homoced√°sticas&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/1vDPcD_BIU8&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0097---teoria-de-decis√£o-para-uma-m√©dia-populacional-normal-com-vari√¢ncia-pop-desconhecida&#34;&gt;ER0097 - Teoria de decis√£o para uma m√©dia populacional normal com vari√¢ncia pop. desconhecida&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/K-yfne_tizg&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0098---teoria-de-decis√£o-para-uma-m√©dia-populacional-normal-com-vari√¢ncia-pop-desconhecida&#34;&gt;ER0098 - Teoria de decis√£o para uma m√©dia populacional normal com vari√¢ncia pop. desconhecida&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/0IpVJjjMfkc&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0099---teoria-de-decis√£o-para-duas-m√©dias-pop-ind-normais-com-vari√¢ncias-heteroced√°sticas&#34;&gt;ER0099 - Teoria de decis√£o para duas m√©dias pop. ind. normais com vari√¢ncias heteroced√°sticas&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/f4bXo9JW6IQ&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;er0100---teoria-de-decis√£o-para-duas-m√©dias-pop-ind-normais-com-vari√¢ncias-heteroced√°sticas&#34;&gt;ER0100 - Teoria de decis√£o para duas m√©dias pop. ind. normais com vari√¢ncias heteroced√°sticas&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/bCpqM38K2do&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;vejatbmn&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-eye&#34;&gt;&lt;/i&gt; Veja tamb√©m&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-podcast  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/courses/epaec/podcasts/&#34; target=&#34;_blank&#34;&gt;Podcasts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/courses/ear/rbasico/&#34; target=&#34;_blank&#34;&gt;Curso EAR: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-video  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/courses/epaec/videoaulas/&#34; target=&#34;_blank&#34;&gt;V√≠deos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-guitar  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/project/cantest/&#34; target=&#34;_blank&#34;&gt;Cantando com a Estat√≠stica&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>üé• V√≠deoaulas</title>
      <link>http://bendeivide.github.io/courses/epaec/videoaulas/</link>
      <pubDate>Wed, 12 Jul 2023 16:38:26 +0000</pubDate>
      <guid>http://bendeivide.github.io/courses/epaec/videoaulas/</guid>
      <description>&lt;p&gt;V√≠deoaulas da disciplina de &lt;strong&gt;Estat√≠stica e Probabilidade&lt;/strong&gt; aplicadas √†s Engenharias e Ci√™ncias (EPAEC) da &lt;a href=&#34;http://ufsj.edu.br&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;, ministradas pelo Prof. &lt;a href=&#34;http://bendeivide.github.io/author/ben-deivide/&#34;&gt;Ben D√™ivide&lt;/a&gt;. Para mais informa√ß√µes sobre a disciplina, acesse o curso: &lt;a href=&#34;http://bendeivide.github.io/courses/epaec/&#34; target=&#34;_blank&#34;&gt; Estat√≠stica e Probabilidade (UFSJ) &lt;/a&gt;. Esse trabalho est√° vinculado ao &lt;a href=&#34;http://bendeivide.github.io/project/projape/&#34; target=&#34;_blank&#34;&gt; Projeto Aprender Por Ensinar (PAPE)&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;apresentacao&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-chalkboard-teacher&#34;&gt;&lt;/i&gt;  Apresenta√ß√£o&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Inserir v√≠deo&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;planilha&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-file-excel&#34;&gt;&lt;/i&gt; Planilha da sequ√™ncia das v√≠deoaulas&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/spreadsheets/d/1bEf5YLRpOPjhfGm6BvUvzz8MkmF4fAWSv72MdzrIQv0/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Planilha&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ementa&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-list-ol&#34;&gt;&lt;/i&gt; Ementa&lt;/h2&gt;
&lt;p&gt;N√≥s usamos a ementa contida nos Projetos Pedag√≥gicos de Cursos (PPCs) da CAP/UFSJ para embasarmos a organiza√ß√£o dos v√≠deos&lt;/p&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-3&#34;&gt;
  &lt;summary&gt;Acesse a ementa do curso&lt;/summary&gt;
  &lt;p&gt;&lt;ol&gt;
&lt;li&gt;DEFINI√á√ïES GERAIS E T√âCNICAS DE SOMAT√ìRIO:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Defini√ß√µes Gerais&lt;/li&gt;
&lt;li&gt;T√©cnicas de somat√≥rio&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;COLETA, ORGANIZA√á√ÉO E APRESENTA√á√ÉO DE DADOS:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Representa√ß√£o tabular&lt;/li&gt;
&lt;li&gt;Representa√ß√£o gr√°fica&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;MEDIDAS DE POSI√á√ÉO:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;M√©dia&lt;/li&gt;
&lt;li&gt;Mediana&lt;/li&gt;
&lt;li&gt;Moda&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;MEDIDAS DE DISPERS√ÉO:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Amplitude total&lt;/li&gt;
&lt;li&gt;Vari√¢ncia&lt;/li&gt;
&lt;li&gt;Desvio Padr√£o&lt;/li&gt;
&lt;li&gt;Coeficiente de Varia√ß√£o&lt;/li&gt;
&lt;li&gt;Erro padr√£o da M√©dia&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;PROBABILIDADES:
&lt;ul&gt;
&lt;li&gt;Conceitos b√°sicos&lt;/li&gt;
&lt;li&gt;Defini√ß√µes de probabilidades&lt;/li&gt;
&lt;li&gt;Propriedades&lt;/li&gt;
&lt;li&gt;Eventos independentes e probabilidade condicional&lt;/li&gt;
&lt;li&gt;Teorema de Bayes&lt;/li&gt;
&lt;li&gt;Fun√ß√£o de probabilidade discreta&lt;/li&gt;
&lt;li&gt;Fun√ß√£o de probabilidade cont√≠nua&lt;/li&gt;
&lt;li&gt;Fun√ß√£o de distribui√ß√£o de probabilidade acumulada&lt;/li&gt;
&lt;li&gt;Esperan√ßa matem√°tica e vari√¢ncia&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DISTRIBUI√á√ïES DE PROBABILIDADES:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Distribui√ß√µes discretas de probabilidades&lt;/li&gt;
&lt;li&gt;Distribui√ß√µes cont√≠nuas de probabilidades&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;AMOSTRAGEM:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Amostragem n√£o-probabil√≠stica e probabil√≠stica&lt;/li&gt;
&lt;li&gt;T√©cnicas de amostragem probabil√≠stica&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DISTRIBUI√á√ÉO DE AMOSTRAGEM:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Distribui√ß√£o de amostragem da m√©dia&lt;/li&gt;
&lt;li&gt;Distribui√ß√£o de amostragem de propor√ß√µes&lt;/li&gt;
&lt;li&gt;Distribui√ß√£o de amostragem de diferen√ßa entre m√©dias&lt;/li&gt;
&lt;li&gt;Distribui√ß√µes amostrais (qui-quadrado, t e F)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;TEORIA DA ESTIMA√á√ÉO:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Conceitos b√°sicos&lt;/li&gt;
&lt;li&gt;Tipos de estimativas&lt;/li&gt;
&lt;li&gt;Propriedades de um estimador&lt;/li&gt;
&lt;li&gt;Estima√ß√£o por ponto&lt;/li&gt;
&lt;li&gt;Estima√ß√£o por intervalo:
&lt;ul&gt;
&lt;li&gt;Intervalo de confian√ßa para a m√©dia&lt;/li&gt;
&lt;li&gt;Intervalo de confian√ßa para a vari√¢ncia&lt;/li&gt;
&lt;li&gt;Intervalo de confian√ßa para a diferen√ßa entre m√©dias&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Dimensionamento de amostras&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;TEORIA DA DECIS√ÉO:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Testes de hip√≥teses&lt;/li&gt;
&lt;li&gt;Erros tipo I e II&lt;/li&gt;
&lt;li&gt;Teste unilateral e bilateral&lt;/li&gt;
&lt;li&gt;Passos para a constru√ß√£o de um teste de hip√≥teses&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses para a m√©dia&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses para a propor√ß√£o&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses para a vari√¢ncia&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses para a diferen√ßa entre m√©dias&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CORRELA√á√ÉO E REGRESS√ÉO LINEAR SIMPLES:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Correla√ß√£o linear:&lt;/li&gt;
&lt;li&gt;Coeficiente de correla√ß√£o linear&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses acerca do coeficiente de correla√ß√£o linear&lt;/li&gt;
&lt;li&gt;Regress√£o linear simples:&lt;/li&gt;
&lt;li&gt;Modelo&lt;/li&gt;
&lt;li&gt;Estima√ß√£o dos par√¢metros do modelo&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses para o modelo de regress√£o&lt;/li&gt;
&lt;li&gt;Medidas de adequa√ß√£o do modelo&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;playlist&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fa fa-link&#34;&gt;&lt;/i&gt; &lt;em&gt;Link&lt;/em&gt; da &lt;em&gt;playlist&lt;/em&gt; das v√≠deoaulas&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
  &lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://youtube.com/playlist?list=PL-20Z1XFWKR3GUJ0ylUqUFNWtGQryVoLm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Playlist - Estat√≠stica e Probabilidade 2023.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://youtube.com/playlist?list=PL-20Z1XFWKR1OAedZqTh2zWab3R8Byw4f&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Playlist - Estat√≠stica e Probabilidade 2022.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://youtube.com/playlist?list=PL-20Z1XFWKR1JGnotqkqH98I2xMrVqpv-&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Playlist - Estat√≠stica e Probabilidade 2021.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://youtube.com/playlist?list=PL-20Z1XFWKR2GatfNSFOwfRvPreZ-nW0D&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Estat√≠stica e Probabilidade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://youtube.com/playlist?list=PL-20Z1XFWKR0Hj73LFn8DOO1IIJ0DkzYm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Resumos da Estat√≠stica e Probabilidade&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;vejatbm&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-eye&#34;&gt;&lt;/i&gt; Veja tamb√©m&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-podcast  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/courses/epaec/podcasts/&#34; target=&#34;_blank&#34;&gt;Podcasts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-feather  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/courses/epaec/exerresolvidos/&#34; target=&#34;_blank&#34;&gt;Exerc√≠cios resolvidos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/courses/ear/rbasico/&#34; target=&#34;_blank&#34;&gt;Curso EAR: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-guitar  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/project/cantest/&#34; target=&#34;_blank&#34;&gt;Cantando com a Estat√≠stica&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-file  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/courses/epaec/resest/&#34; target=&#34;_blank&#34;&gt;Resumos da Estat√≠stica&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>üé∏ Cantando com a Estat√≠stica</title>
      <link>http://bendeivide.github.io/courses/epaec/cantest/</link>
      <pubDate>Thu, 13 Jul 2023 07:22:24 +0000</pubDate>
      <guid>http://bendeivide.github.io/courses/epaec/cantest/</guid>
      <description>&lt;details class=&#34;toc-inpage d-print-none d-xl-none &#34; open&gt;
   &lt;summary class=&#34;font-weight-bold&#34;&gt;Sum√°rio&lt;/summary&gt;
   &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#apresentacao&#34;&gt;&lt;i class=&#34;fas fa-chalkboard-teacher&#34;&gt;&lt;/i&gt;  Apresenta√ß√£o&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#vejatbmn&#34;&gt;&lt;i class=&#34;fas fa-eye&#34;&gt;&lt;/i&gt; Veja tamb√©m&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
 &lt;/details&gt;

&lt;h2 id=&#34;apresentacao&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-chalkboard-teacher&#34;&gt;&lt;/i&gt;  Apresenta√ß√£o&lt;/h2&gt;
&lt;p&gt;O projeto Cantando com a Estat√≠stica da disciplina de &lt;strong&gt;Estat√≠stica e Probabilidade&lt;/strong&gt; aplicadas √†s Engenharias e Ci√™ncias (EPAEC) da &lt;a href=&#34;http://ufsj.edu.br&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;, ministradas pelo Prof. &lt;a href=&#34;http://bendeivide.github.io/author/ben-deivide/&#34;&gt;Ben D√™ivide&lt;/a&gt;. Para mais informa√ß√µes acesse a p√°gina do projeto: &lt;a href=&#34;http://bendeivide.github.io/project/cantest/&#34; target=&#34;_blank&#34;&gt;Cantando com a Estat√≠stica&lt;/a&gt;. Esse trabalho est√° vinculado ao &lt;a href=&#34;http://bendeivide.github.io/project/projape/&#34; target=&#34;_blank&#34;&gt; Projeto Aprender Por Ensinar (PAPE)&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;vejatbmn&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-eye&#34;&gt;&lt;/i&gt; Veja tamb√©m&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-podcast  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/courses/epaec/podcasts/&#34; target=&#34;_blank&#34;&gt;Podcasts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-feather  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/courses/epaec/exerresolvidos/&#34; target=&#34;_blank&#34;&gt;Exerc√≠cios resolvidos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/courses/ear/rbasico/&#34; target=&#34;_blank&#34;&gt;Curso EAR: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-video  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/courses/epaec/videoaulas/&#34; target=&#34;_blank&#34;&gt;V√≠deos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-file  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/courses/epaec/resest/&#34; target=&#34;_blank&#34;&gt;Resumos da Estat√≠stica&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-guitar  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/project/cantest/&#34; target=&#34;_blank&#34;&gt;Cantando com a Estat√≠stica&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>üé§ Podcasts</title>
      <link>http://bendeivide.github.io/courses/epaec/podcasts/</link>
      <pubDate>Wed, 12 Jul 2023 16:39:46 +0000</pubDate>
      <guid>http://bendeivide.github.io/courses/epaec/podcasts/</guid>
      <description>&lt;details class=&#34;toc-inpage d-print-none d-xl-none &#34; open&gt;
   &lt;summary class=&#34;font-weight-bold&#34;&gt;Sum√°rio&lt;/summary&gt;
   &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#apresentacao&#34;&gt;&lt;i class=&#34;fas fa-chalkboard-teacher&#34;&gt;&lt;/i&gt;  Apresenta√ß√£o&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#planilha&#34;&gt;&lt;i class=&#34;fas fa-file-excel&#34;&gt;&lt;/i&gt; Planilha da sequ√™ncia dos podcasts&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#ementa&#34;&gt;&lt;i class=&#34;fas fa-list-ol&#34;&gt;&lt;/i&gt; Ementa&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#podcasts&#34;&gt;&lt;i class=&#34;fa fa-link&#34;&gt;&lt;/i&gt; &lt;em&gt;Link&lt;/em&gt; da &lt;em&gt;playlist&lt;/em&gt; dos &lt;em&gt;podcasts&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#vejatbmn&#34;&gt;&lt;i class=&#34;fas fa-eye&#34;&gt;&lt;/i&gt; Veja tamb√©m&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
 &lt;/details&gt;

&lt;p&gt;&lt;em&gt;Podcasts&lt;/em&gt; da disciplina de &lt;strong&gt;Estat√≠stica e Probabilidade&lt;/strong&gt; aplicadas √†s Engenharias e Ci√™ncias (EPAEC) da &lt;a href=&#34;http://ufsj.edu.br&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;, ministradas pelo Prof. &lt;a href=&#34;http://bendeivide.github.io/author/ben-deivide/&#34;&gt;Ben D√™ivide&lt;/a&gt;. Para mais informa√ß√µes sobre a disciplina, acesse o curso: &lt;a href=&#34;http://bendeivide.github.io/courses/epaec/&#34; target=&#34;_blank&#34;&gt; Estat√≠stica e Probabilidade (UFSJ) &lt;/a&gt;. Esse trabalho est√° vinculado ao &lt;a href=&#34;http://bendeivide.github.io/project/projape/&#34; target=&#34;_blank&#34;&gt; Projeto Aprender Por Ensinar (PAPE)&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;apresentacao&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-chalkboard-teacher&#34;&gt;&lt;/i&gt;  Apresenta√ß√£o&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Inserir v√≠deo&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;planilha&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-file-excel&#34;&gt;&lt;/i&gt; Planilha da sequ√™ncia dos podcasts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/spreadsheets/d/1bEf5YLRpOPjhfGm6BvUvzz8MkmF4fAWSv72MdzrIQv0/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Planilha&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ementa&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-list-ol&#34;&gt;&lt;/i&gt; Ementa&lt;/h2&gt;
&lt;p&gt;N√≥s usamos a ementa contida nos Projetos Pedag√≥gicos de Cursos (PPCs) da CAP/UFSJ para embasarmos a organiza√ß√£o dos v√≠deos&lt;/p&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-4&#34;&gt;
  &lt;summary&gt;Acesse a ementa do curso&lt;/summary&gt;
  &lt;p&gt;&lt;ol&gt;
&lt;li&gt;DEFINI√á√ïES GERAIS E T√âCNICAS DE SOMAT√ìRIO:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Defini√ß√µes Gerais&lt;/li&gt;
&lt;li&gt;T√©cnicas de somat√≥rio&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;COLETA, ORGANIZA√á√ÉO E APRESENTA√á√ÉO DE DADOS:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Representa√ß√£o tabular&lt;/li&gt;
&lt;li&gt;Representa√ß√£o gr√°fica&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;MEDIDAS DE POSI√á√ÉO:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;M√©dia&lt;/li&gt;
&lt;li&gt;Mediana&lt;/li&gt;
&lt;li&gt;Moda&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;MEDIDAS DE DISPERS√ÉO:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Amplitude total&lt;/li&gt;
&lt;li&gt;Vari√¢ncia&lt;/li&gt;
&lt;li&gt;Desvio Padr√£o&lt;/li&gt;
&lt;li&gt;Coeficiente de Varia√ß√£o&lt;/li&gt;
&lt;li&gt;Erro padr√£o da M√©dia&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;PROBABILIDADES:
&lt;ul&gt;
&lt;li&gt;Conceitos b√°sicos&lt;/li&gt;
&lt;li&gt;Defini√ß√µes de probabilidades&lt;/li&gt;
&lt;li&gt;Propriedades&lt;/li&gt;
&lt;li&gt;Eventos independentes e probabilidade condicional&lt;/li&gt;
&lt;li&gt;Teorema de Bayes&lt;/li&gt;
&lt;li&gt;Fun√ß√£o de probabilidade discreta&lt;/li&gt;
&lt;li&gt;Fun√ß√£o de probabilidade cont√≠nua&lt;/li&gt;
&lt;li&gt;Fun√ß√£o de distribui√ß√£o de probabilidade acumulada&lt;/li&gt;
&lt;li&gt;Esperan√ßa matem√°tica e vari√¢ncia&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DISTRIBUI√á√ïES DE PROBABILIDADES:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Distribui√ß√µes discretas de probabilidades&lt;/li&gt;
&lt;li&gt;Distribui√ß√µes cont√≠nuas de probabilidades&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;AMOSTRAGEM:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Amostragem n√£o-probabil√≠stica e probabil√≠stica&lt;/li&gt;
&lt;li&gt;T√©cnicas de amostragem probabil√≠stica&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DISTRIBUI√á√ÉO DE AMOSTRAGEM:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Distribui√ß√£o de amostragem da m√©dia&lt;/li&gt;
&lt;li&gt;Distribui√ß√£o de amostragem de propor√ß√µes&lt;/li&gt;
&lt;li&gt;Distribui√ß√£o de amostragem de diferen√ßa entre m√©dias&lt;/li&gt;
&lt;li&gt;Distribui√ß√µes amostrais (qui-quadrado, t e F)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;TEORIA DA ESTIMA√á√ÉO:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Conceitos b√°sicos&lt;/li&gt;
&lt;li&gt;Tipos de estimativas&lt;/li&gt;
&lt;li&gt;Propriedades de um estimador&lt;/li&gt;
&lt;li&gt;Estima√ß√£o por ponto&lt;/li&gt;
&lt;li&gt;Estima√ß√£o por intervalo:
&lt;ul&gt;
&lt;li&gt;Intervalo de confian√ßa para a m√©dia&lt;/li&gt;
&lt;li&gt;Intervalo de confian√ßa para a vari√¢ncia&lt;/li&gt;
&lt;li&gt;Intervalo de confian√ßa para a diferen√ßa entre m√©dias&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Dimensionamento de amostras&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;TEORIA DA DECIS√ÉO:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Testes de hip√≥teses&lt;/li&gt;
&lt;li&gt;Erros tipo I e II&lt;/li&gt;
&lt;li&gt;Teste unilateral e bilateral&lt;/li&gt;
&lt;li&gt;Passos para a constru√ß√£o de um teste de hip√≥teses&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses para a m√©dia&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses para a propor√ß√£o&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses para a vari√¢ncia&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses para a diferen√ßa entre m√©dias&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CORRELA√á√ÉO E REGRESS√ÉO LINEAR SIMPLES:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Correla√ß√£o linear:&lt;/li&gt;
&lt;li&gt;Coeficiente de correla√ß√£o linear&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses acerca do coeficiente de correla√ß√£o linear&lt;/li&gt;
&lt;li&gt;Regress√£o linear simples:&lt;/li&gt;
&lt;li&gt;Modelo&lt;/li&gt;
&lt;li&gt;Estima√ß√£o dos par√¢metros do modelo&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses para o modelo de regress√£o&lt;/li&gt;
&lt;li&gt;Medidas de adequa√ß√£o do modelo&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;podcasts&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fa fa-link&#34;&gt;&lt;/i&gt; &lt;em&gt;Link&lt;/em&gt; da &lt;em&gt;playlist&lt;/em&gt; dos &lt;em&gt;podcasts&lt;/em&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
  &lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://youtube.com/playlist?list=PL-20Z1XFWKR3M4laONv5FlvyKF8tLAHE4&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Podcast2022.2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://youtube.com/playlist?list=PL-20Z1XFWKR2KApqCAJ02WdCKNtZ06zqD&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Podcast(EP-ER)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://youtube.com/playlist?list=PL-20Z1XFWKR3_b1GgyRctQbEsoD-sZkZU&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Podcast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fab fa-spotify  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://open.spotify.com/show/0NhBadqLICDJjoYRGNgrxv?si=93911ccff6de4ce7&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Estat√≠stica e minhas experi√™ncias&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fab fa-google  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://podcasts.google.com/feed/aHR0cHM6Ly9hbmNob3IuZm0vcy8zNzcwNWZhOC9wb2RjYXN0L3Jzcw?hl=pt-br&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Google podcast: Estat√≠stica e minhas experi√™ncias&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;vejatbmn&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-eye&#34;&gt;&lt;/i&gt; Veja tamb√©m&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-feather  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/courses/epaec/exerresolvidos/&#34; target=&#34;_blank&#34;&gt;Exerc√≠cios resolvidos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/courses/ear/rbasico/&#34; target=&#34;_blank&#34;&gt;Curso EAR: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-guitar  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/project/cantest/&#34; target=&#34;_blank&#34;&gt;Cantando com a Estat√≠stica&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-video  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/courses/epaec/videoaulas/&#34; target=&#34;_blank&#34;&gt;V√≠deos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-file  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/courses/epaec/resest/&#34; target=&#34;_blank&#34;&gt;Resumos da Estat√≠stica&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>üìã Resumos da Estat√≠stica</title>
      <link>http://bendeivide.github.io/courses/epaec/resest/</link>
      <pubDate>Wed, 12 Jul 2023 16:30:29 +0000</pubDate>
      <guid>http://bendeivide.github.io/courses/epaec/resest/</guid>
      <description>&lt;details class=&#34;toc-inpage d-print-none d-xl-none &#34; open&gt;
   &lt;summary class=&#34;font-weight-bold&#34;&gt;Sum√°rio&lt;/summary&gt;
   &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#apresentacao&#34;&gt;&lt;i class=&#34;fas fa-chalkboard-teacher&#34;&gt;&lt;/i&gt;  Apresenta√ß√£o&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#planilha&#34;&gt;&lt;i class=&#34;fas fa-file-excel&#34;&gt;&lt;/i&gt; Planilha da sequ√™ncia das v√≠deoaulas&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#ementa&#34;&gt;&lt;i class=&#34;fas fa-list-ol&#34;&gt;&lt;/i&gt; Ementa&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#i-classfas-fa-eyei-veja-tamb√©m&#34;&gt;&lt;i class=&#34;fas fa-eye&#34;&gt;&lt;/i&gt; Veja tamb√©m&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
 &lt;/details&gt;

&lt;h2 id=&#34;apresentacao&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-chalkboard-teacher&#34;&gt;&lt;/i&gt;  Apresenta√ß√£o&lt;/h2&gt;
&lt;p&gt;Resumos da Estat√≠stica  representa uma s√©ries de v√≠deos curtos mostrando uma ideia geral sobre cada assunto da disciplina de &lt;strong&gt;Estat√≠stica e Probabilidade&lt;/strong&gt; aplicadas √†s Engenharias e Ci√™ncias (EPAEC) da &lt;a href=&#34;http://ufsj.edu.br&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;, ministradas pelo Prof. &lt;a href=&#34;http://bendeivide.github.io/author/ben-deivide/&#34;&gt;Ben D√™ivide&lt;/a&gt;. Esse trabalho est√° vinculado ao &lt;a href=&#34;http://bendeivide.github.io/project/projape/&#34; target=&#34;_blank&#34;&gt; Projeto Aprender Por Ensinar (PAPE)&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;planilha&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-file-excel&#34;&gt;&lt;/i&gt; Planilha da sequ√™ncia das v√≠deoaulas&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/spreadsheets/d/1bEf5YLRpOPjhfGm6BvUvzz8MkmF4fAWSv72MdzrIQv0/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Planilha&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ementa&#34; title=&#34;Clique aqui!&#34;&gt;&lt;i class=&#34;fas fa-list-ol&#34;&gt;&lt;/i&gt; Ementa&lt;/h2&gt;
&lt;p&gt;N√≥s usamos a ementa contida nos Projetos Pedag√≥gicos de Cursos (PPCs) da CAP/UFSJ para embasarmos a organiza√ß√£o dos v√≠deos&lt;/p&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-3&#34;&gt;
  &lt;summary&gt;Acesse a ementa do curso&lt;/summary&gt;
  &lt;p&gt;&lt;ol&gt;
&lt;li&gt;DEFINI√á√ïES GERAIS E T√âCNICAS DE SOMAT√ìRIO:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Defini√ß√µes Gerais&lt;/li&gt;
&lt;li&gt;T√©cnicas de somat√≥rio&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;COLETA, ORGANIZA√á√ÉO E APRESENTA√á√ÉO DE DADOS:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Representa√ß√£o tabular&lt;/li&gt;
&lt;li&gt;Representa√ß√£o gr√°fica&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;MEDIDAS DE POSI√á√ÉO:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;M√©dia&lt;/li&gt;
&lt;li&gt;Mediana&lt;/li&gt;
&lt;li&gt;Moda&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;MEDIDAS DE DISPERS√ÉO:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Amplitude total&lt;/li&gt;
&lt;li&gt;Vari√¢ncia&lt;/li&gt;
&lt;li&gt;Desvio Padr√£o&lt;/li&gt;
&lt;li&gt;Coeficiente de Varia√ß√£o&lt;/li&gt;
&lt;li&gt;Erro padr√£o da M√©dia&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;PROBABILIDADES:
&lt;ul&gt;
&lt;li&gt;Conceitos b√°sicos&lt;/li&gt;
&lt;li&gt;Defini√ß√µes de probabilidades&lt;/li&gt;
&lt;li&gt;Propriedades&lt;/li&gt;
&lt;li&gt;Eventos independentes e probabilidade condicional&lt;/li&gt;
&lt;li&gt;Teorema de Bayes&lt;/li&gt;
&lt;li&gt;Fun√ß√£o de probabilidade discreta&lt;/li&gt;
&lt;li&gt;Fun√ß√£o de probabilidade cont√≠nua&lt;/li&gt;
&lt;li&gt;Fun√ß√£o de distribui√ß√£o de probabilidade acumulada&lt;/li&gt;
&lt;li&gt;Esperan√ßa matem√°tica e vari√¢ncia&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DISTRIBUI√á√ïES DE PROBABILIDADES:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Distribui√ß√µes discretas de probabilidades&lt;/li&gt;
&lt;li&gt;Distribui√ß√µes cont√≠nuas de probabilidades&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;AMOSTRAGEM:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Amostragem n√£o-probabil√≠stica e probabil√≠stica&lt;/li&gt;
&lt;li&gt;T√©cnicas de amostragem probabil√≠stica&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DISTRIBUI√á√ÉO DE AMOSTRAGEM:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Distribui√ß√£o de amostragem da m√©dia&lt;/li&gt;
&lt;li&gt;Distribui√ß√£o de amostragem de propor√ß√µes&lt;/li&gt;
&lt;li&gt;Distribui√ß√£o de amostragem de diferen√ßa entre m√©dias&lt;/li&gt;
&lt;li&gt;Distribui√ß√µes amostrais (qui-quadrado, t e F)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;TEORIA DA ESTIMA√á√ÉO:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Conceitos b√°sicos&lt;/li&gt;
&lt;li&gt;Tipos de estimativas&lt;/li&gt;
&lt;li&gt;Propriedades de um estimador&lt;/li&gt;
&lt;li&gt;Estima√ß√£o por ponto&lt;/li&gt;
&lt;li&gt;Estima√ß√£o por intervalo:
&lt;ul&gt;
&lt;li&gt;Intervalo de confian√ßa para a m√©dia&lt;/li&gt;
&lt;li&gt;Intervalo de confian√ßa para a vari√¢ncia&lt;/li&gt;
&lt;li&gt;Intervalo de confian√ßa para a diferen√ßa entre m√©dias&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Dimensionamento de amostras&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;TEORIA DA DECIS√ÉO:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Testes de hip√≥teses&lt;/li&gt;
&lt;li&gt;Erros tipo I e II&lt;/li&gt;
&lt;li&gt;Teste unilateral e bilateral&lt;/li&gt;
&lt;li&gt;Passos para a constru√ß√£o de um teste de hip√≥teses&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses para a m√©dia&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses para a propor√ß√£o&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses para a vari√¢ncia&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses para a diferen√ßa entre m√©dias&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CORRELA√á√ÉO E REGRESS√ÉO LINEAR SIMPLES:
&lt;ul&gt;
&lt;li&gt;Introdu√ß√£o&lt;/li&gt;
&lt;li&gt;Correla√ß√£o linear:&lt;/li&gt;
&lt;li&gt;Coeficiente de correla√ß√£o linear&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses acerca do coeficiente de correla√ß√£o linear&lt;/li&gt;
&lt;li&gt;Regress√£o linear simples:&lt;/li&gt;
&lt;li&gt;Modelo&lt;/li&gt;
&lt;li&gt;Estima√ß√£o dos par√¢metros do modelo&lt;/li&gt;
&lt;li&gt;Teste de hip√≥teses para o modelo de regress√£o&lt;/li&gt;
&lt;li&gt;Medidas de adequa√ß√£o do modelo&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;i-classfas-fa-eyei-veja-tamb√©m&#34;&gt;&lt;i class=&#34;fas fa-eye&#34;&gt;&lt;/i&gt; Veja tamb√©m&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-podcast  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/courses/epaec/podcasts/&#34; target=&#34;_blank&#34;&gt;Podcasts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-feather  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/courses/epaec/exerresolvidos/&#34; target=&#34;_blank&#34;&gt;Exerc√≠cios resolvidos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/courses/ear/rbasico/&#34; target=&#34;_blank&#34;&gt;Curso EAR: R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-video  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/courses/epaec/videoaulas/&#34; target=&#34;_blank&#34;&gt;V√≠deos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Estat√≠stica &amp; Probabilidade: Um curso para o PROFMAT</title>
      <link>http://bendeivide.github.io/books/epprofmat/</link>
      <pubDate>Mon, 22 Jul 2024 20:00:26 +0000</pubDate>
      <guid>http://bendeivide.github.io/books/epprofmat/</guid>
      <description>&lt;p&gt;Gostar√≠amos de agradecer imensamente a Universidade Federal de S√£o Jo√£o del-Rei pelo apoio e a forma de como podemos trabalhar nesse ambiente de ensino, para que o desenvolvimento de nossos materiais resulte no melhor do que podemos entregar. Agradecemos tamb√©m ao &lt;a href=&#34;https://ufsj.edu.br/profmat_cap/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;Programa de Mestrado Profissional em Matem√°tica em Rede Nacional&lt;/em&gt; (&lt;em&gt;PROFMAT&lt;/em&gt;)&lt;/a&gt;, pela Universidade Federal de S√£o Jo√£o del-Rei, campus Alto Paraopeba (CAP), pois sem aceitar esta nossa ousadia, isso n√£o seria poss√≠vel.&lt;/p&gt;
&lt;p&gt;Sem o empenho de cada autor n√£o seria poss√≠vel a publica√ß√£o desse material. Por isso, acreditamos que o trabalho em equipe s√≥ existe quando todos est√£o empenhados no processo, ao passo que, quando h√° um desequil√≠brio por parte de um dos integrantes, os demais est√£o de bra√ßos abertos para reergu√™-lo. Isso √© cooperativismo de produ√ß√£o cient√≠fica, e foi a forma de execu√ß√£o para o desenvolvimento do livro.&lt;/p&gt;
&lt;p&gt;Ademais, agradecemos antecipadamente a voc√™ leitor pela aquisi√ß√£o desse conte√∫do, pois sem a sua presen√ßa este material n√£o faria sentido. Como livro, propague-me, e me deixe voar, porque o &lt;strong&gt;conhecimento √© uma liberdade necess√°ria&lt;/strong&gt;!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>R b√°sico - manual de solu√ß√µes</title>
      <link>http://bendeivide.github.io/books/eambr01sol/</link>
      <pubDate>Mon, 22 Jul 2024 15:59:34 +0000</pubDate>
      <guid>http://bendeivide.github.io/books/eambr01sol/</guid>
      <description>&lt;h2 id=&#34;sugest√µes-e-cr√≠ticas&#34;&gt;Sugest√µes e cr√≠ticas&lt;/h2&gt;
&lt;p&gt;Sugest√µes e cr√≠ticas sobre o livro podem ser enviadas para &lt;a href=&#34;mailto:livrosdeben@gmail.com&#34;&gt;livrosdeben@gmail.com&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;onde-consigo-a-vers√£o-em-pdf&#34;&gt;Onde consigo a vers√£o em PDF?&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;&#34;&gt;Livro R b√°sico (PDF)&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;estat√≠sticas-de-donwload-do-pdf&#34;&gt;Estat√≠sticas de &lt;em&gt;donwload&lt;/em&gt; do PDF?&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;&#34;&gt;Estat√≠sticas do R b√°sico&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;onde-consigo-a-vers√£o-em-html&#34;&gt;Onde consigo a vers√£o em HTML?&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;&#34;&gt;Livro R b√°sico: manual de solu√ß√µes (HTML)&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;onde-consigo-todos-os-scripts-do-livro&#34;&gt;Onde consigo todos os &lt;em&gt;scripts&lt;/em&gt; do livro?&lt;/h2&gt;
&lt;p&gt;O diret√≥rio de todos os &lt;em&gt;scripts&lt;/em&gt; do livro se encontram em: &lt;a href=&#34;&#34;&gt;link&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;onde-consigo-comprar-o-livro-f√≠sico&#34;&gt;Onde consigo comprar o livro f√≠sico?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i class=&#34;fab fa-whatsapp&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://api.whatsapp.com/send?phone=558499819606&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Allanna Lopes (Rep. comercial - compra direta)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;sinopse&#34;&gt;Sinopse&lt;/h2&gt;
&lt;p&gt;O R b√°sico: Manual de Solu√ß√µes vem com o prop√≥sito de detalhar
as estrat√©gias de como resolver os exerc√≠cios do livro R b√°sico,
enfatizando as estrat√©gias com que as solu√ß√µes podem ser desenvolvidas.
Mostraremos mecanismos n√£o apenas de como resolveremos
os problemas, mas como eles podem ser abordados de forma did√°tica
para cursos ou disciplinas que utilizem o R b√°sico.
Por fim, este livro vem complementar todo assunto introdut√≥rio
do R , para o entendimento via exerc√≠cios resolvidos, e esperamos que
o leitor possa retirar ao m√°ximo o que o R pode oferecer.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Estat√≠stica B√°sica Aplicada √†s Ci√™ncias Agr√°rias</title>
      <link>http://bendeivide.github.io/books/estbasica/</link>
      <pubDate>Mon, 22 Jul 2024 15:18:21 +0000</pubDate>
      <guid>http://bendeivide.github.io/books/estbasica/</guid>
      <description>&lt;p&gt;Esta primeira Edi√ß√£o do Livro &lt;em&gt;Estat√≠stica B√°sica Aplicada √†s Ci√™ncias Agr√°rias&lt;/em&gt; √© fruto de todo o material escrito em forma de notas de aula, apostila, listas de exerc√≠cios, bem como a aprendizagem e o ensino transmitido pelo Prof. Telde Natel Custodio em suas aulas de Estat√≠stica. Eu tive o imenso prazer de ser convidado para participar desse projeto porque √© mais uma refer√™ncia de apoio para quem inicia nos estudos da Estat√≠stica B√°sica. Como somos Engenheiros Agr√¥nomos, nada mais recompensador do que devolver toda experi√™ncia adquirida em colabora√ß√µes, consultorias de experimentos agr√≠colas, dentre outras situa√ß√µes experienciadas, de modo que fosse registrada por meio desse material.&lt;/p&gt;
&lt;p&gt;A ideia deste livro foi de introduzir as ideias b√°sicas do que se precisa para entender o mundo da estat√≠stica. Em uma √™nfase pr√°tica, sem tanto rigor matem√°tico na apresenta√ß√£o das defini√ß√µes, teoremas, etc., torna a leitura mais simples e did√°tica para uma √°rea t√£o importante da ci√™ncia como √© a Estat√≠stica. O leitor ser√° capaz de entender os tr√™s pilares da Estat√≠stica: Estat√≠stica Descritiva, Probabilidade e Infer√™ncia Estat√≠stica, sem conte√∫do denso, mas uma abordagem direta da teoria seguida de exemplos para a elucida√ß√£o do assunto.&lt;/p&gt;
&lt;p&gt;Somos apenas o meio pelo qual se propaga o ensino da Estat√≠stica, por meio deste livro. Mas voc√™ leitor seja a fonte do saber, porque s√≥ o conhecimento liberta! Bons estudos!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>R b√°sico</title>
      <link>http://bendeivide.github.io/books/eambr01/</link>
      <pubDate>Mon, 22 Jul 2024 15:06:23 +0000</pubDate>
      <guid>http://bendeivide.github.io/books/eambr01/</guid>
      <description>&lt;h2 id=&#34;sugest√µes-e-cr√≠ticas&#34;&gt;Sugest√µes e cr√≠ticas&lt;/h2&gt;
&lt;p&gt;Sugest√µes e cr√≠ticas sobre o livro podem ser enviadas para &lt;a href=&#34;mailto:livrosdeben@gmail.com&#34;&gt;livrosdeben@gmail.com&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;onde-consigo-a-vers√£o-em-pdf&#34;&gt;Onde consigo a vers√£o em PDF?&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/bendeivide/book-eambr01/raw/main/docs/book-eambr01.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Livro R b√°sico (PDF)&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;estat√≠sticas-de-donwload-do-pdf&#34;&gt;Estat√≠sticas de &lt;em&gt;donwload&lt;/em&gt; do PDF?&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;http://dstats.net/show/https://github.com/bendeivide/book-eambr01/raw/main/docs/book-eambr01.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Estat√≠sticas do R b√°sico&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;onde-consigo-a-vers√£o-em-html&#34;&gt;Onde consigo a vers√£o em HTML?&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/book-eambr01/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Livro R b√°sico (HTML)&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;onde-consigo-todos-os-scripts-do-livro&#34;&gt;Onde consigo todos os &lt;em&gt;scripts&lt;/em&gt; do livro?&lt;/h2&gt;
&lt;p&gt;O diret√≥rio de todos os &lt;em&gt;scripts&lt;/em&gt; do livro se encontram em: &lt;a href=&#34;https://github.com/bendeivide/book-eambr01/tree/main/scripts&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;link&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;onde-consigo-comprar-o-livro-f√≠sico&#34;&gt;Onde consigo comprar o livro f√≠sico?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i class=&#34;fab fa-whatsapp&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://api.whatsapp.com/send?phone=5584998196064&amp;amp;text=Ol%C3%A1!%20Sou%20Allanna%20Lopes%2C%20representante%20comercial%20do%20Livro%20%22R%20b%C3%A1sico%22.%20Antes%20de%20enviar%20a%20mensagem%20para%20mais%20detalhes%2C%20eu%20consigo%20enviar%20o%20livro%20por%20R%24%20150%2C00%20para%20qualquer%20local%20do%20Brasil!&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Allanna Lopes (Rep. comercial - compra direta)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://produto.mercadolivre.com.br/MLB-2838245818-livro-r-basico-capa-simples-colorido-e-impresso-interna-em-preto-e-branco-_JM&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Mercado livre (Capa comum triplex brilhosa; impress√£o interna preto e branco)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://shopee.com.br/product/880978340/20053618529/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Shopee (Capa comum triplex brilhosa; impress√£o interna preto e branco)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.com/dp/6500515994&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Amazon (Capa comum triplex brilhosa; impress√£o interna colorida)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.com/dp/6500531914&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Amazon (Capa comum triplex brilhosa; impress√£o interna preto e branco)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;sinopse&#34;&gt;Sinopse&lt;/h2&gt;
&lt;p&gt;A cole√ß√£o &lt;em&gt;Estudando o ambiente R&lt;/em&gt; √© fruto de cursos ministrados sobre essa linguagem, bem como consultorias e estudos ao longo dos anos. Em 2005, quando ingressei na academia no curso de Engenharia Agron√¥mica fiquei fascinado com a disciplina de Estat√≠stica no segundo semestre do ano corrente. Na sequ√™ncia, acabo tendo o primeiro contato com o ambiente R, com pouco mais de 9 anos de seu lan√ßamento e redistribui√ß√£o. Poucos materiais naquela √©poca haviam dispon√≠veis em l√≠ngua portuguesa. Por√©m, foi o suficiente para eu entender que estava diante de uma grande ferramenta computacional e estat√≠stica, necess√°ria para o entendimento, pois sabia que poderia me gerar al√©m de conhecimento, bons frutos acad√™micos.&lt;/p&gt;
&lt;p&gt;Hoje, no ano de 2021, usu√°rio h√° mais de 15 anos dessa linguagem, percebi que me sentia desconfort√°vel, como apenas us√°rio dessa ferramenta de trabalho. E assim, quando queremos aprender algo n√£o h√° ferramenta melhor do que &lt;em&gt;aprender por ensinar&lt;/em&gt;. E assim, lotado no Departamento de Estat√≠stica, F√≠sica e Matem√°tica (&lt;a href=&#34;http://defim.ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DEFIM&lt;/a&gt;, campus Alto Paraopeba, pela Universidade Federal de S√£o Jo√£o del-Rei (&lt;a href=&#34;https://www.ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;), juntamente com o Centro Acad√™mico de Engenharia de Telecomunica√ß√µes (UFSJ), resolvemos em parceria, ministrar nesse momento de pandemia uma sequ√™ncia de m√≥dulos para o curso R, desde o n√≠vel B√°sico at√© ao m√≥dulo Avan√ßado.&lt;/p&gt;
&lt;p&gt;A ideia desse curso foi apresentar algo diferente relacionado a maioria dos cursos em R, que foi sempre apresentar essa ferramenta dentro dos conceitos da √°rea da Estat√≠stica. Apesar de uma coisa ser intr√≠nseca a outra, h√° muitas particularidades no ambiente R que s√£o complexos, e muitas vezes julgados erroneamente. Um dos exemplos cl√°ssicos √© que &lt;em&gt;loops&lt;/em&gt; em R s√£o lentos e com alto gasto de mem√≥ria, quando na realiadade, isso ocorre muitas vezes pelo n√£o entendimento do sistema de c√≥pia de objetos nesse ambiente. Ainda mais, o entendimento desses cursos √© agravado porque o entendimento sobre a estat√≠stica al√©m de um cunho matem√°tico, tem o seu cunho filos√≥fico de como as metodologias foram desenvolvidas, e o entendimento m√∫tuo da Estat√≠stica e o ambiente R, podem n√£o ter o conhecimento real que essa potencial ferramenta pode proporcionar, uma vez que muitos assuntos complexos podem estar envolvidos em uma √∫nica aula.&lt;/p&gt;
&lt;p&gt;Assim, desenvolvemos na cole√ß√£o &lt;em&gt;Estudando o ambiente R&lt;/em&gt; os tr√™s volumes iniciais, referentes a apenas a linguagem R, sendo &lt;em&gt;Volume I: N√≠vel B√°sico&lt;/em&gt;, &lt;em&gt;Volume II: N√≠vel Intermedi√°rio&lt;/em&gt; e &lt;em&gt;Volume III: N√≠vel Avan√ßado&lt;/em&gt;. Fazendo a alus√£o dos tr√™s livros iniciais sobre a linguagem S de John Chambers, faremos uma explana√ß√£o sobre assuntos de menor complexidade at√© no√ß√µes mais complexas sobre o ambiente R, restringindo apenas a sintaxe e sem√¢ntica da linguagem. Os volumes subsequentes ser√£o destinados a &lt;em&gt;Documenta√ß√µes no R&lt;/em&gt;, &lt;em&gt;Desenvolvimento de pacote R&lt;/em&gt;, &lt;em&gt;Gr√°ficos&lt;/em&gt;, &lt;em&gt;Banco de dados&lt;/em&gt;, &lt;em&gt;Interface Gr√°fica ao Usu√°rio&lt;/em&gt;, &lt;em&gt;Interface R com outras linguagens&lt;/em&gt;, &lt;em&gt;Programa√ß√£o Orientada a Objetos&lt;/em&gt;, &lt;em&gt;Fun√ß√µes do pacote base&lt;/em&gt;, dentre outros.&lt;/p&gt;
&lt;p&gt;Tentando engajar nossos alunos, e agora colegas de trabalho, tenho a parceria no Volume I, de &lt;a href=&#34;https://digoarthur.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Diego Arthur&lt;/a&gt;, uma pessoa que tenta se superar a cada desafio e assunto estudado.&lt;/p&gt;
&lt;p&gt;Esse primeiro volume, que representa o livro corrente, apresenta um breve &lt;strong&gt;hist√≥rico&lt;/strong&gt; sobre a linguagem, a sua instala√ß√£o, bem como os recursos que a &lt;em&gt;IDE&lt;/em&gt;&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;RStudio, o conhecimento da &lt;strong&gt;sintaxe&lt;/strong&gt; e &lt;strong&gt;sem√¢ntica&lt;/strong&gt; da linguagem R, compreendendo as estruturas bases da linguagem, sobre o que √© um &lt;strong&gt;objeto&lt;/strong&gt; e como construir uma &lt;strong&gt;fun√ß√£o&lt;/strong&gt;, o entendimento sobre &lt;strong&gt;fluxos de controle&lt;/strong&gt;. O que √© um &lt;strong&gt;pacote&lt;/strong&gt;, &lt;strong&gt;carregar&lt;/strong&gt; e &lt;strong&gt;anexar&lt;/strong&gt; um pacote, e quem s√£o as pessoas que fazem parte da manuten√ß√£o dessa linguagem, tamb√©m ser√£o assuntos desse primeiro m√≥dulo. &lt;strong&gt;Caminho de busca&lt;/strong&gt;, &lt;strong&gt;ambientes&lt;/strong&gt; e &lt;strong&gt;namespaces&lt;/strong&gt;, teremos no√ß√µes b√°sicas. Algo muito interessante, que pode mudar a vida de um programador em R s√£o as &lt;strong&gt;boas pr√°ticas para a escrita de um c√≥digo&lt;/strong&gt;, tema tamb√©m abordado nesse m√≥dulo.&lt;/p&gt;
&lt;p&gt;A ideia desse volume √© proporcionar um entendimento b√°sico, um primeiro contato com a linguagem, fazendo com que o leitor possa dar os primeiros passos, executando as primeiras linhas de comando. Mas tamb√©m, dando o enfoque com erros t√£o recorrentes, como o entendimento sobre um objeto, ou o anexo de um pacote no caminho de busca. Temas como esses, dentre outros, ser√£o a forma inicial que encontramos, para que posteriormente, seja dado um aprofundamento sobre a estrutura de um objeto R bem como a sua manipula√ß√£o, e adicionado a isso, a inser√ß√£o de como s√£o os paradigmas da programa√ß√£o nesse ambiente.&lt;/p&gt;
&lt;p&gt;Por fim, espero que esse primeiro volume possa servir de refer√™ncia para os passos iniciais nessa ferramenta t√£o importante para a √°rea de an√°lise de dados.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;Do ingl√™s, &lt;em&gt;Integrated Development Environment&lt;/em&gt;, que significa ambiente de desenvolvimento integrado.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Estima√ß√£o Estat√≠stica</title>
      <link>http://bendeivide.github.io/books/estest/</link>
      <pubDate>Fri, 19 Jul 2024 14:06:26 +0000</pubDate>
      <guid>http://bendeivide.github.io/books/estest/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;Ano: 2021&lt;/li&gt;
&lt;li&gt;ISBN: 978-65-88319-63-5&lt;/li&gt;
&lt;li&gt;DOI: &lt;a href=&#34;https://doi.org/10.46420/9786588319635&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://doi.org/10.46420/9786588319635&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Autor(es): Janilson Pinheiro de Assis, Roberto Pequeno de Sousa, Paulo C√©sar Ferreira Linhares, Ben D√™ivide de Oliveira Batista e Eudes de Almeida Cardoso&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Meu p√© de beterraba</title>
      <link>http://bendeivide.github.io/books/meupedebeterraba/</link>
      <pubDate>Wed, 21 Feb 2024 16:28:51 +0000</pubDate>
      <guid>http://bendeivide.github.io/books/meupedebeterraba/</guid>
      <description>&lt;h2 id=&#34;sugest√µes-e-cr√≠ticas&#34;&gt;Sugest√µes e cr√≠ticas&lt;/h2&gt;
&lt;p&gt;Sugest√µes e cr√≠ticas sobre o livro podem ser enviadas para &lt;a href=&#34;mailto:livrosdeben@gmail.com&#34;&gt;livrosdeben@gmail.com&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pref√°cio&#34;&gt;Pref√°cio&lt;/h2&gt;
&lt;p&gt;Compartilhar experi√™ncias sobre o que se aprende √© algo fascinante, principalmente quando esta experi√™ncia √© realizada com nossos filhos. A atividade solicitada pela Tia Leci, professora do 2¬∞ ano de Maria Isabel, motivou-me para mostrar como pode ser legal compartilhar conhecimento com nossos filhos. O objetivo da atividade foi observar um p√© de beterraba e verificar o comportamento da planta ao longo do seu crescimento. O que foi legal, foi perceber que, eu e Maria Isabel, aprendemos muitas coisas juntos, e assim, todos temos o que ensinar e tamb√©m o que aprender.&lt;/p&gt;
&lt;p&gt;Boa leitura nessa nossa experi√™ncia de observar nosso p√© de beterraba!&lt;/p&gt;
&lt;div align=&#34;right&#34; &gt;
&lt;p&gt;&lt;strong&gt;Ben D√™ivide&lt;/strong&gt;
&lt;/br&gt;
Ouro Branco, MG, 14 de dezembro de 2023&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Materiais did√°ticos e Pacotes R para an√°lise de experimentos</title>
      <link>http://bendeivide.github.io/post/expagric40/</link>
      <pubDate>Thu, 23 Nov 2023 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/post/expagric40/</guid>
      <description>&lt;h2 id=&#34;informa√ß√µes-gerais&#34;&gt;Informa√ß√µes Gerais&lt;/h2&gt;
&lt;p&gt;A palestra ser√° realizada no 2¬∞ Workshop: Experimenta√ß√£o na Agricultura 4.0, dia 23/11/2023, √†s 19h em formato online.&lt;/p&gt;
&lt;h2 id=&#34;data-hor√°rio-e-link&#34;&gt;Data, hor√°rio e link&lt;/h2&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-calendar-day  pr-1 fa-fw&#34;&gt;&lt;/i&gt; 23/11/2023, 19h (Hor√°rio de Bras√≠lia)&lt;/p&gt;
&lt;p&gt;
  &lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=AWEhHsAGJJk&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Canal Alcinei Azevedo - Dicas e aulas&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;link-da-palestra&#34;&gt;Link da palestra&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=AWEhHsAGJJk&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Link da Palestra&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;script-da-apresenta√ß√£o&#34;&gt;&lt;em&gt;Script&lt;/em&gt; da apresenta√ß√£o&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/expagr/script.R&#34; target=&#34;_blank&#34;&gt;Script R&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;mais-detalhes-do-evento&#34;&gt;Mais detalhes do evento&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.expstat.com/eventos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2¬∞ Workshop: Experimenta√ß√£o na Agricultura 4.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Oficina do Livro</title>
      <link>http://bendeivide.github.io/talk/oficina-do-livro/</link>
      <pubDate>Wed, 18 Oct 2023 19:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/talk/oficina-do-livro/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Clique no bot√£o &lt;strong&gt;Slides&lt;/strong&gt; acima para visualizar o recurso de slides integrado.
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Como criar uma website via R</title>
      <link>http://bendeivide.github.io/talk/como-criar-uma-website-via-r/</link>
      <pubDate>Tue, 07 Mar 2023 14:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/talk/como-criar-uma-website-via-r/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Clique no bot√£o &lt;strong&gt;Slides&lt;/strong&gt; acima para visualizar o recurso de slides integrado.
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Lan√ßamento do livro R b√°sico (Unifal/MG)</title>
      <link>http://bendeivide.github.io/post/rbasico-unifal/</link>
      <pubDate>Wed, 19 Oct 2022 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/post/rbasico-unifal/</guid>
      <description>&lt;h2 id=&#34;informa√ß√µes-gerais&#34;&gt;Informa√ß√µes Gerais&lt;/h2&gt;
&lt;p&gt;O lan√ßamento do Livro &lt;a href=&#34;https://bendeivide.github.io/books/eambr01/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R b√°sico&lt;/a&gt; ser√° realizado pelo canal do &lt;a href=&#34;https://youtube.com/bendeivide&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;youtube.com/bendeivide&lt;/a&gt;, na UNIFAL/MG.&lt;/p&gt;
&lt;h2 id=&#34;data-hor√°rio-e-link&#34;&gt;Data, hor√°rio e link&lt;/h2&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-calendar-day  pr-1 fa-fw&#34;&gt;&lt;/i&gt; 19/10/2022, 14h (Hor√°rio de Bras√≠lia)&lt;/p&gt;
&lt;p&gt;
  &lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://youtu.be/PqtafpsBpKs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://youtu.be/PqtafpsBpKs&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;link-da-palestra&#34;&gt;Link da palestra&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/slides/rbasico-unifal/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Palestra do livro R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;p√°gina-do-r-b√°sico&#34;&gt;P√°gina do R b√°sico&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/books/eambr01/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Lan√ßamento do livro R b√°sico</title>
      <link>http://bendeivide.github.io/post/rbasico/</link>
      <pubDate>Mon, 17 Oct 2022 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/post/rbasico/</guid>
      <description>&lt;h2 id=&#34;informa√ß√µes-gerais&#34;&gt;Informa√ß√µes Gerais&lt;/h2&gt;
&lt;p&gt;O lan√ßamento do Livro &lt;a href=&#34;https://bendeivide.github.io/books/eambr01/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R b√°sico&lt;/a&gt; ser√° realizado pelo canal do &lt;a href=&#34;https://youtube.com/bendeivide&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;youtube.com/bendeivide&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;data-hor√°rio-e-link&#34;&gt;Data, hor√°rio e link&lt;/h2&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-calendar-day  pr-1 fa-fw&#34;&gt;&lt;/i&gt; 28/09/2022, 19h (Hor√°rio de Bras√≠lia)&lt;/p&gt;
&lt;p&gt;
  &lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://youtu.be/wsdUz44Tfw4&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://youtu.be/wsdUz44Tfw4&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;link-da-palestra&#34;&gt;Link da palestra&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/slides/rbasico/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Palestra do livro R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;inscri√ß√µes-para-o-sorteio-de-um-livro-r-b√°sico&#34;&gt;Inscri√ß√µes para o sorteio de um livro R b√°sico&lt;/h2&gt;
&lt;p&gt;
  &lt;i class=&#34;far fa-calendar-check  pr-1 fa-fw&#34;&gt;&lt;/i&gt; 28/09/2022 (19h - 19h30min.)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Incri√ß√£o no hor√°rio da live (GRATUITA):&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe src=&#34;https://docs.google.com/forms/d/e/1FAIpQLSddYENXWOrw232TP3j2lGuvEYKAKHkhrrAEnKBdQ40hzOTwpw/viewform?embedded=true&#34; width=&#34;640&#34; height=&#34;1415&#34; frameborder=&#34;0&#34; marginheight=&#34;0&#34; marginwidth=&#34;0&#34;&gt;Carregando‚Ä¶&lt;/iframe&gt;
&lt;h2 id=&#34;p√°gina-do-r-b√°sico&#34;&gt;P√°gina do R b√°sico&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/books/eambr01/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R b√°sico&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Pelos Caminhos de Ciri√©gola</title>
      <link>http://bendeivide.github.io/books/ciriegola/</link>
      <pubDate>Tue, 11 Oct 2022 08:11:01 +0000</pubDate>
      <guid>http://bendeivide.github.io/books/ciriegola/</guid>
      <description>&lt;h2 id=&#34;sugest√µes-e-cr√≠ticas&#34;&gt;Sugest√µes e cr√≠ticas&lt;/h2&gt;
&lt;p&gt;Sugest√µes e cr√≠ticas sobre o livro podem ser enviadas para &lt;a href=&#34;mailto:livrosdeben@gmail.com&#34;&gt;livrosdeben@gmail.com&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pref√°cio&#34;&gt;Pref√°cio&lt;/h2&gt;
&lt;p&gt;Alegra-nos o cora√ß√£o a presente iniciativa e boa vontade do jovem Ben D√™ivide de Oliveira Batista em deixar grafado um pouco do trabalho deixado por seu pai, Jos√© Alcig√©rio Batista, mais conhecido como L√©o Batista. Quanto ao seu genitor temos vivido juntos com esse buscador por mais de seis d√©cadas e ningu√©m mais, ningu√©m melhor do que ‚Äún√≥s‚Äù sabe a trajet√≥ria desta alma velha inexoravelmente apaixonada pela imortalidade de suas convic√ß√µes inusitadas e apaixonado pelas pessoas humildes e simples do seu tempo nas escolas p√∫blicas. Trouxe na sua gen√©tica os tra√ßos funcionais do seu pai, construtor de a√ßude, o mestre Alcides Batista, e o jeito m√°gico de ver as coisas da professora de alfabetiza√ß√£o Dona Jos√©lia Batista, sua genitora. O material contido neste op√∫sculo √© o resultado dos arquivos esquecidos de L√©o e garimpados por Ben D√™ivide ao longo de muitos anos. Jamais foi o desejo do professor tornar p√∫blico seu pensamento em forma de prosa, verso ou m√∫sica, tendo em vista a m√° interpreta√ß√£o e m√° uso daqueles conceitos pelas mentalidades jovens e dessa forma gerar ‚Äúcausa e efeito‚Äù negativo na sua pr√≥pria trajet√≥ria encarnat√≥ria como aconteceu num pret√©rito n√£o muito distante de n√≥s. Estes excertos s√£o todos carregados de magia e misticismo como assim foi e √© a exist√™ncia desse oper√°rio da educa√ß√£o, n√£o est√£o sujeitos ao tempo de nosso tempo e foram moldados de forma an√°rquica e antisect√°ria, n√£o foram confeccionados com um fim de publicidade eg√≥ica, mas como um registro pessoal do seu ‚Äúinstante‚Äù ao entendimento da sua gera√ß√£o filial futura. N√≥s que acompanhamos ‚Äúna pele‚Äù a trajet√≥ria deste mensageiro sabemos qu√£o sofrida √© a miss√£o de quem vem para este orbe com a CONSCI√äNCIA aflorada para al√©m do seu tempo e isto est√° marcado nos seus solil√≥quios que aqui foram grafados, √© evidente que esta ess√™ncia n√£o se encaixe na compreens√£o de muitos, posto que n√£o se pode ver qualidades nos outros quando n√£o se tem as mesmas no arquivo interior. Ademais, o leitor com um pouco de sag√°cia ser√° atra√≠do pelo mist√©rio que existe na arte liter√°ria modesta deste vision√°rio artes√£o do verbo. Congratulamo-nos com o professor Ben D√™ivide pela iniciativa da sua inten√ß√£o em publicar parte da obra mandingueira do seu pai e amigo. Lembremos sempre que ‚ÄúO AMOR √© a FONTE, a ALEGRIA √© o PODER e a Vida √© a CELEBRA√á√ÉO‚Äù.&lt;/p&gt;
&lt;div align=&#34;right&#34; &gt;
Alice Iorg, Gl√≠cia Ero, Crol Iagie, Ciri√©gola, Grilo Cai√©...
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Lan√ßamento do livro R b√°sico</title>
      <link>http://bendeivide.github.io/talk/lancamento-do-livro-r-basico/</link>
      <pubDate>Wed, 28 Sep 2022 19:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/talk/lancamento-do-livro-r-basico/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Clique no bot√£o &lt;strong&gt;Slides&lt;/strong&gt; acima para visualizar o recurso de slides integrado.
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Estat√≠stica &amp; Probabilidade</title>
      <link>http://bendeivide.github.io/books/epaec/</link>
      <pubDate>Fri, 02 Sep 2022 06:36:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/books/epaec/</guid>
      <description>&lt;h2 id=&#34;sugest√µes-e-cr√≠ticas&#34;&gt;Sugest√µes e cr√≠ticas&lt;/h2&gt;
&lt;p&gt;Sugest√µes e cr√≠ticas sobre o livro podem ser enviadas para &lt;a href=&#34;mailto:livrosdeben@gmail.com&#34;&gt;livrosdeben@gmail.com&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;detalhes-sobre-o-livro&#34;&gt;Detalhes sobre o livro&lt;/h2&gt;
&lt;p&gt;O livro est√° em desenvolvimento nas duas vers√µes, impressa e digital. A vers√£o digital √© um &lt;a href=&#34;http://bendeivide.github.io/book-epaec&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;bookdown&lt;/em&gt;&lt;/a&gt;, como tamb√©m sua vers√£o em &lt;a href=&#34;https://github.com/bendeivide/book-epaec/raw/master/docs/book-epaec.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PDF&lt;/a&gt;, e o projeto encontra-se no reposit√≥rio &lt;a href=&#34;https://github.com/bendeivide/book-epaec&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Rapidinhas do R</title>
      <link>http://bendeivide.github.io/project/rapidinhasr/</link>
      <pubDate>Thu, 14 Apr 2022 07:54:13 +0000</pubDate>
      <guid>http://bendeivide.github.io/project/rapidinhasr/</guid>
      <description>&lt;h2 id=&#34;abertura-da-s√©rie-rapidinhas-do-r&#34;&gt;Abertura da s√©rie Rapidinhas do R&lt;/h2&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/7ThNBHuM_hU&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2 id=&#34;objetivo&#34;&gt;Objetivo&lt;/h2&gt;
&lt;p&gt;A ideia da s√©rie de v√≠deos &lt;strong&gt;Rapidinhas do R&lt;/strong&gt; foi criada com o objetivo de compartilharmos nossas experi√™ncias sobre o ambiente R.&lt;/p&gt;
&lt;h2 id=&#34;scripts&#34;&gt;Scripts&lt;/h2&gt;
&lt;p&gt;Todos os &lt;em&gt;scripts&lt;/em&gt; apresentados na s√©rie est√£o dispon√≠veis em &lt;a href=&#34;https://github.com/bendeivide/rapidinhasdor/tree/main/rapidinhas&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Diret√≥rio de &lt;em&gt;Scripts&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;playlist-da-s√©rie-no-youtube&#34;&gt;Playlist da s√©rie no Youtube&lt;/h2&gt;
&lt;p&gt;Segue o link &lt;a href=&#34;https://youtube.com/playlist?list=PL-20Z1XFWKR1YPXb12UMmXRsAKelZhzca&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;youtube.com/bendeivide/RapidinhasR&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;rapidinhas&#34;&gt;Rapidinhas&lt;/h2&gt;
&lt;h3 id=&#34;rapidinhas-r-0001-operadores-bin√°rios&#34;&gt;Rapidinhas R (0001): Operadores bin√°rios&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/BYzeP0zroGg&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;rapidinhas-r-0002-como-desenvolver-seu-operador-pipe-operador-un√°rio&#34;&gt;Rapidinhas R (0002): Como desenvolver seu operador &amp;lsquo;pipe&amp;rsquo; (Operador un√°rio)&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/kQqKcDl0wUM&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;rapidinhas-r-0003--atribui√ß√£o-ou-superatribui√ß√£o&#34;&gt;Rapidinhas R (0003):  Atribui√ß√£o ou superatribui√ß√£o?&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/66dYCoJH9IM&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;rapidinhas-r-0004-acessando-fun√ß√µes-internas-de-um-pacote&#34;&gt;Rapidinhas R (0004): Acessando fun√ß√µes internas de um pacote&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/VMip8fVUAVc&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;rapidinhas-r-0005-sincronizando-projeto-rrstudio-ao-github&#34;&gt;Rapidinhas R (0005): Sincronizando Projeto R/RStudio ao GitHub&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/0tYss8T7Mew&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;rapidinhas-r-0006-adicionando-comentando-e-enviando-arquivos-ao-reposit√≥rio-github&#34;&gt;Rapidinhas R (0006): Adicionando, comentando e enviando arquivos ao reposit√≥rio GitHub&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/f9NUvS6J5DI&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;rapidinhas-r-0007-usando-o-terminal-bash-github-no-rstudio&#34;&gt;Rapidinhas R (0007): Usando o terminal Bash GitHub no RStudio&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/nYJkO4454Q0&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;rapidinhas-r-0008-executando-o-comando-pull-github-no-rstudio&#34;&gt;Rapidinhas R (0008): Executando o comando &amp;ldquo;pull&amp;rdquo; GitHub no RStudio&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/YSzS0q6lrgg&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;rapidinhas-r-0009-o-que-significa-o-arquivo-gitignore&#34;&gt;Rapidinhas R (0009): O que significa o arquivo &amp;lsquo;.gitignore&amp;rsquo;?&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/C9JtFhdQHLo&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;rapidinhas-r-0010-clonando-um-reposit√≥rio-pelo-terminal-github-e-rstudio&#34;&gt;Rapidinhas R (0010): Clonando um reposit√≥rio pelo terminal GitHub e RStudio&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/A3C5zPC61UY&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;rapidinhas-r-0011-clonando-um-reposit√≥rio-pelo-terminal-github-e-rstudio-parte-ii&#34;&gt;Rapidinhas R (0011): Clonando um reposit√≥rio pelo terminal GitHub e RStudio (Parte II)&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/0VNFn4rE_Mw&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;rapidinhas-r-0012-configurando-o-token-do-github-no-rstudio&#34;&gt;Rapidinhas R (0012): Configurando o &amp;lsquo;Token&amp;rsquo; do GitHub no RStudio&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/6pVikRF7FQo&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;rapidinhas-r-0013-configurando-o-token-usando-renviron-githubrstudio&#34;&gt;Rapidinhas R (0013): Configurando o &amp;lsquo;Token&amp;rsquo; usando .Renviron (GitHub/RStudio)&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/5FtccvTSbYc&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;rapidinhas-r-0014-uso-do-pacote-usethis-para-a-cria√ß√£o-de-um-reposit√≥rio-githubprojeto-rstudio&#34;&gt;Rapidinhas R (0014): Uso do pacote &amp;lsquo;usethis&amp;rsquo; para a cria√ß√£o de um reposit√≥rio GitHub/projeto RStudio&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/RUDB0Nm3t10&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;rapidinhas-r-0015-hist√≥rico-de-projeto-no-reposit√≥rio-github-com-o-rstudio&#34;&gt;Rapidinhas R (0015): Hist√≥rico de projeto no reposit√≥rio GitHub com o RStudio&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/MQEubR328po&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;rapidinhas-r-0016-branch-e-merge-no-reposit√≥rio-github-com-o-rstudio&#34;&gt;Rapidinhas R (0016): &amp;ldquo;Branch&amp;rdquo; e &amp;ldquo;Merge&amp;rdquo; no reposit√≥rio GitHub com o RStudio&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/kmO183CNqoE&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;rapidinhas-r-0017-cuidado-com-o-attach&#34;&gt;Rapidinhas R (0017): Cuidado com o &amp;ldquo;attach()&amp;rdquo;&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/k8rVCr6TzTg&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;rapidinhas-r-0018-criando-um-site-com-o-pacote-distill&#34;&gt;Rapidinhas R (0018): Criando um site com o pacote &amp;ldquo;distill&amp;rdquo;&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/FbTLrfYWQQw&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;rapidinhas-r-0019-acessando-fun√ß√µes-internas-de-um-pacote&#34;&gt;Rapidinhas R (0019): Acessando fun√ß√µes internas de um pacote&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/-DOk1_6lphs&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;rapidinhas-r-0020-criando-um-site-via-blogdown--hugo&#34;&gt;Rapidinhas R (0020): Criando um site via blogdown + Hugo&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/J4wJ5cK8KkU&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;rapidinhas-r-0021-criando-um-site-via-blogdown--hugo-parte-ii&#34;&gt;Rapidinhas R (0021): Criando um site via blogdown + Hugo (Parte II)&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/vkfUQwPINXI&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;rapidinhas-r-0022-criando-um-site-via-blogdown--hugo-traduzindo-para-outros-idiomas&#34;&gt;Rapidinhas R (0022): Criando um site via blogdown + Hugo (Traduzindo para outros idiomas)&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/1nxD_bU87Wg&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>üéì Projeto Concurseiros da Estat√≠stica</title>
      <link>http://bendeivide.github.io/project/conc_estat/</link>
      <pubDate>Mon, 04 Apr 2022 20:22:11 +0000</pubDate>
      <guid>http://bendeivide.github.io/project/conc_estat/</guid>
      <description>&lt;h2 id=&#34;introdu√ß√£o&#34;&gt;Introdu√ß√£o&lt;/h2&gt;
&lt;p&gt;Projeto Concurseiros da Estat√≠stica vem com o prop√≥sito de repassar a minha experi√™ncia ao longo dos concursos para o magist√©rio superior na √°rea da Estat√≠stica. Disponibilizarei todas as notas desenvolvidas ao longo dos diversos pontos estudados para os mais variados concursos. Repassaremos algumas estrat√©gias experienciadas por mim. Assim, n√£o tome tudo como verdade, seja cr√≠tico, aproveite o que for bom, melhore os nossos materiais, e propague conhecimento.&lt;/p&gt;
&lt;h2 id=&#34;prepara√ß√£o-psicol√≥gica&#34;&gt;Prepara√ß√£o psicol√≥gica&lt;/h2&gt;
&lt;h2 id=&#34;estrat√©gias-para-estudo&#34;&gt;Estrat√©gias para estudo&lt;/h2&gt;
&lt;h2 id=&#34;como-desenvolver-os-pontos-para-prova-escrita-e-did√°tica&#34;&gt;Como desenvolver os pontos para prova escrita e did√°tica&lt;/h2&gt;
&lt;h2 id=&#34;memorial&#34;&gt;Memorial&lt;/h2&gt;
&lt;h2 id=&#34;plano-de-ensino&#34;&gt;Plano de Ensino&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-person-chalkboard  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/concurseiros_estatistica/plano_aula.pdf&#34; target=&#34;_blank&#34;&gt;Plano de aula (PDF)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-person-chalkboard  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/concurseiros_estatistica/plano_aula.tex&#34; target=&#34;_blank&#34;&gt;Plano de aula ( $ \LaTeX $ )&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;t√≥picos-estudados&#34;&gt;T√≥picos estudados&lt;/h2&gt;
&lt;p&gt;Vamos seguir alguns t√≥picos que foram amplamente pontos dos mais diversos concursos que participei na √°rea da Estat√≠stica&lt;/p&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-4&#34;&gt;
  &lt;summary&gt;T√≥picos estudados&lt;/summary&gt;
  &lt;p&gt;&lt;ol&gt;
&lt;li&gt;T√≥pico 1: Conceitos de Probabilidade - Experimento Aleat√≥rio; Espa√ßo de Probabilidade; Probabilidade Condicional e Independ√™ncia. Teorema de Bayes&lt;/li&gt;
&lt;li&gt;T√≥pico 2: Vari√°vel Aleat√≥ria&lt;/li&gt;
&lt;li&gt;T√≥pico 3: Vetores Aleat√≥rios&lt;/li&gt;
&lt;li&gt;T√≥pico 4: Teoremas Limite&lt;/li&gt;
&lt;li&gt;T√≥pico 5: Estima√ß√£o pontual&lt;/li&gt;
&lt;li&gt;T√≥pico 6: Estima√ß√£o intervalar&lt;/li&gt;
&lt;li&gt;T√≥pico 7: Testes de hip√≥teses&lt;/li&gt;
&lt;li&gt;T√≥pico 8: Regress√£o Linear&lt;/li&gt;
&lt;li&gt;T√≥pico 9: An√°lise de S√©ries temporais&lt;/li&gt;
&lt;li&gt;T√≥pico 10: Amostragem&lt;/li&gt;
&lt;li&gt;T√≥pico 11: Controle Estat√≠stico de Qualidade&lt;/li&gt;
&lt;/ol&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;h2 id=&#34;materiais-desenvolvidos-para-prova-escrita&#34;&gt;Materiais desenvolvidos para prova escrita&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-user-edit  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/concurseiros_estatistica/topico01.pdf&#34; target=&#34;_blank&#34;&gt;T√≥pico 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-user-edit  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/concurseiros_estatistica/topico02.pdf&#34; target=&#34;_blank&#34;&gt;T√≥pico 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-user-edit  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/concurseiros_estatistica/topico03.pdf&#34; target=&#34;_blank&#34;&gt;T√≥pico 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-user-edit  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/concurseiros_estatistica/topico04.pdf&#34; target=&#34;_blank&#34;&gt;T√≥pico 4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-user-edit  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/concurseiros_estatistica/topico05.pdf&#34; target=&#34;_blank&#34;&gt;T√≥pico 5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-user-edit  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/concurseiros_estatistica/topico06.pdf&#34; target=&#34;_blank&#34;&gt;T√≥pico 6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-user-edit  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/concurseiros_estatistica/topico07.pdf&#34; target=&#34;_blank&#34;&gt;T√≥pico 7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-user-edit  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/concurseiros_estatistica/topico08.pdf&#34; target=&#34;_blank&#34;&gt;T√≥pico 8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-user-edit  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/concurseiros_estatistica/topico09.pdf&#34; target=&#34;_blank&#34;&gt;T√≥pico 9&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-user-edit  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/concurseiros_estatistica/topico10.pdf&#34; target=&#34;_blank&#34;&gt;T√≥pico 10&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-user-edit  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/concurseiros_estatistica/topico11.pdf&#34; target=&#34;_blank&#34;&gt;T√≥pico 11&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-user-edit  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/concurseiros_estatistica/topico12.pdf&#34; target=&#34;_blank&#34;&gt;T√≥pico 12&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-user-edit  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/concurseiros_estatistica/topico13.pdf&#34; target=&#34;_blank&#34;&gt;T√≥pico 13&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-user-edit  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/concurseiros_estatistica/topico14.pdf&#34; target=&#34;_blank&#34;&gt;T√≥pico 14&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-user-edit  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/concurseiros_estatistica/topico13.pdf&#34; target=&#34;_blank&#34;&gt;T√≥pico 15&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;materiais-desenvolvidos-para-prova-did√°tica&#34;&gt;Materiais desenvolvidos para prova did√°tica&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-user-edit  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/concurseiros_estatistica/slide01.pdf&#34; target=&#34;_blank&#34;&gt;Slide 01&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-user-edit  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/concurseiros_estatistica/slide02.pdf&#34; target=&#34;_blank&#34;&gt;Slide 02&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-user-edit  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/concurseiros_estatistica/slide03.pdf&#34; target=&#34;_blank&#34;&gt;Slide 03&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-user-edit  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/concurseiros_estatistica/slide04.pdf&#34; target=&#34;_blank&#34;&gt;Slide 04&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-user-edit  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/concurseiros_estatistica/slide05.pdf&#34; target=&#34;_blank&#34;&gt;Slide 05&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-user-edit  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/concurseiros_estatistica/slide06.pdf&#34; target=&#34;_blank&#34;&gt;Slide 06&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
  &lt;i class=&#34;fas fa-user-edit  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/concurseiros_estatistica/slide07.pdf&#34; target=&#34;_blank&#34;&gt;Slide 07&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;materiais-complementares&#34;&gt;Materiais complementares&lt;/h2&gt;
&lt;!-- - Um dos materiais durante o mestrado/doutorado que deu gosto de fazer, foram as listas de exerc√≠cios do livro *Introduction to the Theory of Statistics* (MOOD, A. M.; GRAYBIOLL, F. A.; BOES, D. C., 1974). Para baixar &lt;a href=&#34;http://bendeivide.github.io/concurseiros_estatistica/Mood-BenDeivide.pdf&#34; target=&#34;_blank&#34;&gt;clique aqui&lt;/a&gt;. --&gt;
</description>
    </item>
    
    <item>
      <title>Clube de Engenharia Assistida por Computador (CEAC)</title>
      <link>http://bendeivide.github.io/talk/clube-de-engenharia-assistida-por-computador-ceac/</link>
      <pubDate>Tue, 22 Mar 2022 20:40:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/talk/clube-de-engenharia-assistida-por-computador-ceac/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Projeto UFSJ 005/2021/PROPE</title>
      <link>http://bendeivide.github.io/project/projufsj04/</link>
      <pubDate>Sun, 13 Mar 2022 17:58:52 +0000</pubDate>
      <guid>http://bendeivide.github.io/project/projufsj04/</guid>
      <description>&lt;h2 id=&#34;introdu√ß√£o&#34;&gt;Introdu√ß√£o&lt;/h2&gt;
&lt;p&gt;Em 2012 foi publicado a primeira vers√£o do pacote SMR sob o CRAN (BATISTA; FERREIRA, 2014). Em 2014, foram realizadas algumas corre√ß√µes do pacote para a publica√ß√£o na revista do R &amp;ldquo;The R Journal&amp;rdquo;. Esse pacote tem a finalidade de apresentar a fun√ß√£o densidade de probabilidade, fun√ß√£o distribui√ß√£o, fun√ß√£o qualtil e o gerador de n√∫meros aleat√≥rios da &amp;ldquo;midrange&amp;rdquo; estudentizada externamente de uma popula√ß√£o normal, do qual a &amp;ldquo;midrange&amp;rdquo; √© uma medida de tend√™ncia central, calculada pela soma da menor e maior observa√ß√£o em um conjunto de dados, divido por 2.&lt;/p&gt;
&lt;p&gt;A aplica√ß√£o desse pacote foi utilizada nos procedimentos de compara√ß√µes m√∫ltiplas (PCM) desenvolvidos por Batista (2016), em sua conclus√£o de tese. Al√©m do desenvolvimento de quatro PCMs, foi desenvolvido outro pacote R chamado midrangeMCP (2020) para a implementa√ß√£o desses procedimentos, do qual depende do pacote SMR. O grande problema que existe nesses pacotes √© que como o R √© uma linguagem interpretada, algumas implementa√ß√µes exigem um esfor√ßo maior da m√°quina para o c√°lculo de quadraturas gaussianas, que foi t√©cnica num√©rica utilizada para a solu√ß√£o de c√°lculos de integrais duplas e triplas encontradas na distribui√ß√£o da &amp;ldquo;midrange&amp;rdquo; estudentizada externamente de uma popula√ß√£o normal. Assim, em algumas situa√ß√µes, os resultados obtidos por esses pacotes demoram segundos para a realiza√ß√£o do c√°lculo.&lt;/p&gt;
&lt;p&gt;Como solu√ß√£o, pensamos em implementar, justamente nesse ponto, o c√≥digo em C/C++ e integr√°-lo no ambiente R usando algumas API&amp;rsquo;s dispon√≠veis no pr√≥prio ambiente.&lt;/p&gt;
&lt;p&gt;Um outro aspecto de abrang√™ncia ser√° apresentar a distribui√ß√£o da &amp;ldquo;midrange&amp;rdquo; estudentizada externamente centrada em qualquer par√¢metro &lt;code&gt;\(mu\)&lt;/code&gt; populacional (m√©dia populacional), uma vez que os pacotes apresentados anteriormente, foram implementados apenas com essa estat√≠stica centrada em 0 em uma popula√ß√£o com distribui√ß√£o normal.&lt;/p&gt;
&lt;p&gt;Por fim, pensando em uma maior alcance do pacote SMR, ser√° densenvolvido uma interface gr√°fica ao usu√°rio (IGU), para facilitar a sua utiliza de usu√°rios sem afinidade com o ambiente R, bem como os demais usu√°rios.&lt;/p&gt;
&lt;h2 id=&#34;objetivo&#34;&gt;Objetivo&lt;/h2&gt;
&lt;p&gt;Portanto, os objetivos desse trabalho s√£o:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Implementar a quadratura gaussiana em c√≥digo C/C++ e integr√°-lo no pacote R SMR;&lt;/li&gt;
&lt;li&gt;Generalizar a implementa√ß√£o do pacote SMR para ser utilizado as distribui√ß√µes da estat√≠stica &amp;ldquo;midrange&amp;rdquo; estudentizada externamente, em qualquer &lt;code&gt;\(mu\)&lt;/code&gt; de uma popula√ß√£o normal;&lt;/li&gt;
&lt;li&gt;Desenvolver uma IGU para o pacote SMR.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;per√≠odo-de-execu√ß√£o-e-local&#34;&gt;Per√≠odo de execu√ß√£o e local&lt;/h2&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; O projeto foi desenvolvido durante o per√≠odo de mar√ßo de 2021 a fevereiro de 2022, pelo Edital 004/2020/PROPE/UFSJ.&lt;/p&gt;
&lt;h2 id=&#34;metodologia&#34;&gt;Metodologia&lt;/h2&gt;
&lt;p&gt;Para o desenvolvimento desse trabalho, ser√° revistidado todos os trabalhos que envolveram a implementa√ß√£o do pacote SMR, buscando artigos e c√≥digos. Posteriormente, utilizaremos o ambiente R e pacote Rccp (EDDELBUETTEL; BALAMUTA, 2018) para integrar o c√≥digo C/C++ no ambiente R. Em um segundo momento, faremos as altera√ß√µes devidas no pacote SMR para a generaliza√ß√£o da distribui√ß√£o. Por fim, faremos a implementa√ß√£o da sua interface gr√°fica (IGU) usando o pacote tcltk, uma integra√ß√£o da linguagem Tcl/Tk com o ambiente R, para uma melhor utiliza√ß√£o do pacote com usu√°rios n√£o ambientados com o R.&lt;/p&gt;
&lt;h2 id=&#34;plano-de-trabalho&#34;&gt;Plano de trabalho&lt;/h2&gt;
&lt;p&gt;Primeira Etapa: Desenvolvimento do algoritmo em C/C++ sobre as quadraturas gaussianas e implment√°-las no pacote SMR ( 4 meses iniciais);&lt;/p&gt;
&lt;p&gt;Segunda Etapa: Implementa√ß√£o no c√≥digo do pacote SMR a generaliza√ß√£o da distribui√ß√£o da &amp;ldquo;midrange&amp;rdquo; estudentizada externamente para uma normal com m√©dia &lt;code&gt;\(mu\)&lt;/code&gt; (4 meses intermedi√°rios);&lt;/p&gt;
&lt;p&gt;Terceira Etapa: Cria√ß√£o da IGU implmentada em TclTk e integrado no ambiente R (4 meses finais).&lt;/p&gt;
&lt;h2 id=&#34;refer√™ncias&#34;&gt;Refer√™ncias&lt;/h2&gt;
&lt;p&gt;BATISTA, B. D. de O.; FERREIRA, D. F. SMR: Externally Studentized Midrange Distribution. Vienna, Austria, 2014. R package version 2.0. Dispon√≠vel em: .&lt;/p&gt;
&lt;p&gt;BATISTA, B. D. de O.; FERREIRA, D. F. midrangeMCP: Multiple comparisons procedures based on
studentized midrange and range distributions. Vienna, Austria, 2020. R package version 3.1. Dispon√≠vel em: .&lt;/p&gt;
&lt;p&gt;BATISTA, B. D. de O. Teste de compara√ß√µes m√∫ltiplas baseados na distribui√ß√£o da midrange
estudentizada externamente. 194 p. Tese (Doutorado) ? Universidade Federal de Lavras, Lavras, MG,
2016.&lt;/p&gt;
&lt;p&gt;EDDELBUETTEL, D.; BALAMUTA, J. J.. Extending R with C++: A Brief Introduction to Rcpp. The American Statistician. 72(1). 2018. URL: &lt;a href=&#34;https://doi.org/10.1080/00031305.2017.1375990&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://doi.org/10.1080/00031305.2017.1375990&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;R CORE TEAM. R: A language and environment for statistical computing. Vienna, Austria, 2021.&lt;/p&gt;
&lt;h2 id=&#34;membros&#34;&gt;Membros&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Orientando: &lt;a href=&#34;https://digoarthur.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Diego Arthur Bispo Justino de Oliveira&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Orientador: &lt;a href=&#34;http://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ben D√™ivide de Oliveira Batista&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;relat√≥rio-final&#34;&gt;Relat√≥rio Final&lt;/h2&gt;
&lt;p&gt;O projeto ainda est√° em andamento.&lt;/p&gt;
&lt;h2 id=&#34;trabalhos-publicados&#34;&gt;Trabalhos publicados&lt;/h2&gt;
&lt;p&gt;O projeto est√° em andamento.&lt;/p&gt;
&lt;h2 id=&#34;considera√ß√µes&#34;&gt;Considera√ß√µes&lt;/h2&gt;
&lt;p&gt;O projeto est√° em andamento.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Projeto Aprender Por Ensinar (APE)</title>
      <link>http://bendeivide.github.io/project/projape/</link>
      <pubDate>Sun, 13 Mar 2022 17:58:44 +0000</pubDate>
      <guid>http://bendeivide.github.io/project/projape/</guid>
      <description>&lt;h2 id=&#34;introdu√ß√£o&#34;&gt;Introdu√ß√£o&lt;/h2&gt;
&lt;center&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/t-uhFaz5NKE&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/center&gt;
&lt;p&gt;O Projeto Aprender Por Ensinar (APE) se destina a auxiliar a disciplina de ESTAT√çSTICA &amp;amp; PROBABILIDADE, ministrado pela Universidade Federal de S√£o Jo√£o del-Rei, campus Alto Paraopeba, Ouro Branco/MG.&lt;/p&gt;
&lt;p&gt;Para detalhes do curso, acesse: &lt;a href=&#34;https://bendeivide.github.io/courses/epaec/exerresolvidos/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://bendeivide.github.io/courses/epaec/exerresolvidos/&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cantando com a Estat√≠stica</title>
      <link>http://bendeivide.github.io/project/cantest/</link>
      <pubDate>Sun, 13 Mar 2022 17:58:29 +0000</pubDate>
      <guid>http://bendeivide.github.io/project/cantest/</guid>
      <description>&lt;h2 id=&#34;introdu√ß√£o&#34;&gt;Introdu√ß√£o&lt;/h2&gt;
&lt;p&gt;O projeto Cantando com a Estat√≠stica tenta trazer, por meio da m√∫sica, mas uma forma do estudante conseguir assimilar o conte√∫do da disciplina de Estat√≠stica e Probabilidade, do qual ministro no &lt;em&gt;campus&lt;/em&gt; Alto Paraopeba, UFSJ.&lt;/p&gt;
&lt;h2 id=&#34;m√∫sicas&#34;&gt;M√∫sicas&lt;/h2&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/HPo1Axt_Gzo&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/zdCz0KIeXTQ&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Estudando o ambiente R</title>
      <link>http://bendeivide.github.io/books/eambr03/</link>
      <pubDate>Sun, 13 Mar 2022 17:57:37 +0000</pubDate>
      <guid>http://bendeivide.github.io/books/eambr03/</guid>
      <description>&lt;p&gt;A cole√ß√£o &lt;em&gt;Estudando o ambiente R&lt;/em&gt; √© fruto de cursos ministrados sobre essa linguagem, bem como consultorias e estudos ao longo dos anos. Em 2005, quando ingressei na academia no curso de Engenharia Agron√¥mica fiquei fascinado com a disciplina de Estat√≠stica no segundo semestre do ano corrente. Na sequ√™ncia, acabo tendo o primeiro contato com o ambiente R, com pouco mais de 9 anos de seu lan√ßamento e redistribui√ß√£o. Poucos materiais naquela √©poca haviam dispon√≠veis em l√≠ngua portuguesa. Por√©m, foi o suficiente para eu entender que estava diante de uma grande ferramenta computacional e estat√≠stica, necess√°ria para o entendimento, pois sabia que poderia me gerar al√©m de conhecimento, bons frutos acad√™micos.&lt;/p&gt;
&lt;p&gt;Hoje, no ano de 2021, usu√°rio h√° mais de 15 anos dessa linguagem, percebi que me sentia desconfort√°vel, como apenas us√°rio dessa ferramenta de trabalho. E assim, quando queremos aprender algo n√£o h√° ferramenta melhor do que &lt;em&gt;aprender por ensinar&lt;/em&gt;. E assim, lotado no Departamento de Estat√≠stica, F√≠sica e Matem√°tica (&lt;a href=&#34;http://defim.ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DEFIM&lt;/a&gt;, campus Alto Paraopeba, pela Universidade Federal de S√£o Jo√£o del-Rei (&lt;a href=&#34;https://www.ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;), juntamente com o Centro Acad√™mico de Engenharia de Telecomunica√ß√µes (UFSJ), resolvemos em parceria, ministrar nesse momento de pandemia uma sequ√™ncia de m√≥dulos para o curso R, desde o n√≠vel B√°sico at√© ao m√≥dulo Avan√ßado.&lt;/p&gt;
&lt;p&gt;A ideia desse curso foi apresentar algo diferente relacionado a maioria dos cursos em R, que foi sempre apresentar essa ferramenta dentro dos conceitos da √°rea da Estat√≠stica. Apesar de uma coisa ser intr√≠nseca a outra, h√° muitas particularidades no ambiente R que s√£o complexos, e muitas vezes julgados erroneamente. Um dos exemplos cl√°ssicos √© que &lt;em&gt;loops&lt;/em&gt; em R s√£o lentos e com alto gasto de mem√≥ria, quando na realiadade, isso ocorre muitas vezes pelo n√£o entendimento do sistema de c√≥pia de objetos nesse ambiente. Ainda mais, o entendimento desses cursos √© agravado porque o entendimento sobre a estat√≠stica al√©m de um cunho matem√°tico, tem o seu cunho filos√≥fico de como as metodologias foram desenvolvidas, e o entendimento m√∫tuo da Estat√≠stica e o ambiente R, podem n√£o ter o conhecimento real que essa potencial ferramenta pode proporcionar, uma vez que muitos assuntos complexos podem estar envolvidos em uma √∫nica aula.&lt;/p&gt;
&lt;p&gt;Assim, desenvolvemos na cole√ß√£o &lt;em&gt;Estudando o ambiente R&lt;/em&gt; os tr√™s volumes iniciais, referentes a apenas a linguagem R, sendo &lt;em&gt;Volume I: N√≠vel B√°sico&lt;/em&gt;, &lt;em&gt;Volume II: N√≠vel Intermedi√°rio&lt;/em&gt; e &lt;em&gt;Volume III: N√≠vel Avan√ßado&lt;/em&gt;. Fazendo a alus√£o dos tr√™s livros iniciais sobre a linguagem S de John Chambers, faremos uma explana√ß√£o sobre assuntos de menor complexidade at√© no√ß√µes mais complexas sobre o ambiente R, restringindo apenas a sintaxe e sem√¢ntica da linguagem. Os volumes subsequentes ser√£o destinados a &lt;em&gt;Documenta√ß√µes no R&lt;/em&gt;, &lt;em&gt;Desenvolvimento de pacote R&lt;/em&gt;, &lt;em&gt;Gr√°ficos&lt;/em&gt;, &lt;em&gt;Banco de dados&lt;/em&gt;, &lt;em&gt;Interface Gr√°fica ao Usu√°rio&lt;/em&gt;, &lt;em&gt;Interface R com outras linguagens&lt;/em&gt;, &lt;em&gt;Programa√ß√£o Orientada a Objetos&lt;/em&gt;, &lt;em&gt;Fun√ß√µes do pacote base&lt;/em&gt;, dentre outros.&lt;/p&gt;
&lt;p&gt;Tentando engajar nossos alunos, e agora colegas de trabalho, tenho a parceria no Volume I, de &lt;a href=&#34;https://digoarthur.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Diego Arthur&lt;/a&gt;, uma pessoa que tenta se superar a cada desafio e assunto estudado.&lt;/p&gt;
&lt;p&gt;Esse primeiro volume, que representa o livro corrente, apresenta um breve &lt;strong&gt;hist√≥rico&lt;/strong&gt; sobre a linguagem, a sua instala√ß√£o, bem como os recursos que a &lt;em&gt;IDE&lt;/em&gt;^[Do ingl√™s, &lt;em&gt;Integrated Development Environment&lt;/em&gt;, que significa ambiente de desenvolvimento integrado.] RStudio, o conhecimento da &lt;strong&gt;sintaxe&lt;/strong&gt; e &lt;strong&gt;sem√¢ntica&lt;/strong&gt; da linguagem R, compreendendo as estruturas bases da linguagem, sobre o que √© um &lt;strong&gt;objeto&lt;/strong&gt; e como construir uma &lt;strong&gt;fun√ß√£o&lt;/strong&gt;, o entendimento sobre &lt;strong&gt;fluxos de controle&lt;/strong&gt;. O que √© um &lt;strong&gt;pacote&lt;/strong&gt;, &lt;strong&gt;carregar&lt;/strong&gt; e &lt;strong&gt;anexar&lt;/strong&gt; um pacote, e quem s√£o as pessoas que fazem parte da manuten√ß√£o dessa linguagem, tamb√©m ser√£o assuntos desse primeiro m√≥dulo. &lt;strong&gt;Caminho de busca&lt;/strong&gt;, &lt;strong&gt;ambientes&lt;/strong&gt; e &lt;strong&gt;namespaces&lt;/strong&gt;, teremos no√ß√µes b√°sicas. Algo muito interessante, que pode mudar a vida de um programador em R s√£o as &lt;strong&gt;boas pr√°ticas para a escrita de um c√≥digo&lt;/strong&gt;, tema tamb√©m abordado nesse m√≥dulo.&lt;/p&gt;
&lt;p&gt;A ideia desse volume √© proporcionar um entendimento b√°sico, um primeiro contato com a linguagem, fazendo com que o leitor possa dar os primeiros passos, executando as primeiras linhas de comando. Mas tamb√©m, dando o enfoque com erros t√£o recorrentes, como o entendimento sobre um objeto, ou o anexo de um pacote no caminho de busca. Temas como esses, dentre outros, ser√£o a forma inicial que encontramos, para que posteriormente, seja dado um aprofundamento sobre a estrutura de um objeto R bem como a sua manipula√ß√£o, e adicionado a isso, a inser√ß√£o de como s√£o os paradigmas da programa√ß√£o nesse ambiente.&lt;/p&gt;
&lt;p&gt;Por fim, espero que esse primeiro volume possa servir de refer√™ncia para os passos iniciais nessa ferramenta t√£o importante para a √°rea de an√°lise de dados.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Estudando o ambiente R</title>
      <link>http://bendeivide.github.io/books/eambr02/</link>
      <pubDate>Sun, 13 Mar 2022 17:57:31 +0000</pubDate>
      <guid>http://bendeivide.github.io/books/eambr02/</guid>
      <description>&lt;p&gt;A cole√ß√£o &lt;em&gt;Estudando o ambiente R&lt;/em&gt; √© fruto de cursos ministrados sobre essa linguagem, bem como consultorias e estudos ao longo dos anos. Em 2005, quando ingressei na academia no curso de Engenharia Agron√¥mica fiquei fascinado com a disciplina de Estat√≠stica no segundo semestre do ano corrente. Na sequ√™ncia, acabo tendo o primeiro contato com o ambiente R, com pouco mais de 9 anos de seu lan√ßamento e redistribui√ß√£o. Poucos materiais naquela √©poca haviam dispon√≠veis em l√≠ngua portuguesa. Por√©m, foi o suficiente para eu entender que estava diante de uma grande ferramenta computacional e estat√≠stica, necess√°ria para o entendimento, pois sabia que poderia me gerar al√©m de conhecimento, bons frutos acad√™micos.&lt;/p&gt;
&lt;p&gt;Hoje, no ano de 2021, usu√°rio h√° mais de 15 anos dessa linguagem, percebi que me sentia desconfort√°vel, como apenas us√°rio dessa ferramenta de trabalho. E assim, quando queremos aprender algo n√£o h√° ferramenta melhor do que &lt;em&gt;aprender por ensinar&lt;/em&gt;. E assim, lotado no Departamento de Estat√≠stica, F√≠sica e Matem√°tica (&lt;a href=&#34;http://defim.ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DEFIM&lt;/a&gt;, campus Alto Paraopeba, pela Universidade Federal de S√£o Jo√£o del-Rei (&lt;a href=&#34;https://www.ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;), juntamente com o Centro Acad√™mico de Engenharia de Telecomunica√ß√µes (UFSJ), resolvemos em parceria, ministrar nesse momento de pandemia uma sequ√™ncia de m√≥dulos para o curso R, desde o n√≠vel B√°sico at√© ao m√≥dulo Avan√ßado.&lt;/p&gt;
&lt;p&gt;A ideia desse curso foi apresentar algo diferente relacionado a maioria dos cursos em R, que foi sempre apresentar essa ferramenta dentro dos conceitos da √°rea da Estat√≠stica. Apesar de uma coisa ser intr√≠nseca a outra, h√° muitas particularidades no ambiente R que s√£o complexos, e muitas vezes julgados erroneamente. Um dos exemplos cl√°ssicos √© que &lt;em&gt;loops&lt;/em&gt; em R s√£o lentos e com alto gasto de mem√≥ria, quando na realiadade, isso ocorre muitas vezes pelo n√£o entendimento do sistema de c√≥pia de objetos nesse ambiente. Ainda mais, o entendimento desses cursos √© agravado porque o entendimento sobre a estat√≠stica al√©m de um cunho matem√°tico, tem o seu cunho filos√≥fico de como as metodologias foram desenvolvidas, e o entendimento m√∫tuo da Estat√≠stica e o ambiente R, podem n√£o ter o conhecimento real que essa potencial ferramenta pode proporcionar, uma vez que muitos assuntos complexos podem estar envolvidos em uma √∫nica aula.&lt;/p&gt;
&lt;p&gt;Assim, desenvolvemos na cole√ß√£o &lt;em&gt;Estudando o ambiente R&lt;/em&gt; os tr√™s volumes iniciais, referentes a apenas a linguagem R, sendo &lt;em&gt;Volume I: N√≠vel B√°sico&lt;/em&gt;, &lt;em&gt;Volume II: N√≠vel Intermedi√°rio&lt;/em&gt; e &lt;em&gt;Volume III: N√≠vel Avan√ßado&lt;/em&gt;. Fazendo a alus√£o dos tr√™s livros iniciais sobre a linguagem S de John Chambers, faremos uma explana√ß√£o sobre assuntos de menor complexidade at√© no√ß√µes mais complexas sobre o ambiente R, restringindo apenas a sintaxe e sem√¢ntica da linguagem. Os volumes subsequentes ser√£o destinados a &lt;em&gt;Documenta√ß√µes no R&lt;/em&gt;, &lt;em&gt;Desenvolvimento de pacote R&lt;/em&gt;, &lt;em&gt;Gr√°ficos&lt;/em&gt;, &lt;em&gt;Banco de dados&lt;/em&gt;, &lt;em&gt;Interface Gr√°fica ao Usu√°rio&lt;/em&gt;, &lt;em&gt;Interface R com outras linguagens&lt;/em&gt;, &lt;em&gt;Programa√ß√£o Orientada a Objetos&lt;/em&gt;, &lt;em&gt;Fun√ß√µes do pacote base&lt;/em&gt;, dentre outros.&lt;/p&gt;
&lt;p&gt;A parceria desse livro est√° idealizado com o Pesquisador &lt;a href=&#34;https://henriquealves21.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Henrique Jos√© de Paula Alves&lt;/a&gt; (IPEA).&lt;/p&gt;
&lt;p&gt;O volume II √© introduzido com uma maior caracteriza√ß√£o do ambiente R quanto ao seu &lt;strong&gt;escopo l√©xico&lt;/strong&gt;, como &lt;strong&gt;linguagem interpretada&lt;/strong&gt;, como &lt;strong&gt;programa√ß√£o funcional&lt;/strong&gt;, como &lt;strong&gt;programa√ß√£o meta-paradigma&lt;/strong&gt;, como &lt;strong&gt;programa√ß√£o din√¢mica&lt;/strong&gt;; apresentaremos &lt;strong&gt;manipula√ß√µes de objetos em mais detalhe&lt;/strong&gt;, bem como o surgimento de alguns outros objetos como &lt;strong&gt;tibble&lt;/strong&gt;, &lt;strong&gt;c√≥pias de objetos&lt;/strong&gt;. Uma caracter√≠stica do ambiente R √© que a linguagem pode ser &lt;strong&gt;orientada a objetos&lt;/strong&gt; e isso ser√° estudado nesse m√≥dulo. Introduziremos ao &lt;strong&gt;desenvolvimento de pacotes R&lt;/strong&gt;, e aprofundaremos sobre os &lt;strong&gt;ambientes&lt;/strong&gt;. Por fim, mostraremos como desenvolver Projeto do R e integr√°-los ao GitHub, e dessa forma, introduziremos sobre o sistema Git.&lt;/p&gt;
&lt;p&gt;Esse talvez seja o maior volume, dentre os tr√™s iniciais, porque apenar de n√£o precisarmos entender mais a ideia dos objetos, que foram retratadas no Volume I, a inser√ß√£o dos paradigmas da programa√ß√£o para este volume, trar√° uma maior riqueza de caracter√≠sticas para o R, mostrando a sua versatilidade. Tamb√©m, daremos um maior detalhamento como manipular objetos, e as otimiza√ß√µes existentes da linguagem, como por exemplo, a modifica√ß√£o no local, que se entendida, poder√° perceber que o &lt;strong&gt;loop&lt;/strong&gt; no ambiente R n√£o √© lento quanto parece. Ao final desse volume, falaremos sobre como propagar o seu c√≥digo com o sistema Git na plataforma GitHub, sincronizado com os projetos do RStudio.&lt;/p&gt;
&lt;p&gt;Por fim, espero que esse segundo volume, juntamente com o Volume I, possa consolidar os conhecimentos sobre o ambiente R.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Livro - Estima√ß√£o Estat√≠stica</title>
      <link>http://bendeivide.github.io/post/book_estest/</link>
      <pubDate>Sun, 13 Mar 2022 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/post/book_estest/</guid>
      <description>&lt;h2 id=&#34;informa√ß√µes-gerais-sobre-o-livro&#34;&gt;Informa√ß√µes Gerais sobre o Livro&lt;/h2&gt;
&lt;p&gt;O livro Estat√≠stica Matem√°tica √© uma obra desenvolvida para auxiliar as aulas de estat√≠stica sobre a Infer√™ncia Estat√≠stica, uma √°rea de grande import√¢ncia, em que nos dar suporte obter caracter√≠sticas populacionais a partir de uma amostra.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ambiente R al√©m das an√°lises estat√≠sticas</title>
      <link>http://bendeivide.github.io/talk/ambiente-r-alem-das-analises-estatisticas/</link>
      <pubDate>Mon, 07 Mar 2022 14:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/talk/ambiente-r-alem-das-analises-estatisticas/</guid>
      <description>&lt;center&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/wnOGptAI5Zs&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/center&gt;
&lt;/br&gt;
&lt;/br&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Clique no bot√£o &lt;strong&gt;Slides&lt;/strong&gt; acima para visualizar o recurso de slides integrado.
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Selo DC</title>
      <link>http://bendeivide.github.io/dc/</link>
      <pubDate>Fri, 10 Dec 2021 09:31:59 +0000</pubDate>
      <guid>http://bendeivide.github.io/dc/</guid>
      <description>&lt;p&gt;O selo Democratizando Conhecimento (DC) √© uma ideia criada por mim, para mostrar a filosofia de trabalho que tento adotar na carreira profissional.&lt;/p&gt;
&lt;p&gt;Como propagador de conhecimento, sabemos que nem todas as pessoas t√™m acesso a informa√ß√£o de qualidade e gratuita. Uma sociedade em progresso √© aquela que d√° direto a informa√ß√£o para todas as pessoas, sem restri√ß√£o ao poder aquisisto. Dessa forma, devemos pensar sim em nosso reconhecimento profissional e financeiro, mas n√£o podemos esquecer que o acesso a informa√ß√£o √© o melhor come√ßo para termos um mundo menos desigual.&lt;/p&gt;
&lt;p&gt;Assim, todos os meus materiais ter√£o o &lt;strong&gt;selo DC&lt;/strong&gt; para que o acesso de todo esse material seja  livre e que todo o material possa ser utilizado, levando em considera√ß√£o que dadas as publica√ß√µes, se fa√ßa a refer√™ncia da mesma, n√£o por quest√£o de ego, mas de registro. Isso vai desde a publica√ß√£o de livros, apostilas, p√°ginas web, e todo o material produzido por mim. Uma forma de auxiliar a toda a comunidade que busca conhecimento. √â claro que em algumas situa√ß√µes, as parcerias de trabalho poder√£o ocasionar alguma restri√ß√£o, mas eu farei de tudo para que todo o material seja de livre acesso.&lt;/p&gt;
&lt;p&gt;Assim, meus livros ter√£o a tiragem impressa e sua vers√£o &lt;a href=&#34;https://bookdown.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Bookdown&lt;/a&gt;, para que quem n√£o puder comprar ainda assim tenha acesso a informa√ß√£o desse material. Materiais e conte√∫dos digitais estar√£o sempre dispon√≠veis em meu reposit√≥rio &lt;a href=&#34;https://github.com/bendeivide&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;O &lt;strong&gt;selo DC&lt;/strong&gt; √© compat√≠vel com a licen√ßa Creative Commons CC BY NC 4.0, isto √©,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;O usu√°rio √© livre para compartilhar, redistribuir, transformar ou adaptar essa obra;&lt;/li&gt;
&lt;li&gt;O usu√°rio n√£o pode usar o material para uso comercial;&lt;/li&gt;
&lt;li&gt;Atribua os cr√©ditos ao(s) autor(es) desse trabalho.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;http://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /dc/CCBYNC_hudf858c0f791e5dd31e30eac5045f06a7_19034_e83844284213abacf926d5644ee64195.webp 400w,
               /dc/CCBYNC_hudf858c0f791e5dd31e30eac5045f06a7_19034_3472808f0951678a051010cf697fb919.webp 760w,
               /dc/CCBYNC_hudf858c0f791e5dd31e30eac5045f06a7_19034_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/dc/CCBYNC_hudf858c0f791e5dd31e30eac5045f06a7_19034_e83844284213abacf926d5644ee64195.webp&#34;
               width=&#34;360&#34;
               height=&#34;127&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fa√ßa parte tamb√©m dessa ideia, e seja um propagador de conhecimento livre e acess√≠vel, isso √© uma liberdade necess√°ria.&lt;/p&gt;
&lt;p&gt;Para quem desejar inserir o selo DC em seus materiais, deixo aqui a &lt;a href=&#34;https://github.com/bendeivide/dc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;imagens na vers√£o preta e branca do selo DC&lt;/a&gt;. Temos dois modelos de Selos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pensando no selo na capa de um livro:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/bendeivide/dc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /dc/SeloDC-preto2_hu4d872b310692a89e43d01248222764b4_39108_3d7ab0534fea79ec45e923de8f49cbe7.webp 400w,
               /dc/SeloDC-preto2_hu4d872b310692a89e43d01248222764b4_39108_0aa7888a91e92f9133fce5cbc18b866b.webp 760w,
               /dc/SeloDC-preto2_hu4d872b310692a89e43d01248222764b4_39108_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/dc/SeloDC-preto2_hu4d872b310692a89e43d01248222764b4_39108_3d7ab0534fea79ec45e923de8f49cbe7.webp&#34;
               width=&#34;707&#34;
               height=&#34;262&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pensando no selo na lateral do livro:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/bendeivide/dc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /dc/SeloDC-preto_hu7eace1d7dbb403f37b46437825b208a2_37049_1f8e03062ff2fd4b85b7997b55db9e55.webp 400w,
               /dc/SeloDC-preto_hu7eace1d7dbb403f37b46437825b208a2_37049_28a718b08e0f1b8193cec5ac4d8216a2.webp 760w,
               /dc/SeloDC-preto_hu7eace1d7dbb403f37b46437825b208a2_37049_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/dc/SeloDC-preto_hu7eace1d7dbb403f37b46437825b208a2_37049_1f8e03062ff2fd4b85b7997b55db9e55.webp&#34;
               width=&#34;384&#34;
               height=&#34;406&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;De todo o modo, o selo DC poder√° ser utilizado para qualquer material que tenha essa mesma filosofia profissional.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Incidence and lethality of covid-19 clusters in Brazil via circular scan method</title>
      <link>http://bendeivide.github.io/publication/art-covid21-2/</link>
      <pubDate>Tue, 07 Dec 2021 20:10:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/publication/art-covid21-2/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Clique no bot√£o &lt;em&gt;Cite&lt;/em&gt; acima para verificar a refer√™ncia, para que este artigo possa ser citado em seus trabalhos.
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Local Moran Index: an application in epidemiological coefficients of the COVID-19 pandemic in Brazil </title>
      <link>http://bendeivide.github.io/publication/art-covid21/</link>
      <pubDate>Tue, 07 Dec 2021 19:37:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/publication/art-covid21/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Clique no bot√£o &lt;em&gt;Cite&lt;/em&gt; acima para verificar a refer√™ncia, para que este artigo possa ser citado em seus trabalhos.
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Spatio-temporal geostatistical modeling of Gneiting applied to surface albedo (Brazil) </title>
      <link>http://bendeivide.github.io/publication/albedo2021/</link>
      <pubDate>Tue, 07 Dec 2021 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/publication/albedo2021/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Clique no bot√£o &lt;em&gt;C√≥digo&lt;/em&gt; para acessar os c√≥digos R do artigo.
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Programa√ß√£o de Interface Gr√°fica ao Usu√°rio no R</title>
      <link>http://bendeivide.github.io/books/pigur/</link>
      <pubDate>Tue, 31 Aug 2021 10:08:11 +0000</pubDate>
      <guid>http://bendeivide.github.io/books/pigur/</guid>
      <description>&lt;p&gt;Esse livro surgiu a partir da ideia que propus ao outro autor desse projeto &lt;a href=&#34;https://henriquealves21.github.io/webpage/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Henrique jos√© de P. Alves&lt;/a&gt;, quando est√°vamos desenvolvendo em paralelo dois pacotes, &lt;a href=&#34;https://bendeivide.github.io/project/midrangemcp/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;midrangeMCP&lt;/a&gt; e o &lt;strong&gt;TVMM&lt;/strong&gt; ([&lt;a href=&#34;https://cran.r-project.org/package=TVMM&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CRAN&lt;/a&gt;] [&lt;a href=&#34;https://rpubs.com/Henriqueufla/617206&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;GUI&lt;/em&gt;&lt;/a&gt;]), e resolvemos deix√°-los mais intuitivo para usu√°rio que n√£o tem afinidade com o ambiente &lt;em&gt;R&lt;/em&gt;. De in√≠cio eu usei o pacote &lt;a href=&#34;https://cran.r-project.org/web/packages/gWidgets/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gWidgets&lt;/a&gt; que tornava mais intuitivo a programa√ß√£o da &lt;em&gt;GUI&lt;/em&gt;. Contudo, ap√≥s o pacote ter se tornado √≥rf√£, resolvemos partir para o uso do pacote &lt;strong&gt;tcltk&lt;/strong&gt; que foi um dos pacote base do pacote &lt;strong&gt;gWidgets&lt;/strong&gt;. Este mesmo pacote tamb√©m usava uma outra integra√ß√£o de linguagem, &lt;em&gt;GTK+&lt;/em&gt;. Ent√£o usar o &lt;strong&gt;gWidgets&lt;/strong&gt; era muito pr√°tico, infelizmente foi removido do CRAN. Quando nos aprofundamos nesse pacote, percebemos que seus autores haviam desenvolvido um livro muito interessante, intitulado &lt;a href=&#34;https://books.google.com.br/books?id=VeKEDwAAQBAJ&amp;amp;pg=PA418&amp;amp;lpg=PA418&amp;amp;dq=R&amp;#43;tkmenu&amp;amp;source=bl&amp;amp;ots=V2O2kTRNy3&amp;amp;sig=ACfU3U21CsBJES_jbMhh8JTnerP1FMbxpQ&amp;amp;hl=pt-BR&amp;amp;sa=X&amp;amp;ved=2ahUKEwj5lqOS3pvqAhX2IbkGHRAHClUQ6AEwA3oECAoQAQ#v=onepage&amp;amp;q=R%20tkmenu&amp;amp;f=false&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;Programming Graphical User Interfaces in R&lt;/em&gt;&lt;/a&gt;, um livro que despertou a nossa curiosidade nessa linha de pesquisa para desenvolvimento de pacotes.
Assim, nasce esse projeto, em que de in√≠cio, estudamos para inserir essa ferramenta em nossos pacotes, e agora, estudamos para repassar a nossa experi√™ncia por meio do Livro &lt;strong&gt;Programa√ß√£o de Interface Gr√°fica ao Usu√°rio no R&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Segue o reposit√≥rio &lt;a href=&#34;https://github.com/bendeivide/book-pigur&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub&lt;/a&gt;, para a vers√£o desse livro em &lt;em&gt;bookdown&lt;/em&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Curso R - Programa√ß√£o em R (N√≠vel Intermedi√°rio)</title>
      <link>http://bendeivide.github.io/post/cursorni2/</link>
      <pubDate>Fri, 30 Jul 2021 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/post/cursorni2/</guid>
      <description>&lt;h2 id=&#34;informa√ß√µes-gerais&#34;&gt;Informa√ß√µes Gerais&lt;/h2&gt;
&lt;p&gt;Confirmado o Curso R, &lt;a href=&#34;http://bendeivide.github.io/courses/cursor/nintermediario/&#34;&gt;Programa√ß√£o em R (N√≠vel Intermedi√°rio)&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;data-confirmada-do-curso&#34;&gt;Data confirmada do curso&lt;/h2&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-calendar-day  pr-1 fa-fw&#34;&gt;&lt;/i&gt; 30/07/2021&lt;/p&gt;
&lt;h2 id=&#34;in√≠cio-das-inscri√ß√µes&#34;&gt;In√≠cio das inscri√ß√µes&lt;/h2&gt;
&lt;p&gt;
  &lt;i class=&#34;far fa-calendar-check  pr-1 fa-fw&#34;&gt;&lt;/i&gt; 04/06/2021 - 25/07/2021&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Incri√ß√£o (GRATUITA E COM CERTIFICADO - CATEL/UFSJ):&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe src=&#34;https://docs.google.com/forms/d/e/1FAIpQLSdiZnLPYuu9OWed_ECYrVv1U9L4NxGh9BZjAjAe0KnBEflcWQ/viewform?embedded=true&#34; width=&#34;640&#34; height=&#34;1920&#34; frameborder=&#34;0&#34; marginheight=&#34;0&#34; marginwidth=&#34;0&#34;&gt;Carregando‚Ä¶&lt;/iframe&gt;
&lt;h2 id=&#34;canal-do-curso&#34;&gt;Canal do curso&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Se inscreva no canal onde ser√° realizado o curso: &lt;a href=&#34;https://youtube.com/bendeivide&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
  &lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Ben D√™ivide&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;p√°gina-do-curso&#34;&gt;P√°gina do curso&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/cursor/nintermediario/&#34;&gt;Programa√ß√£o em R (N√≠vel Intermedi√°rio)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;materiais-do-curso&#34;&gt;Materiais do curso&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Livro do curso: &lt;a href=&#34;https://bendeivide.github.io/book-eambr/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Estudando o ambiente R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;P√°gina: &lt;a href=&#34;https://bendeivide.github.io/courses/cursor/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/cursor/nintermediario.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ementa do curso em t√≥picos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;carga-hor√°ria-e-dura√ß√£o-do-curso&#34;&gt;Carga hor√°ria e dura√ß√£o do curso&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Carga hor√°ria: 40 horas&lt;/li&gt;
&lt;li&gt;Dura√ß√£o do curso: 30/07/2021 - 30/09/2021&lt;/li&gt;
&lt;li&gt;30 aulas (4 v√≠deo-aulas por semana)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;apresenta√ß√£o-do-curso&#34;&gt;Apresenta√ß√£o do curso&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Live (A confirmar!)&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Modelagem Matem√°tica para Previs√£o de Jogos de Futebol </title>
      <link>http://bendeivide.github.io/publication/futebol2021/</link>
      <pubDate>Tue, 13 Jul 2021 14:54:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/publication/futebol2021/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Clique no bot√£o &lt;em&gt;C√≥digo&lt;/em&gt; para acessar os c√≥digos R do artigo.
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R como uma ferramenta acad√™mica</title>
      <link>http://bendeivide.github.io/talk/r-como-uma-ferramenta-academica/</link>
      <pubDate>Mon, 12 Jul 2021 18:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/talk/r-como-uma-ferramenta-academica/</guid>
      <description>&lt;center&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/_43yBb_s-R8&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/center&gt;
&lt;/br&gt;
&lt;/br&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Clique no bot√£o &lt;strong&gt;Slides&lt;/strong&gt; acima para visualizar o recurso de slides integrado.
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Curso R - Programa√ß√£o em R (N√≠vel Intermedi√°rio)</title>
      <link>http://bendeivide.github.io/post/cursorni/</link>
      <pubDate>Mon, 10 May 2021 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/post/cursorni/</guid>
      <description>&lt;h2 id=&#34;informa√ß√µes-gerais&#34;&gt;Informa√ß√µes Gerais&lt;/h2&gt;
&lt;p&gt;Em breve, daremos in√≠cio ao segundo m√≥dulo o Curso R, &lt;a href=&#34;http://bendeivide.github.io/courses/cursor/nintermediario/&#34;&gt;Programa√ß√£o em R (N√≠vel Intermedi√°rio)&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;data-prevista-para-o-in√≠cio-do-curso&#34;&gt;Data prevista para o in√≠cio do curso&lt;/h2&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-calendar-day  pr-1 fa-fw&#34;&gt;&lt;/i&gt; 15/07/2021&lt;/p&gt;
&lt;h2 id=&#34;previs√£o-para-o-√≠nicio-das-inscri√ß√µes&#34;&gt;Previs√£o para o √≠nicio das inscri√ß√µes&lt;/h2&gt;
&lt;p&gt;
  &lt;i class=&#34;far fa-calendar-check  pr-1 fa-fw&#34;&gt;&lt;/i&gt; 01/06/2021&lt;/p&gt;
&lt;h2 id=&#34;demais-informa√ß√µes&#34;&gt;Demais informa√ß√µes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Divulgaremos as demais informa√ß√µes pelas redes sociais;&lt;/li&gt;
&lt;li&gt;Se inscreva no canal aonde ser√° realizado o curso: &lt;a href=&#34;https://youtube.com/bendeivide&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
  &lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Ben D√™ivide&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Pacote statscience</title>
      <link>http://bendeivide.github.io/project/statscience/</link>
      <pubDate>Thu, 06 May 2021 23:40:30 +0000</pubDate>
      <guid>http://bendeivide.github.io/project/statscience/</guid>
      <description>&lt;h2 id=&#34;objetivo&#34;&gt;Objetivo&lt;/h2&gt;
&lt;p&gt;O projeto do pacote &lt;a href=&#34;https://bendeivide.github.io/statscience/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;statscience&lt;/a&gt; est√° em fase de desenvolvimento, e tem por objetivo de apresentar as principais t√©cnicas de an√°lises de dados na √°rea da Estat√≠stica. Seguem alguns dos t√≥picos abordados:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Estat√≠stica Experimental;&lt;/li&gt;
&lt;li&gt;Procedimento de Compara√ß√µes m√∫ltiplas;&lt;/li&gt;
&lt;li&gt;Modelos de Regress√£o linear e N√£o Linear;&lt;/li&gt;
&lt;li&gt;Modelos Lineares Generalizado;&lt;/li&gt;
&lt;li&gt;Estat√≠stica Multivariada;&lt;/li&gt;
&lt;li&gt;Estat√≠stica Espacial;&lt;/li&gt;
&lt;li&gt;An√°lise Bayesiana;&lt;/li&gt;
&lt;li&gt;An√°lise explorat√≥ria de dados;&lt;/li&gt;
&lt;li&gt;Dentre outros temas&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;O projeto est√° baseado no ambiente &lt;a href=&#34;http://r-project.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R&lt;/a&gt; de programa√ß√£o, isto √©, toda a programa√ß√£o na an√°lise de dados. Contudo, queremos deixar o pacote intuitivo para n√£o programadores, e sim, usu√°rios da ferramenta estatistica. Para isso, criaremos duas interfaces gr√°ficas ao usu√°rio, uma baseada na linguagem &lt;a href=&#34;http://tcl.tk/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Tcl/Tk&lt;/a&gt; e outra via &lt;em&gt;web&lt;/em&gt; (usando o &lt;a href=&#34;https://pt-br.reactjs.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;React&lt;/a&gt;). Para esse √∫ltimo, a ideia √© tornar o usu√°rio totalmente independente de instala√ß√£o e sistema operacional, do qual s√≥ ser√° necess√°rio ter internet e acessar o link do projeto. A escolha da linguagem &lt;a href=&#34;http://tcl.tk/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Tcl/Tk&lt;/a&gt; √© devido a integrama√ß√£o com o &lt;a href=&#34;http://r-project.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R&lt;/a&gt;, uma vez que j√° existe o pacote &lt;code&gt;tcltk&lt;/code&gt; integrada na base de instala√ß√£o do pr√≥rpio ambiente.&lt;/p&gt;
&lt;h2 id=&#34;membros-do-projeto&#34;&gt;Membros do projeto&lt;/h2&gt;
&lt;p&gt;Os membros do projeto se distribui de acordo com as demandas de trabalho:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Implementa√ß√£o dos algoritmos para as an√°lises estat√≠sticas:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ben D√™ivide de O. Batista (UFSJ)&lt;/a&gt; (Estat√≠stica Experimental e Procedimentos de Compara√ß√µes m√∫ltiplas)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://lattes.cnpq.br/1676599123972157&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Henrique  jos√© de Paula Alves (IPEA)&lt;/a&gt; (Estat√≠stica Espacial)&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Interface Gr√°fica ao usu√°rio:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://lattes.cnpq.br/5103890188106141&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fernando Augusto Teixeira (UFSJ)&lt;/a&gt; (&lt;em&gt;Frontend&lt;/em&gt; usando o &lt;a href=&#34;https://pt-br.reactjs.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;React&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;parcerias&#34;&gt;Parcerias&lt;/h2&gt;
&lt;p&gt;Estamos buscando parcerias, sempre com a finalidade de propaga√ß√£o de conhecimento. Queremos auxiliar a ci√™ncia de um modo geral. Portanto, esse projeto √© de c√≥digo aberto e qualquer um poder√° contribuir. Para fazer parte desse projeto, entre em contato por &lt;a href=&#34;https://bendeivide.github.io/#contact&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;email&lt;/a&gt;, descrevendo a √°rea em que poder√° nos auxiliar. Ser√° um imenso prazer compartilharmos as nossas experi√™ncias nesse projeto.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pacote SMR</title>
      <link>http://bendeivide.github.io/project/smr/</link>
      <pubDate>Thu, 06 May 2021 23:40:04 +0000</pubDate>
      <guid>http://bendeivide.github.io/project/smr/</guid>
      <description>&lt;h2 id=&#34;objetivo&#34;&gt;Objetivo&lt;/h2&gt;
&lt;p&gt;O pacote &lt;a href=&#34;http://cran.r-project.org/package=SMR&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SMR&lt;/a&gt; computa a distribui√ß√£o (fun√ß√£o densidade, fun√ß√£o de distribui√ß√£o, fun√ß√£o quantil) da distribui√ß√£o da &lt;em&gt;midrange&lt;/em&gt; estudentizada externamente de uma popula√ß√£o normal, bem como o algoritmo para gerar n√∫meros aleat√≥rios dessa distribui√ß√£o.&lt;/p&gt;
&lt;h2 id=&#34;origem-do-projeto&#34;&gt;Origem do projeto&lt;/h2&gt;
&lt;p&gt;O pacote &lt;a href=&#34;http://cran.r-project.org/package=SMR&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SMR&lt;/a&gt; foi originado como resultado da disserta√ß√£o intitulada &lt;a href=&#34;http://repositorio.ufla.br/bitstream/1/753/1/DISSERTA%c3%87%c3%83O_Distribui%c3%a7%c3%a3o%20exata%20da%20midrange%20estudentizada%20externamente%20da%20normal%20e%20desenvolvimento%20de%20uma%20biblioteca%20R%20utilizando%20Quadratur.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Distribui√ß√£o exata da midrange estudentizada externamente da normal e desenvolvimento de uma biblioteca R utilizando Quadratura Gaussiana&lt;/a&gt;, de autoria de &lt;a href=&#34;http://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ben D√™ivide de Oliveira Batista&lt;/a&gt;, orientada pelo Prof. &lt;a href=&#34;https://des.ufla.br/~danielff/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Daniel Furtado Ferreira&lt;/a&gt;, pela &lt;a href=&#34;http://ufla.br&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Universidade Federal de Lavras&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;membros&#34;&gt;Membros&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ben D√™ivide de Oliveira Batista&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://des.ufla.br/~danielff/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Daniel Furtado Ferreira&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;onde-encontrar-o-projeto&#34;&gt;Onde Encontrar o projeto&lt;/h2&gt;
&lt;p&gt;O pacote se encontra sob o &lt;a href=&#34;http://cran.r-project.org/package=MCPtests&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CRAN&lt;/a&gt; desde 2014. O reposit√≥rio GitHub, bem como a p√°gina do pacote ainda est√° sendo desenvolvida.&lt;/p&gt;
&lt;h2 id=&#34;publica√ß√µes&#34;&gt;Publica√ß√µes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://repositorio.ufla.br/bitstream/1/29962/1/ARTIGO_Externally%20studentized%20normal%20midrange%20distribution.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Artigo da distribui√ß√£o anal√≠tica da estat√≠stica &lt;em&gt;midrange&lt;/em&gt; estudentizada externamente de uma normal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://journal.r-project.org/archive/2014/RJ-2014-029/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Artigo do pacote&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/package=SMR&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Publica√ß√£o do pacote sob o CRAN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;contribui√ß√µes-ainda-a-serem-realizadas&#34;&gt;Contribui√ß√µes ainda a serem realizadas&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;GUI para o pacote;&lt;/li&gt;
&lt;li&gt;Implementar o c√°lculo da quadratura Gauss-Legendre em C/C++;&lt;/li&gt;
&lt;li&gt;Implementar o m√©todo Newton-Raphson para o c√°lculo da fun√ß√£o quantil em C/C++.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Projeto UFSJ 004/2020/PROPE</title>
      <link>http://bendeivide.github.io/project/projufsj03/</link>
      <pubDate>Thu, 06 May 2021 23:39:16 +0000</pubDate>
      <guid>http://bendeivide.github.io/project/projufsj03/</guid>
      <description>&lt;h2 id=&#34;objetivo&#34;&gt;Objetivo&lt;/h2&gt;
&lt;p&gt;Este projeto pretende estudar dois tipos de taxas de erros (por experimento e por compara√ß√£o) envolvidos nos procedimentos de compara√ß√µes m√∫ltiplas (PCMs). Queremos responder a seguinte indaga√ß√£o: qual das taxas de erro tipo I, por experimento ou por compara√ß√£o, devemos nos basear para o desenvolvimento de PCMs, de modo que estes controlem o n√≠vel de signific√¢ncia global, adotado pelos pesquisadores?&lt;/p&gt;
&lt;p&gt;Al√©m das simula√ß√µes que iremos realizar, tem um cunho filos√≥fico muito importante, por tr√°s dessas taxas de erros. E isso, tamb√©m ser√° discutido no trabalho.&lt;/p&gt;
&lt;h2 id=&#34;per√≠odo-de-execu√ß√£o-e-local&#34;&gt;Per√≠odo de execu√ß√£o e local&lt;/h2&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; O projeto foi desenvolvido durante o per√≠odo de mar√ßo de 2021 a fevereiro de 2022, pelo Edital 004/2020/PROPE/UFSJ.&lt;/p&gt;
&lt;h2 id=&#34;membros&#34;&gt;Membros&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Orientando: &lt;a href=&#34;https://www.linkedin.com/mwlite/in/vanessa-dourado-621441209&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Vanessa Dourado de melo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Orientador: &lt;a href=&#34;http://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ben D√™ivide de Oliveira Batista&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;relat√≥rio-final&#34;&gt;Relat√≥rio Final&lt;/h2&gt;
&lt;p&gt;O projeto ainda est√° em andamento.&lt;/p&gt;
&lt;h2 id=&#34;trabalhos-publicados&#34;&gt;Trabalhos publicados&lt;/h2&gt;
&lt;p&gt;O projeto est√° em andamento&lt;/p&gt;
&lt;h2 id=&#34;considera√ß√µes&#34;&gt;Considera√ß√µes&lt;/h2&gt;
&lt;p&gt;Apesar do projeto ter sido finalizado, a revis√£o ainda continua. O projeto √© um complemento do &lt;a href=&#34;https://bendeivide.github.io/project/projufsj/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Projeto 003/2019/PROPE/UFSJ&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Projeto UFSJ 004/2019/PROPE</title>
      <link>http://bendeivide.github.io/project/projufsj02/</link>
      <pubDate>Thu, 06 May 2021 23:38:42 +0000</pubDate>
      <guid>http://bendeivide.github.io/project/projufsj02/</guid>
      <description>&lt;h2 id=&#34;objetivo&#34;&gt;Objetivo&lt;/h2&gt;
&lt;p&gt;Este projeto pretende revisar e avaliar o desempenho dos Procedimentos de Compara√ß√µes M√∫ltiplas (PCMs) desenvolvidos at√© o momento na literaturaIsso proporcionar√° ao pesquisador uma melhor decis√£o para a escolha do teste a ser utilizado em sua an√°lise. Portanto, os objetivos desse projeto s√£o:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Revisar os principais procedimentos de compara√ß√µes m√∫ltiplas presentes na literatura;&lt;/li&gt;
&lt;li&gt;Avaliar o desempenho desses testes, levando em considera√ß√£o alguns cen√°rios de simula√ß√£o, baseados no erro tipo I por experimento e o poder dos testes.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;per√≠odo-de-execu√ß√£o-e-local&#34;&gt;Per√≠odo de execu√ß√£o e local&lt;/h2&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; O projeto foi desenvolvido durante o per√≠odo de agosto de 2019 a julho de 2020, pelo Edital 003/2019/PROPE/UFSJ.&lt;/p&gt;
&lt;h2 id=&#34;membros&#34;&gt;Membros&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Orientando: &lt;a href=&#34;https://www.linkedin.com/in/matheus-fernando-santos-219555b0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Matheus Fernando Rodrigues Santos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Orientador: &lt;a href=&#34;http://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ben D√™ivide de Oliveira Batista&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;relat√≥rio-final&#34;&gt;Relat√≥rio Final&lt;/h2&gt;
&lt;p&gt;O relat√≥rio final do trabalho segue em &lt;a href=&#34;https://bendeivide.github.io/media/proj004.2019.prope.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PDF&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;trabalhos-publicados&#34;&gt;Trabalhos publicados&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Est√° em fase de desenvolvimento para a publica√ß√£o na &lt;a href=&#34;https://www.scielo.br/scielo.php?script=sci_serial&amp;amp;pid=1413-7054&amp;amp;lng=en&amp;amp;nrm=iso&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Revista Ci√™ncia e Agrotecnologia&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;considera√ß√µes&#34;&gt;Considera√ß√µes&lt;/h2&gt;
&lt;p&gt;Apesar do projeto ter sido finalizado, a revis√£o ainda continua. O projeto √© um complemento do &lt;a href=&#34;https://bendeivide.github.io/project/projufsj/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Projeto 003/2019/PROPE/UFSJ&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Projeto UFSJ 003/2019/PROPE</title>
      <link>http://bendeivide.github.io/project/projufsj/</link>
      <pubDate>Thu, 06 May 2021 23:38:16 +0000</pubDate>
      <guid>http://bendeivide.github.io/project/projufsj/</guid>
      <description>&lt;h2 id=&#34;objetivo&#34;&gt;Objetivo&lt;/h2&gt;
&lt;p&gt;Este projeto pretende revisar os Procedimentos de Compara√ß√µes M√∫ltiplas (PCMs) desenvolvidos at√© o momento na literatura e implement√°-los no  pacote &lt;a href=&#34;https://github.com/bendeivide/MCPtests&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MCPtests&lt;/a&gt;. O pacote ter√° uma interfacgr√°fica para facilitar a acessibilidade e utiliza√ß√£o. Em toda estrutura de pacotes no &lt;a href=&#34;http://r-project.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R&lt;/a&gt; h√° uma p√°gina em &lt;em&gt;html&lt;/em&gt; chamada &amp;ldquo;&lt;em&gt;help&lt;/em&gt;&amp;rdquo;. Esta pasta fornece um resumo de como utilizar as fun√ß√µes do pacote. Na p√°gina help do pacote &lt;a href=&#34;https://github.com/bendeivide/MCPtests&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MCPtests&lt;/a&gt; ser√° fornecido as principais caracter√≠sticas de avalia√ß√£o de desempenho dos PCMs. Isso proporcionar√° ao pesquisador uma melhor decis√£o para a escolha do teste a ser utilizado em sua an√°lise. Portanto, os objetivos desse projeto s√£o:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Revisar os principais procedimentos de compara√ß√µes m√∫ltiplas desenvolvidos at√© o momento e implement√°-los no pacote &lt;a href=&#34;https://github.com/bendeivide/MCPtests&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MCPtests&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;per√≠odo-de-execu√ß√£o-e-local&#34;&gt;Per√≠odo de execu√ß√£o e local&lt;/h2&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; O projeto foi desenvolvido durante o per√≠odo de agosto de 2019 a julho de 2020, pelo Edital 003/2019/PROPE/UFSJ.&lt;/p&gt;
&lt;h2 id=&#34;membros&#34;&gt;Membros&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Orientando: &lt;a href=&#34;https://digoarthur.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Diego Arthur Bispo Justino de Oliveira&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Orientador: &lt;a href=&#34;http://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ben D√™ivide de Oliveira Batista&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;relat√≥rio-final&#34;&gt;Relat√≥rio Final&lt;/h2&gt;
&lt;p&gt;O relat√≥rio final do trabalho segue em &lt;a href=&#34;https://bendeivide.github.io/media/proj003.2019.prope.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PDF&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;trabalhos-publicados&#34;&gt;Trabalhos publicados&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ufsj.edu.br/wmma/v_wmma.php&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;V Workshop de Matem√°tica e Matem√°tica aplicada (UFSJ/UFLA)&lt;/a&gt; &lt;a href=&#34;https://ufsj.edu.br/portal2-repositorio/File/wmma/wmma2020/diego.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PDF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/package=MCPtests&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pacote publicado sob o CRAN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Artigo para o &lt;em&gt;The R Journal&lt;/em&gt; em fase de desenvolvimento.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;considera√ß√µes&#34;&gt;Considera√ß√µes&lt;/h2&gt;
&lt;p&gt;Apesar do projeto ter sido finalizado, muito sobre o pacote ainda necessita de contribui√ß√£o:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Algoritmos dos PCMs;&lt;/li&gt;
&lt;li&gt;Implementa√ß√µes sobre a GUI, usando linguagem &lt;em&gt;Tcl/tk&lt;/em&gt;;&lt;/li&gt;
&lt;li&gt;Relat√≥rio de an√°lises;&lt;/li&gt;
&lt;li&gt;Implementa√ß√µes sobre as avalia√ß√µes de desempenho dos testes via simula√ß√£o Monte Carlo.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Pacote midrangeMCP</title>
      <link>http://bendeivide.github.io/project/midrangemcp/</link>
      <pubDate>Thu, 06 May 2021 23:37:52 +0000</pubDate>
      <guid>http://bendeivide.github.io/project/midrangemcp/</guid>
      <description>&lt;h2 id=&#34;objetivo&#34;&gt;Objetivo&lt;/h2&gt;
&lt;p&gt;O pacote &lt;a href=&#34;https://bendeivide.github.io/midrangeMCP/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;midrangeMCP&lt;/a&gt; apresenta quatro procedimentos de compara√ß√µes m√∫ltiplas (PCMs), testes TM, SNKM, MGM e MGR. Os tr√™s primeiros baseados na &lt;a href=&#34;https://www.scielo.br/scielo.php?script=sci_abstract&amp;amp;pid=S1413-70542017000400378&amp;amp;lng=en&amp;amp;nrm=iso&amp;amp;tlng=pt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;distribui√ß√£o da &lt;em&gt;midrange&lt;/em&gt; estudentizada externamente de uma popula√ß√£o normal&lt;/a&gt;. O √∫ltimo teste √© baseado numa distribui√ß√£o largamente utilizada no desenvolvimento de PCMs, que √© a distribui√ß√£o da amplitude estudentizada de um popula√ß√£o normal. A diferen√ßa entre os testes que se baseiam nessa distribui√ß√£o com o teste MGR, √© que este teste foi desenvolvido por meio de m√©todos de agrupamento, e portanto, n√£o apresenta o problema de ambiguidade de resultados como apresentado nos resultados de muitos PCMs.&lt;/p&gt;
&lt;h2 id=&#34;origem-do-projeto&#34;&gt;Origem do projeto&lt;/h2&gt;
&lt;p&gt;O projeto foi originado pela teste por uma sequ√™ncia de trabalhos. A primeira ideia foi originada da disserta√ß√£o intitulada &lt;a href=&#34;http://repositorio.ufla.br/bitstream/1/753/1/DISSERTA%c3%87%c3%83O_Distribui%c3%a7%c3%a3o%20exata%20da%20midrange%20estudentizada%20externamente%20da%20normal%20e%20desenvolvimento%20de%20uma%20biblioteca%20R%20utilizando%20Quadratur.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Distribui√ß√£o exata da midrange estudentizada externamente da normal e desenvolvimento de uma biblioteca R utilizando Quadratura Gaussiana&lt;/a&gt;, de autoria de &lt;a href=&#34;http://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ben D√™ivide de Oliveira Batista&lt;/a&gt;, orientada pelo Prof. &lt;a href=&#34;https://des.ufla.br/~danielff/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Daniel Furtado Ferreira&lt;/a&gt;. A sequ√™ncia desse trabalho foi a tese &lt;a href=&#34;http://repositorio.ufla.br/bitstream/1/11466/2/TESE_Testes%20de%20compara%c3%a7%c3%b5es%20m%c3%baltiplas%20baseados%20na%20distribui%c3%a7%c3%a3o%20da%20midrange%20estudentizada%20externamente.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Testes de compara√ß√µes m√∫ltiplas baseados na distribui√ß√£o da midrange estudentizada externamente&lt;/a&gt;, e que este √∫ltimo teve como um dos objetivos o pacote &lt;a href=&#34;https://bendeivide.github.io/midrangeMCP/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;midrangeMCP&lt;/a&gt;. Todo esse trabalho foi realidado durante a P√≥s-Gradua√ß√£o feita pela &lt;a href=&#34;http://ufla.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Universidade Federal de Lavras&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;membros&#34;&gt;Membros&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://digoarthur.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Diego Arthur Bispo Justino de Oliveira&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ben D√™ivide de Oliveira Batista&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://des.ufla.br/~danielff/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Daniel Furtado Ferreira&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;onde-encontrar-o-projeto&#34;&gt;Onde encontrar o projeto&lt;/h2&gt;
&lt;p&gt;O pacote se encontra sob o &lt;a href=&#34;http://cran.r-project.org/package=midrangeMCP&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CRAN&lt;/a&gt;, e suas altera√ß√µes est√£o sendo atualizadas no reposit√≥rio &lt;a href=&#34;https://github.com/bendeivide/midrangeMCP&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub&lt;/a&gt;. Para maiores detalhes, acesse a &lt;a href=&#34;https://bendeivide.github.io/midrangeMCP/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;p√°gina do pacote&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;publica√ß√µes&#34;&gt;Publica√ß√µes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://repositorio.ufla.br/bitstream/1/29962/1/ARTIGO_Externally%20studentized%20normal%20midrange%20distribution.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Distribui√ß√£o da &lt;em&gt;midrange&lt;/em&gt; estudentizada externamente de uma popula√ß√£o normal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.scielo.br/scielo.php?pid=S1413-70542020000100240&amp;amp;script=sci_arttext&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Testes TM e SNKM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/package=midrangeMCP&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Publica√ß√£o do pacote no CRAN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;O artigo dos testes MGM e MGR est√£o em desenvolvimento&lt;/li&gt;
&lt;li&gt;O artigo do pacote ao &lt;em&gt;The R Journal&lt;/em&gt; est√° em desenvolvimento&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;contribui√ß√µes-ainda-a-serem-realizadas&#34;&gt;Contribui√ß√µes ainda a serem realizadas&lt;/h2&gt;
&lt;p&gt;O pacote encontra-se est√°vel, e para finaliz√°-lo estamos corrigindo alguns &lt;em&gt;bugs&lt;/em&gt; com rela√ß√£o a sa√≠da dos gr√°ficos do resultado dos testes na GUI do pacote, bem como alguns acr√©scimos de programa√ß√£o defensiva tamb√©m na GUI. Outro ponto que est√° em fase final √© o &lt;em&gt;vignette&lt;/em&gt; do pacote.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pacote meupacoter</title>
      <link>http://bendeivide.github.io/project/meupacoter/</link>
      <pubDate>Thu, 06 May 2021 23:37:40 +0000</pubDate>
      <guid>http://bendeivide.github.io/project/meupacoter/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Pacote MCPtests</title>
      <link>http://bendeivide.github.io/project/mcptests/</link>
      <pubDate>Thu, 06 May 2021 23:37:05 +0000</pubDate>
      <guid>http://bendeivide.github.io/project/mcptests/</guid>
      <description>&lt;h2 id=&#34;objetivo&#34;&gt;Objetivo&lt;/h2&gt;
&lt;p&gt;O pacote &lt;strong&gt;MCPtests&lt;/strong&gt; √© uma evolu√ß√£o do pacote &lt;a href=&#34;https://bendeivide.github.io/midrangeMCP/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;midrangeMCP&lt;/a&gt;. Al√©m da agrega√ß√£o de gr√°fico nos resultados dos testes, o tipo de entrada de dados, que √© um diferencial com rela√ß√£o a outros pacotes, o &lt;strong&gt;MCPtests&lt;/strong&gt; abranger√° um universo maior de testes, al√©m de poder apresentar avalia√ß√£o de desempenho dos testes em tempo real, via simula√ß√£o Monte Carlo. Com isso, o poder de escolha de um teste pelo usu√°rio, poder√° ser mais criterioso, do que usar os testes convencionais da literatura sem nenhuma crit√©rio de escolha.&lt;/p&gt;
&lt;p&gt;Algo que ganhar√° destaque tamb√©m ser√° a sa√≠da. Al√©m das exporta√ß√µes tradicionais encontradas no pacote &lt;a href=&#34;https://bendeivide.github.io/midrangeMCP/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;midrangeMCP&lt;/a&gt;, usaremos os recursos do RMarkdown ao nosso favor, incluindo uma tomada de decis√£o mais intuitiva sobre os testes, bem como, avaliando e apresentando as suas pressuposi√ß√µes.&lt;/p&gt;
&lt;p&gt;Se o usu√°rio desejar agregar An√°lise de Vari√¢ncia (ANAVA), tamb√©m poder√° ser utilizada em seus resultados, mas o enfoque √© o resultado do PCM, uma vez que a sequ√™ncia dos resultados da ANAVA e depois PCM √© um padr√£o n√£o obrigat√≥rio, e quase todo mundo sempre procedeu dessa forma como se fosse uma obrigatoriedade.&lt;/p&gt;
&lt;p&gt;Outra vantagem do pacote √© que suas teclas de atalho se assemelham com a ambienta√ß√£o do RStudio, tornando-o isso mais intuitivo.&lt;/p&gt;
&lt;h2 id=&#34;origem-do-projeto&#34;&gt;Origem do projeto&lt;/h2&gt;
&lt;p&gt;O projeto foi originado de outros dois projetos, o &lt;a href=&#34;https://bendeivide.github.io/project/projufsj/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Projeto UFSJ 003/2019/PROPE&lt;/a&gt; e o &lt;a href=&#34;&#34;&gt;Projeto UFSJ 004/2019/PROPE&lt;/a&gt;. Este √∫ltimo foi uma recomenda√ß√£o proposta de artigo de revis√£o para ser enviado a Revista Ci√™ncia e Agrotecnologia, que ainda est√° em desenvolvimento.&lt;/p&gt;
&lt;h2 id=&#34;membros&#34;&gt;Membros&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://digoarthur.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Diego Arthur Bispo Justino de Oliveira&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/in/matheus-fernando-santos-219555b0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Matheus Fernando Santos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ben D√™ivide de Oliveira Batista&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://des.ufla.br/~danielff/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Daniel Furtado Ferreira&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;onde-encontrar-o-projeto&#34;&gt;Onde encontrar o projeto&lt;/h2&gt;
&lt;p&gt;Uma primeira vers√£o do pacote j√° se encontra sob o &lt;a href=&#34;http://cran.r-project.org/package=MCPtests&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CRAN&lt;/a&gt;, e suas altera√ß√µes est√£o sendo atualizadas no reposit√≥rio &lt;a href=&#34;https://github.com/bendeivide/MCPtests&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub&lt;/a&gt;. A p√°gina do pacote ainda est√° sendo desenvolvida.&lt;/p&gt;
&lt;h2 id=&#34;publica√ß√µes&#34;&gt;Publica√ß√µes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ufsj.edu.br/wmma/v_wmma.php&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;V Workshop de Matem√°tica e Matem√°tica aplicada (UFSJ/UFLA)&lt;/a&gt; &lt;a href=&#34;https://ufsj.edu.br/portal2-repositorio/File/wmma/wmma2020/diego.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PDF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cran.r-project.org/package=MCPtests&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pacote publicado sob o CRAN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Artigo para o &lt;em&gt;The R Journal&lt;/em&gt; em fase de desenvolvimento.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;contribui√ß√µes-ainda-a-serem-realizadas&#34;&gt;Contribui√ß√µes ainda a serem realizadas&lt;/h2&gt;
&lt;p&gt;Contribui√ß√µes ainda a serem feitas no pacote:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;P√°gina do pacote;&lt;/li&gt;
&lt;li&gt;Implementa√ß√£o do algoritmo dos PCMs ao pacote;&lt;/li&gt;
&lt;li&gt;Implementa√ß√µes sobre a GUI, usando linguagem &lt;em&gt;Tcl/tk&lt;/em&gt;;&lt;/li&gt;
&lt;li&gt;Relat√≥rio de an√°lises;&lt;/li&gt;
&lt;li&gt;Implementa√ß√µes sobre as avalia√ß√µes de desempenho dos testes via simula√ß√£o Monte Carlo.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>LEEM</title>
      <link>http://bendeivide.github.io/project/leem/</link>
      <pubDate>Thu, 06 May 2021 23:36:30 +0000</pubDate>
      <guid>http://bendeivide.github.io/project/leem/</guid>
      <description>&lt;h2 id=&#34;objetivo&#34;&gt;Objetivo&lt;/h2&gt;
&lt;p&gt;Esse projeto tem por objetivo de criar uma interface gr√°fica ao usu√°rio no &lt;a href=&#34;http://r-project.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R&lt;/a&gt;, usando o pacote &lt;a href=&#34;https://shiny.rstudio.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;shiny&lt;/a&gt; e o pacote &lt;em&gt;tcltk&lt;/em&gt; da base do &lt;a href=&#34;http://r-project.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R&lt;/a&gt;. Tentaremos apresentar temas simples e complexos de forma interativa, para que o professor dessas √°reas possa abordar o tema de modo mais facilmente.&lt;/p&gt;
&lt;h2 id=&#34;projetos-integrados&#34;&gt;Projetos integrados&lt;/h2&gt;
&lt;p&gt;Temos dentro desse projetos, diversos projetos integrados, sendo:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Projeto de disserta√ß√£o PROFMAT/CAP/UFSJ, da orientanda &lt;a href=&#34;http://lattes.cnpq.br/5176118169651142&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Juliane Nassaralla Almeida&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Grupo de Inicia√ß√£o Cient√≠fica em Estat√≠stica/R:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/in/amandakellycosta/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Amanda Kelly Costa&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/in/l%c3%adviasdias/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;L√≠via Dias de S√° Amorim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/in/gustavo-dos-rem%c3%a9dios-da-silva-paula-995a04181&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gustavo do Rem√©dios da Silva Paula&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;linkedin.com/in/dailon-vinicius-6502a9207&#34;&gt;Dailon Vinicius Barbosa de F√°tima&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/in/andrefdg/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Andr√© Felipe Duarte Gon√ßalves&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;propostas-da-gui&#34;&gt;Propostas da GUI&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;GUI 1 (Proposta de Gustavo): &lt;a href=&#34;https://www.figma.com/file/qYH2QntEZcVZDvq1ejp3W7/Untitled?node-id=0%3A1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.figma.com/file/qYH2QntEZcVZDvq1ejp3W7/Untitled?node-id=0%3A1&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GUI 2 (Proposta de Juliane): &lt;a href=&#34;https://www.figma.com/proto/isRxuZbvduJe4bww0FvlTW/Untitled?node-id=7%3A18&amp;amp;scaling=min-zoom&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.figma.com/proto/isRxuZbvduJe4bww0FvlTW/Untitled?node-id=7%3A18&amp;scaling=min-zoom&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GUI 3 (Proposta de Andr√© Felipe): &lt;a href=&#34;https://www.figma.com/proto/lapHIsabTlxt6NLO0Grsur/Untitled?node-id=13%3A582&amp;amp;scaling=contain&amp;amp;page-id=0%3A1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.figma.com/proto/lapHIsabTlxt6NLO0Grsur/Untitled?node-id=13%3A582&amp;scaling=contain&amp;page-id=0%3A1&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GUI 4 (Proposta de Dailon): &lt;a href=&#34;images/gui-dailon.jpeg&#34;&gt;Imagem&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>CDEC</title>
      <link>http://bendeivide.github.io/project/cdec/</link>
      <pubDate>Thu, 06 May 2021 23:36:05 +0000</pubDate>
      <guid>http://bendeivide.github.io/project/cdec/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Tutorial sobre o pacote R tcltk</title>
      <link>http://bendeivide.github.io/handouts/tcltk/</link>
      <pubDate>Thu, 06 May 2021 23:34:42 +0000</pubDate>
      <guid>http://bendeivide.github.io/handouts/tcltk/</guid>
      <description>&lt;p&gt;Essa apostila tenta melhorar o &lt;em&gt;help&lt;/em&gt; do pacote &lt;strong&gt;tcltk&lt;/strong&gt; que √© uma interface de integra√ß√£o da linguagem Tcl/Tk no ambiente R. Por ser da base de instala√ß√£o do R, creio que deva ser uma das escolhas nesse ambiente para quem deseja criar GUIs para os seus pacotes. Por√©m, o documento de ajuda desse pacote √© muito pobre e com poucos exemplos.&lt;/p&gt;
&lt;p&gt;Como eu j√° vinha criando algumas interfaces para os pacotes que desenvolvo em parceria, resolvi estudar a fundo, e n√£o me limitei a essa apostila, que acabou ficando incompleta, porque surge mais um livro em desenvimento, intitulado &lt;a href=&#34;https://bendeivide.github.io/book-pigur&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Programa√ß√£o de Interface Gr√°fica ao Usu√°rio no R&lt;/a&gt;. Nesse livro, falaremos das linguagens Tcl/Tk, GTK+ e usaremos os recursos do pacote shiny, para criarmos interfaces web para os pacotes, isto √©, usar as integra√ß√µes com as linguagens CSS, JavaScript e HTML.&lt;/p&gt;
&lt;p&gt;Contudo, para um estudo incial sobre o pacote tcltk, vale a pena a leitura desse material.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Como desenvolver um pacote R</title>
      <link>http://bendeivide.github.io/handouts/rpkg/</link>
      <pubDate>Thu, 06 May 2021 23:34:30 +0000</pubDate>
      <guid>http://bendeivide.github.io/handouts/rpkg/</guid>
      <description>&lt;p&gt;Esse foi o primeiro material que escrevi sobre desenvolvimento de pacotes em R, do qual os recursos contidos no RStudio n√£o eram t√£o eficientes quanto √© hoje, para rotinas repetitivas sobre cria√ß√£o de pacotes. Esse material uso a fun√ß√£o &lt;code&gt;package.skeleton()&lt;/code&gt; para a cria√ß√£o de pacotes, algo que internamente o RStudio faz de modo muito mais f√°cil hoje. Mas, vale a pena o registro.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Infer√™ncia Estat√≠stica II</title>
      <link>http://bendeivide.github.io/handouts/infii/</link>
      <pubDate>Thu, 06 May 2021 23:33:55 +0000</pubDate>
      <guid>http://bendeivide.github.io/handouts/infii/</guid>
      <description>&lt;p&gt;Essa apostila √© referente ao assunto sobre Estat√≠stica para grandes amostras, idealizada durante o doutorado em Estat√≠stica pela UFLA. Segue o &lt;a href=&#34;media/handout-infII.pdf&#34;&gt;PDF&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Infer√™ncia Bayesiana</title>
      <link>http://bendeivide.github.io/handouts/infbayes/</link>
      <pubDate>Thu, 06 May 2021 23:33:29 +0000</pubDate>
      <guid>http://bendeivide.github.io/handouts/infbayes/</guid>
      <description>&lt;p&gt;Essa apostila apresenta alguns fundamentos sobre a Infer√™ncia Bayesiana. Foi idealizada durante o mestrado em Estat√≠stica na UFLA.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Estat√≠stica Experimental usando SISVAR, R e SAS</title>
      <link>http://bendeivide.github.io/handouts/estexp/</link>
      <pubDate>Thu, 06 May 2021 23:33:01 +0000</pubDate>
      <guid>http://bendeivide.github.io/handouts/estexp/</guid>
      <description>&lt;p&gt;A apostila sobre Estat√≠stica Experimental foi fruto de alguns cursos ministrados na UFLA para departamentos de √°rea aplicada, bem como uma disciplina eletiva ministrado pela UFSJ. Essa apostila tem um cunho aplicado a an√°lise de experimentos usando os programas SISVAR, R e SAS. Para a mesma an√°lise, apresentamos rotinas e passos de como analisar por esses programas. Isso n√£o foi realizado para todos os experimentos, mas apresenta passos iniciais para a utliza√ß√£o dessas tr√™s grandes ferramentas na √°rea da Estat√≠stica.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Estat√≠stica &amp; Probabilidade</title>
      <link>http://bendeivide.github.io/handouts/epaec/</link>
      <pubDate>Thu, 06 May 2021 23:32:25 +0000</pubDate>
      <guid>http://bendeivide.github.io/handouts/epaec/</guid>
      <description>&lt;p&gt;Essa apostila ficou incompleta, pois deu sequ√™ncia ao desenvolvimento do &lt;a href=&#34;https://bendeivide.github.io/books/EPAEC/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;livro&lt;/a&gt; que est√° em andamento.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Auto Multiple Choice</title>
      <link>http://bendeivide.github.io/handouts/amc/</link>
      <pubDate>Thu, 06 May 2021 23:31:51 +0000</pubDate>
      <guid>http://bendeivide.github.io/handouts/amc/</guid>
      <description>&lt;p&gt;Essa apostila ensina como utilizar o programa &lt;em&gt;Auto Multiple Choice&lt;/em&gt; (AMC). Um programa muito eficiente para cria√ß√£o de provas com quest√µes objetivas e abertas. Ao final, ap√≥s digitalizar as provas, o pr√≥prio programa corrige as quest√µes, gabarita e envia o resultado por e-mail aos alunos. Apesar de ser um programa apenas para o Linux, eu ensino como criar uma m√°quina virtual no SO Windows e utiliz√°-lo facilmente.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>An√°lise de Experimentos usando o R</title>
      <link>http://bendeivide.github.io/handouts/aeur-nefit/</link>
      <pubDate>Thu, 06 May 2021 23:31:31 +0000</pubDate>
      <guid>http://bendeivide.github.io/handouts/aeur-nefit/</guid>
      <description>&lt;p&gt;A apostila sobre Estat√≠stica Experimental foi fruto de um curso ministrados ao NEFIT/UFLA, do qual abordamos o desenvolvimento anal√≠tico da an√°lise dos experimentos, bem como as an√°lises realizadas usando o R e SISVAR.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>An√°lise de Experimentos usando o R</title>
      <link>http://bendeivide.github.io/handouts/aeur-fisio/</link>
      <pubDate>Thu, 06 May 2021 23:30:52 +0000</pubDate>
      <guid>http://bendeivide.github.io/handouts/aeur-fisio/</guid>
      <description>&lt;p&gt;A apostila sobre Estat√≠stica Experimental foi fruto de um curso ministrados ao NEFIT/UFLA, do qual abordamos o desenvolvimento anal√≠tico da an√°lise dos experimentos, bem como as an√°lises realizadas usando o R e SISVAR.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fundamentos de Infer√™ncia</title>
      <link>http://bendeivide.github.io/books/finf/</link>
      <pubDate>Thu, 06 May 2021 23:23:37 +0000</pubDate>
      <guid>http://bendeivide.github.io/books/finf/</guid>
      <description>&lt;p&gt;Esse livro ser√° uma continua√ß√£o do livro publicado por &lt;a href=&#34;https://des.ufla.br/~danielff/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Daniel Furtado Ferreira&lt;/a&gt;, intitulado &lt;a href=&#34;https://www.editora.ufla.br/produto/225/fundamentos-de-probabilidade&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fundamentos de Probabilidade&lt;/a&gt;. Foi uma honra receber o convite do Prof. Daniel para essa parceria, ainda mais quando se est√° ao lado de uma pessoa que tenho como refer√™ncia profissional.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Estudando o ambiente R</title>
      <link>http://bendeivide.github.io/books/eambr/</link>
      <pubDate>Thu, 06 May 2021 23:22:35 +0000</pubDate>
      <guid>http://bendeivide.github.io/books/eambr/</guid>
      <description>&lt;p&gt;O livro est√° em desenvolvimento nas duas vers√µes, impressa e digital. A vers√£o digital √© um &lt;a href=&#34;https://bendeivide.github.io/book-eambr/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;bookdown&lt;/em&gt;&lt;/a&gt; e o projeto encontra-se no reposit√≥rio &lt;a href=&#34;https://github.com/bendeivide/book-eambr&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Desenvolvimento de Pacotes em R</title>
      <link>http://bendeivide.github.io/books/dpr/</link>
      <pubDate>Thu, 06 May 2021 23:20:55 +0000</pubDate>
      <guid>http://bendeivide.github.io/books/dpr/</guid>
      <description>&lt;p&gt;Esse livro √© um fruto de toda a minha experi√™ncia que venho tendo ao desenvolver pacotes. Tem muito trabalho pela frente, mas ao final, tenho certeza que ficar√° um grande material refer√™ncia em desenvolvimento de pacotes em portugu√™s.&lt;/p&gt;
&lt;p&gt;Segue o reposit√≥rio &lt;a href=&#34;https://github.com/bendeivide/book-dper&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub&lt;/a&gt;, para a vers√£o desse livro em &lt;em&gt;bookdown&lt;/em&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>On the analysis of mortality risk factors for hospitalized COVID-19 patients: A data-driven study using the major Brazilian database</title>
      <link>http://bendeivide.github.io/publication/art-covid19/</link>
      <pubDate>Wed, 28 Apr 2021 21:09:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/publication/art-covid19/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Clique no bot√£o &lt;em&gt;Cite&lt;/em&gt; acima para verificar a refer√™ncia, para que este artigo possa ser citado em seus trabalhos.
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Minicurso - Como desenvolver seu primeiro pacote R</title>
      <link>http://bendeivide.github.io/talk/minicurso-como-desenvolver-seu-primeiro-pacote-r/</link>
      <pubDate>Tue, 08 Dec 2020 10:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/talk/minicurso-como-desenvolver-seu-primeiro-pacote-r/</guid>
      <description>&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/7gUeYv0Os8s&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/br&gt;
&lt;/br&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/TB39rqQREw0&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>A linguagem R como uma ferramenta para a sua profiss√£o</title>
      <link>http://bendeivide.github.io/talk/a-linguagem-r-como-uma-ferramenta-para-a-sua-profissao/</link>
      <pubDate>Sat, 01 Aug 2020 19:30:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/talk/a-linguagem-r-como-uma-ferramenta-para-a-sua-profissao/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Clique no bot√£o &lt;strong&gt;Slides&lt;/strong&gt; acima para visualizar o recurso de slides integrado.
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>An example preprint / working paper</title>
      <link>http://bendeivide.github.io/publication/preprint/</link>
      <pubDate>Sun, 07 Apr 2019 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/publication/preprint/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Create your slides in Markdown - click the &lt;em&gt;Slides&lt;/em&gt; button to check out the example.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including &lt;a href=&#34;https://wowchemy.com/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code, math, and images&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>R como uma ferramenta acad√™mica</title>
      <link>http://bendeivide.github.io/slides/ramb-academico/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/ramb-academico/</guid>
      <description>&lt;h1 id=&#34;r-como-uma-ferramenta-acad√™mica&#34;&gt;R como uma ferramenta acad√™mica&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ben D√™ivide&lt;/a&gt; | &lt;a href=&#34;https://www.ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;apresenta√ß√£o-com-selo-dc&#34;&gt;Apresenta√ß√£o com selo DC&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/dc/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/ramb-academico/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_57f4d021c573f1cdb22f5303fccfacd9.webp 400w,
               /slides/ramb-academico/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_e3124639f3c96b16d12396d9954194c3.webp 760w,
               /slides/ramb-academico/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/ramb-academico/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_57f4d021c573f1cdb22f5303fccfacd9.webp&#34;
               width=&#34;385&#34;
               height=&#34;406&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;acesso-ao-material-dessa-apresenta√ß√£o&#34;&gt;Acesso ao material dessa apresenta√ß√£o&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/bendeivide/palestras/tree/master/ramb-academico&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/ramb-academico/folder_hu84ae0d30d5154d1e73aaf9945c348d03_20466_620e1c48e451842e2f4135b7117821ad.webp 400w,
               /slides/ramb-academico/folder_hu84ae0d30d5154d1e73aaf9945c348d03_20466_81e4eb609876936d8a5e708f395fd9b9.webp 760w,
               /slides/ramb-academico/folder_hu84ae0d30d5154d1e73aaf9945c348d03_20466_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/ramb-academico/folder_hu84ae0d30d5154d1e73aaf9945c348d03_20466_620e1c48e451842e2f4135b7117821ad.webp&#34;
               width=&#34;607&#34;
               height=&#34;471&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;nota&#34;&gt;Nota&lt;/h2&gt;
&lt;p&gt;Essa apresenta√ß√£o ter√° um vi√©s, pois apesar do poder que a ambiente &lt;code&gt;R&lt;/code&gt; tem, muitos dos exemplos estar√£o dentro das minhas necessidades/limita√ß√µes pessoais e profissionais. Portanto, um resultado do que experimento e venho experienciando!&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;hist√≥rico-sobre-o-ambiente-r&#34;&gt;Hist√≥rico sobre o ambiente &lt;code&gt;R&lt;/code&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Criadores Ross Ihaka e por Robert Gentleman (Nova Zel√¢ndia), 1993&lt;/li&gt;
&lt;li&gt;Baseado na linguagem S, criado por John Chambers e colaboradores (Primeira vers√£o 1976)&lt;/li&gt;
&lt;li&gt;Atualmente √© mantida por colaboradores volunt√°rios em todo o mundo&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;hist√≥rico-sobre-o-ambiente-r-1&#34;&gt;Hist√≥rico sobre o ambiente &lt;code&gt;R&lt;/code&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Linguagem pode ser orientada a objetos, C√≥digo aberto, funcional, metapragm√°tica, Licen√ßa GNU&lt;/li&gt;
&lt;li&gt;Reposit√≥rio &lt;a href=&#34;https://cran.r-project.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CRAN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Popularidade com o &lt;a href=&#34;https://rstudio.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RStudio&lt;/a&gt; (Joseph J. Allaire)&lt;/li&gt;
&lt;li&gt;Como instalar o R?
Como instalar o RStudio?&lt;/li&gt;
&lt;li&gt;Como usar o R?&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;curso-r-n√≠vel-b√°sico&#34;&gt;Curso R (N√≠vel B√°sico)&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/cursor/nbasico/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;N√≠vel B√°sico&#34; srcset=&#34;
               /slides/ramb-academico/cursor-nb_hu8cbf2d1b9b5244f1524037e4474c538e_69900_4b297cb8f0e33e442ebf99b215388034.webp 400w,
               /slides/ramb-academico/cursor-nb_hu8cbf2d1b9b5244f1524037e4474c538e_69900_f138ba75b6cb4eb62d1ecea4bcae0172.webp 760w,
               /slides/ramb-academico/cursor-nb_hu8cbf2d1b9b5244f1524037e4474c538e_69900_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/ramb-academico/cursor-nb_hu8cbf2d1b9b5244f1524037e4474c538e_69900_4b297cb8f0e33e442ebf99b215388034.webp&#34;
               width=&#34;593&#34;
               height=&#34;579&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;curso-r-ni&#34;&gt;Curso R (NI)&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/post/cursorni2/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;N√≠vel Intermedi√°rio&#34; srcset=&#34;
               /slides/ramb-academico/cursor-ni_hua909e2f7dc5b7deac580280a2231351e_70067_01ee0fc5dca62b5827c4744b677401e2.webp 400w,
               /slides/ramb-academico/cursor-ni_hua909e2f7dc5b7deac580280a2231351e_70067_2be287ff636a8ea73ce5b5354154f128.webp 760w,
               /slides/ramb-academico/cursor-ni_hua909e2f7dc5b7deac580280a2231351e_70067_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/ramb-academico/cursor-ni_hua909e2f7dc5b7deac580280a2231351e_70067_01ee0fc5dca62b5827c4744b677401e2.webp&#34;
               width=&#34;593&#34;
               height=&#34;579&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;rapidinhas-do-r&#34;&gt;Rapidinhas do R&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/project/rapidinhasr/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/ramb-academico/rapidinhasr_huf4c584a0ea803c0b4fded9f2abc27f53_510973_df46483f285db6db6d908bc356b06e75.webp 400w,
               /slides/ramb-academico/rapidinhasr_huf4c584a0ea803c0b4fded9f2abc27f53_510973_db647e21fc70a6855b86924338dcb47a.webp 760w,
               /slides/ramb-academico/rapidinhasr_huf4c584a0ea803c0b4fded9f2abc27f53_510973_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/ramb-academico/rapidinhasr_huf4c584a0ea803c0b4fded9f2abc27f53_510973_df46483f285db6db6d908bc356b06e75.webp&#34;
               width=&#34;760&#34;
               height=&#34;374&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;ferramentas-do-r-al√©m-do-fim-estat√≠stico&#34;&gt;Ferramentas do &lt;code&gt;R&lt;/code&gt; al√©m do fim Estat√≠stico&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;An√°lises Estat√≠sticas ‚ùå&lt;/li&gt;
&lt;li&gt;Cria√ß√£o e divulga√ß√£o de materiais cient√≠ficos:
&lt;ul&gt;
&lt;li&gt;Materiais Din√¢micos (HTML, JavaScript, CSS, &lt;code&gt;\(\LaTeX\)&lt;/code&gt;, &lt;code&gt;R&lt;/code&gt;, PDF) ‚úîÔ∏è&lt;/li&gt;
&lt;li&gt;Materiais estat√≠sticos (HTML, PDF, EPUB, WORD, SLIDES) ‚úîÔ∏è&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;ferramentas-do-r-al√©m-do-fim-estat√≠stico-1&#34;&gt;Ferramentas do &lt;code&gt;R&lt;/code&gt; al√©m do fim Estat√≠stico&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Desenvolvimento de pacotes  ‚úîÔ∏è
&lt;ul&gt;
&lt;li&gt;Cria√ß√£o de GUIs para pacotes (Pacotes &lt;code&gt;tcltk&lt;/code&gt;, &lt;code&gt;GTK+&lt;/code&gt;, &lt;code&gt;shiny&lt;/code&gt;) ‚úîÔ∏è&lt;/li&gt;
&lt;li&gt;Documenta√ß√£o de pacotes (Vignettes, tutorial de pacote) ‚úîÔ∏è&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Divulga√ß√£o de todos esses materiais ‚úîÔ∏è&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;o-que-ser√°-necess√°rio-para-usar-essas-ferramentas&#34;&gt;O que ser√° necess√°rio para usar essas ferramentas?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://youtu.be/Gei-gtBlMos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Instala√ß√£o do &lt;code&gt;R&lt;/code&gt;&lt;/a&gt; e &lt;a href=&#34;https://youtu.be/Gei-gtBlMos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RStudio/Pandoc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;No &lt;code&gt;R&lt;/code&gt; &lt;a href=&#34;https://youtu.be/YRSdoyfqp_g&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;instalar os pacotes&lt;/a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rmarkdown&lt;/code&gt; e &lt;code&gt;knitr&lt;/code&gt; - Pacotes mais importantes!&lt;/li&gt;
&lt;li&gt;&lt;code&gt;shiny&lt;/code&gt; - Pacote para cria√ß√£o de materiais din√¢micos&lt;/li&gt;
&lt;li&gt;&lt;code&gt;devtools&lt;/code&gt; e &lt;code&gt;usethis&lt;/code&gt; - kit de ferramentas&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rsconnect&lt;/code&gt; - Pacote para enviar seu arquivo para &lt;em&gt;shinyapps.io&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;o-que-ser√°-necess√°rio-para-usar-essas-ferramentas-1&#34;&gt;O que ser√° necess√°rio para usar essas ferramentas?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;No &lt;code&gt;R&lt;/code&gt; &lt;a href=&#34;https://youtu.be/YRSdoyfqp_g&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;instalar os pacotes&lt;/a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tinytex&lt;/code&gt; - Latex (Caso voc√™ n√£o queira instalar o &lt;code&gt;\(\LaTeX\)&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rticles&lt;/code&gt; - Escrever Artigos&lt;/li&gt;
&lt;li&gt;&lt;code&gt;thesisdown&lt;/code&gt; - Escrever Teses&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bookdown&lt;/code&gt; - Escrever Livros (HTML, PDF, ePub, Kindle)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;o-que-ser√°-necess√°rio-para-usar-essas-ferramentas-2&#34;&gt;O que ser√° necess√°rio para usar essas ferramentas?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;No &lt;code&gt;R&lt;/code&gt; &lt;a href=&#34;https://youtu.be/YRSdoyfqp_g&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;instalar os pacotes&lt;/a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;blogdown&lt;/code&gt; e &lt;code&gt;distill&lt;/code&gt; - Cria√ß√£o de blogs, websites&lt;/li&gt;
&lt;li&gt;&lt;code&gt;postcards&lt;/code&gt; - Cria√ß√£o de um cart√£o de visita&lt;/li&gt;
&lt;li&gt;&lt;code&gt;learnr&lt;/code&gt; - Cria√ß√£o de tutoriais para aprender R&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pkgdown&lt;/code&gt;(Documenta√ß√£o em HTML para pacotes R) e &lt;code&gt;usethis&lt;/code&gt; ou &lt;code&gt;rmarkdown&lt;/code&gt;(Cria√ß√£o de Vignettes)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;o-que-ser√°-necess√°rio-para-usar-essas-ferramentas-3&#34;&gt;O que ser√° necess√°rio para usar essas ferramentas?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;No &lt;code&gt;R&lt;/code&gt; &lt;a href=&#34;https://youtu.be/YRSdoyfqp_g&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;instalar os pacotes&lt;/a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tcltk&lt;/code&gt; (Existem muitos outros pacotes!) - GUI&amp;rsquo;s&lt;/li&gt;
&lt;li&gt;&lt;code&gt;manipulate&lt;/code&gt; e &lt;code&gt;shiny&lt;/code&gt; - gr√°ficos interativos no RStudio e &lt;code&gt;scatterplot3d&lt;/code&gt; - Gr√°ficos em 3d&lt;/li&gt;
&lt;li&gt;&lt;code&gt;exams&lt;/code&gt; - Cria√ß√£o de Provas para disciplinas + MOODLE&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\(\LaTeX\)&lt;/code&gt;, MS Word (ou similares)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;r-markdown&#34;&gt;&lt;code&gt;R&lt;/code&gt; Markdown&lt;/h2&gt;
&lt;p&gt;Tr√™s componentes b√°sicos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Metadados&lt;/strong&gt;: O corpo do documento&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Texto&lt;/strong&gt;: Assunto dissertado&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;C√≥digo&lt;/strong&gt;: Linguagem de interesse&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;LEMBRETE&lt;/strong&gt;: A extens√£o de um arquivo R Markdown √©: &lt;em&gt;.Rmd&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;material-de-apoio-ao-r-markdown&#34;&gt;Material de apoio ao &lt;code&gt;R&lt;/code&gt; Markdown&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/cdec/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/ramb-academico/cdec_hu891cdc650656200eb98f514c61f934c4_17480_48bcaa36767fa23207c27b820274c199.webp 400w,
               /slides/ramb-academico/cdec_hu891cdc650656200eb98f514c61f934c4_17480_d7c00888fc771d6909d650596147e429.webp 760w,
               /slides/ramb-academico/cdec_hu891cdc650656200eb98f514c61f934c4_17480_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/ramb-academico/cdec_hu891cdc650656200eb98f514c61f934c4_17480_48bcaa36767fa23207c27b820274c199.webp&#34;
               width=&#34;226&#34;
               height=&#34;364&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;material-de-apoio-ao-r-markdown-1&#34;&gt;Material de apoio ao &lt;code&gt;R&lt;/code&gt; Markdown&lt;/h2&gt;
&lt;p&gt;O b√°sico no R Markdown:
&lt;a href=&#34;https://rmarkdown.rstudio.com/authoring_basics.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://rmarkdown.rstudio.com/authoring_basics.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A ideia dos pacotes nos documentos din√¢micos:
&lt;a href=&#34;https://jreduardo.github.io/semanest-ufpr2017/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://jreduardo.github.io/semanest-ufpr2017/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Para leitura:
&lt;a href=&#34;http://cursos.leg.ufpr.br/prr/capDocDin.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://cursos.leg.ufpr.br/prr/capDocDin.html&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;/media/boards.jpg&#34;
  &gt;

&lt;h2 id=&#34;r-markdown-documentos-estat√≠sticos&#34;&gt;&lt;code&gt;R&lt;/code&gt; Markdown: Documentos estat√≠sticos&lt;/h2&gt;
&lt;p&gt;Aplica√ß√µes:&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/ramb-academico/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_0cd5d2661e8fc6dbb49dd886a81160b2.webp 400w,
               /slides/ramb-academico/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_5bd7ddd151c2f4da3fa79a2fa5972624.webp 760w,
               /slides/ramb-academico/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/ramb-academico/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_0cd5d2661e8fc6dbb49dd886a81160b2.webp&#34;
               width=&#34;170&#34;
               height=&#34;170&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;r-markdown-documentos-din√¢micos&#34;&gt;&lt;code&gt;R&lt;/code&gt; Markdown: Documentos din√¢micos&lt;/h2&gt;
&lt;p&gt;Recursos do Shiny:&lt;/p&gt;
&lt;p&gt;Exemplos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://shiny.estatistica.ccet.ufrn.br/srag/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Srag ou Covid-19 (UFRN)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://shiny.rstudio.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;Trends&lt;/em&gt; do Google (RStudio)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://shiny.rstudio.com/gallery/didacting-modeling.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Processo de modelagem did√°tica&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;cria√ß√£o-de-websites&#34;&gt;Cria√ß√£o de &lt;em&gt;Websites&lt;/em&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Website (pacote &lt;a href=&#34;https://rstudio.github.io/distill/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;distill&lt;/code&gt;&lt;/a&gt;): &lt;a href=&#34;https://youtu.be/FbTLrfYWQQw&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Rapidinhas do R&lt;/a&gt;, ex. &lt;a href=&#34;https://bendeivide.github.io/cursor/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Website via &lt;a href=&#34;https://pkgs.rstudio.com/blogdown/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;blogdown&lt;/code&gt;&lt;/a&gt; e &lt;a href=&#34;https://wowchemy.com/docs/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;Hugo&lt;/code&gt;&lt;/a&gt; (&lt;a href=&#34;https://wowchemy.com/templates/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;temas&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/ramb-academico/ben_hu96f6bd792b3af7602ac6cf7cef98b13a_17598_7e5abe44a987059ffc245fad5b802500.webp 400w,
               /slides/ramb-academico/ben_hu96f6bd792b3af7602ac6cf7cef98b13a_17598_7191e69c4c5b62592abfeed760168432.webp 760w,
               /slides/ramb-academico/ben_hu96f6bd792b3af7602ac6cf7cef98b13a_17598_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/ramb-academico/ben_hu96f6bd792b3af7602ac6cf7cef98b13a_17598_7e5abe44a987059ffc245fad5b802500.webp&#34;
               width=&#34;216&#34;
               height=&#34;217&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;exemplos-de-websites&#34;&gt;Exemplos de &lt;em&gt;Websites&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;Exemplos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://rmarkdown.rstudio.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R Markdown no RStudio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Website pessoal de &lt;a href=&#34;https://robjhyndman.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Rob J Hyndman&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Website pessoal de &lt;a href=&#34;https://amber.rbind.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Amber Thomas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Website pessoal de &lt;a href=&#34;https://emitanaka.github.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Emi Tanaka&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;exemplo-de-postcard&#34;&gt;Exemplo de &lt;em&gt;Postcard&lt;/em&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Exemplo: &lt;a href=&#34;https://bendeivide.github.io/cursor/about.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ben D√™ivide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;exemplo-de-dashboard&#34;&gt;Exemplo de Dashboard&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.shinyapps.io/RDashboards/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/ramb-academico/midrangeMCP_huf45dc9e9da53fa562b8e5b4d36571394_51649_39352c290d8c5e5a1804a131d2592ce5.webp 400w,
               /slides/ramb-academico/midrangeMCP_huf45dc9e9da53fa562b8e5b4d36571394_51649_40d47179797e8775f2210bae5d3f9b20.webp 760w,
               /slides/ramb-academico/midrangeMCP_huf45dc9e9da53fa562b8e5b4d36571394_51649_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/ramb-academico/midrangeMCP_huf45dc9e9da53fa562b8e5b4d36571394_51649_39352c290d8c5e5a1804a131d2592ce5.webp&#34;
               width=&#34;461&#34;
               height=&#34;534&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;outros-exemplos-de-dashboards&#34;&gt;Outros exemplos de Dashboards&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://eelloo.nl/groepsrapportages-met-infographics/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;eelloo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jjallaire.shinyapps.io/shiny-crandash/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Exemplo usando o &lt;code&gt;shiny&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://shiny.estatistica.ccet.ufrn.br/DashboardDeputados/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Controle de gastos p√∫blicos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pkgs.rstudio.com/flexdashboard/articles/examples.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Material para usar Dashboards + Shiny&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;r-markdown-relat√≥rios-programados&#34;&gt;R Markdown: Relat√≥rios programados&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Exemplo: &lt;a href=&#34;https://rmarkdown.rstudio.com/articles_mail_merge.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Mine √áetinkaya-Rundel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;/media/boards.jpg&#34;
  &gt;

&lt;h2 id=&#34;r-markdown-relat√≥rios-programados-aplica√ß√£o&#34;&gt;R Markdown: Relat√≥rios programados (Aplica√ß√£o)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Nomes dos professores do DEFIM/UFSJ e n√∫merode suas salas;&lt;/li&gt;
&lt;li&gt;Vamos fazer um documento em PDF, cujo nome desses arquivos ser√£o os nomes dos professores, com algum texto identificando as suas salas.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/ramb-academico/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_0cd5d2661e8fc6dbb49dd886a81160b2.webp 400w,
               /slides/ramb-academico/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_5bd7ddd151c2f4da3fa79a2fa5972624.webp 760w,
               /slides/ramb-academico/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/ramb-academico/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_0cd5d2661e8fc6dbb49dd886a81160b2.webp&#34;
               width=&#34;170&#34;
               height=&#34;170&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;r-markdown-livros&#34;&gt;R Markdown: Livros&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Site: &lt;a href=&#34;https://bookdown.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://bookdown.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Exemplo: &lt;a href=&#34;https://bendeivide.github.io/book-epaec/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;EPAEC&lt;/a&gt;, &lt;a href=&#34;https://bendeivide.github.io/book-eambr/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;EAMBR&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;r-markdown-artigos-e-teses&#34;&gt;R Markdown: Artigos e Teses&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Pacote &lt;code&gt;bookdown&lt;/code&gt; (Tese)&lt;/li&gt;
&lt;li&gt;Pacote &lt;code&gt;rticles&lt;/code&gt; (Artigo): &lt;code&gt;install.packages(&amp;quot;rticles&amp;quot;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Pacote &lt;code&gt;thesisdown&lt;/code&gt; (Tese):&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;if (!require(&amp;quot;remotes&amp;quot;)) 
  install.packages(&amp;quot;remotes&amp;quot;, repos = &amp;quot;https://cran.rstudio.org&amp;quot;)
remotes::install_github(&amp;quot;rstudio/bookdown&amp;quot;)
remotes::install_github(&amp;quot;ismayc/thesisdown&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;/media/boards.jpg&#34;
  &gt;

&lt;h2 id=&#34;r-markdown-livros-aplica√ß√µes&#34;&gt;R Markdown: Livros (Aplica√ß√µes)&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/ramb-academico/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_0cd5d2661e8fc6dbb49dd886a81160b2.webp 400w,
               /slides/ramb-academico/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_5bd7ddd151c2f4da3fa79a2fa5972624.webp 760w,
               /slides/ramb-academico/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/ramb-academico/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_0cd5d2661e8fc6dbb49dd886a81160b2.webp&#34;
               width=&#34;170&#34;
               height=&#34;170&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;/media/boards.jpg&#34;
  &gt;

&lt;h2 id=&#34;r-markdown-slides-aplica√ß√µes&#34;&gt;R Markdown: Slides (Aplica√ß√µes)&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/ramb-academico/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_0cd5d2661e8fc6dbb49dd886a81160b2.webp 400w,
               /slides/ramb-academico/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_5bd7ddd151c2f4da3fa79a2fa5972624.webp 760w,
               /slides/ramb-academico/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/ramb-academico/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_0cd5d2661e8fc6dbb49dd886a81160b2.webp&#34;
               width=&#34;170&#34;
               height=&#34;170&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;documenta√ß√£o-para-pacotes&#34;&gt;Documenta√ß√£o para pacotes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Pacote &lt;a href=&#34;https://pkgdown.r-lib.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;pkgdown&lt;/code&gt;&lt;/a&gt;: ex.: &lt;a href=&#34;https://bendeivide.github.io/midrangeMCP/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;midrangeMCP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Vignettes (Pacote &lt;a href=&#34;https://usethis.r-lib.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;usethis&lt;/code&gt;&lt;/a&gt;): &lt;code&gt;usethis::use_vignette()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;interface-gr√°fica-ao-usu√°rio&#34;&gt;Interface Gr√°fica ao Usu√°rio&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Exemplo do pacote &lt;code&gt;tcltk&lt;/code&gt;: &lt;a href=&#34;https://bendeivide.github.io/project/mcptests/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;MCPtests&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34;
           src=&#34;http://bendeivide.github.io/slides/ramb-academico/MCPtests.gif&#34;
           loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Exemplo do pacote &lt;code&gt;shiny&lt;/code&gt;: &lt;a href=&#34;https://dreamrs.github.io/esquisse/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;esquisse&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;documentos-para-aprendizagem-do-r&#34;&gt;Documentos para aprendizagem do &lt;code&gt;R&lt;/code&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Pacote &lt;a href=&#34;https://rstudio.github.io/learnr/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;learnr&lt;/code&gt;&lt;/a&gt;: ex.: &lt;a href=&#34;http://bendeivide.shinyapps.io/Est_Exp/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Estat√≠stica Experimental&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;aplica√ß√£o-de-provas-academia&#34;&gt;Aplica√ß√£o de provas (Academia)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Pacote &lt;a href=&#34;http://r-exams.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;exams&lt;/code&gt;&lt;/a&gt; e uso no &lt;a href=&#34;https://moodle.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MOODLE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/ramb-academico/rexams&amp;#43;moodle_hu90e239b8805e1b03b777d53fd8bd0aea_63184_45a5acf0538bc5ef2ea0500c6d063fe2.webp 400w,
               /slides/ramb-academico/rexams&amp;#43;moodle_hu90e239b8805e1b03b777d53fd8bd0aea_63184_f19d123669d0c8ec3229ab58813739b8.webp 760w,
               /slides/ramb-academico/rexams&amp;#43;moodle_hu90e239b8805e1b03b777d53fd8bd0aea_63184_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/ramb-academico/rexams&amp;#43;moodle_hu90e239b8805e1b03b777d53fd8bd0aea_63184_45a5acf0538bc5ef2ea0500c6d063fe2.webp&#34;
               width=&#34;295&#34;
               height=&#34;155&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;/media/boards.jpg&#34;
  &gt;

&lt;h2 id=&#34;gr√°ficos-3d-latex-e-r&#34;&gt;Gr√°ficos 3D ($\LaTeX$ e &lt;code&gt;R&lt;/code&gt;)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Pacote &lt;code&gt;scatterplot3d&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;/media/boards.jpg&#34;
  &gt;

&lt;h2 id=&#34;tabelas-com-ilustra√ß√µes-animadas--sweave&#34;&gt;Tabelas com ilustra√ß√µes animadas + &lt;code&gt;Sweave&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/ramb-academico/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_0cd5d2661e8fc6dbb49dd886a81160b2.webp 400w,
               /slides/ramb-academico/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_5bd7ddd151c2f4da3fa79a2fa5972624.webp 760w,
               /slides/ramb-academico/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/ramb-academico/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_0cd5d2661e8fc6dbb49dd886a81160b2.webp&#34;
               width=&#34;170&#34;
               height=&#34;170&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;onde-publicamos-esses-materiais&#34;&gt;Onde publicamos esses materiais?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://rpubs.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RPubs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://rpubs.com/cathydatascience/518692&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Como publicar!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.shinyapps.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;shinyapp.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bookdown.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Bookdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://marcusnunes.me/posts/como-instalar-o-shiny-em-seu-proprio-servidor/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Servidor pr√≥prio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gomesfellipe.github.io/post/2018-10-27-server-cloud/server-cloud/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Servidor online&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://https://github.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub&lt;/a&gt;, &lt;a href=&#34;https://bendeivide.github.io/project/rapidinhasr/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Rapidinhas do R 5 a 11&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.netlify.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Netlify&lt;/a&gt;, &lt;a href=&#34;https://bookdown.org/yihui/rmarkdown/blogdown-deploy.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Como publicar!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;quest√µes&#34;&gt;Quest√µes?&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;D√∫vidas e Sugest√µes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/#contact&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Contato&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Slides</title>
      <link>http://bendeivide.github.io/slides/example/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/example/</guid>
      <description>&lt;h1 id=&#34;create-slides-in-markdown-with-wowchemy&#34;&gt;Create slides in Markdown with Wowchemy&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://wowchemy.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wowchemy&lt;/a&gt; | &lt;a href=&#34;https://owchemy.com/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Efficiently write slides in Markdown&lt;/li&gt;
&lt;li&gt;3-in-1: Create, Present, and Publish your slides&lt;/li&gt;
&lt;li&gt;Supports speaker notes&lt;/li&gt;
&lt;li&gt;Mobile friendly slides&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;controls&#34;&gt;Controls&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Next: &lt;code&gt;Right Arrow&lt;/code&gt; or &lt;code&gt;Space&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Previous: &lt;code&gt;Left Arrow&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start: &lt;code&gt;Home&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Finish: &lt;code&gt;End&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Overview: &lt;code&gt;Esc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Speaker notes: &lt;code&gt;S&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fullscreen: &lt;code&gt;F&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Zoom: &lt;code&gt;Alt + Click&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hakimel/reveal.js#pdf-export&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PDF Export&lt;/a&gt;: &lt;code&gt;E&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;code-highlighting&#34;&gt;Code Highlighting&lt;/h2&gt;
&lt;p&gt;Inline code: &lt;code&gt;variable&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Code block:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;porridge = &amp;quot;blueberry&amp;quot;
if porridge == &amp;quot;blueberry&amp;quot;:
    print(&amp;quot;Eating...&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;math&#34;&gt;Math&lt;/h2&gt;
&lt;p&gt;In-line math: &lt;code&gt;\(x + y = z\)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Block math:&lt;/p&gt;
&lt;p&gt;$$
f\left( x \right) = ;\frac{{2\left( {x + 4} \right)\left( {x - 4} \right)}}{{\left( {x + 4} \right)\left( {x + 1} \right)}}
$$&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;fragments&#34;&gt;Fragments&lt;/h2&gt;
&lt;p&gt;Make content appear incrementally&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{% fragment %}} One {{% /fragment %}}
{{% fragment %}} **Two** {{% /fragment %}}
{{% fragment %}} Three {{% /fragment %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Press &lt;code&gt;Space&lt;/code&gt; to play!&lt;/p&gt;
&lt;span class=&#34;fragment &#34; &gt;
   One 
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
   **Two** 
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
   Three 
&lt;/span&gt;
&lt;hr&gt;
&lt;p&gt;A fragment can accept two optional parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;class&lt;/code&gt;: use a custom style (requires definition in custom CSS)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;weight&lt;/code&gt;: sets the order in which a fragment appears&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;speaker-notes&#34;&gt;Speaker Notes&lt;/h2&gt;
&lt;p&gt;Add speaker notes to your presentation&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{% speaker_note %}}
- Only the speaker can read these notes
- Press `S` key to view
{{% /speaker_note %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Press the &lt;code&gt;S&lt;/code&gt; key to view the speaker notes!&lt;/p&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;ul&gt;
&lt;li&gt;Only the speaker can read these notes&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;S&lt;/code&gt; key to view&lt;/li&gt;
&lt;/ul&gt;

&lt;/aside&gt;
&lt;hr&gt;
&lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;black: Black background, white text, blue links (default)&lt;/li&gt;
&lt;li&gt;white: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;league: Gray background, white text, blue links&lt;/li&gt;
&lt;li&gt;beige: Beige background, dark text, brown links&lt;/li&gt;
&lt;li&gt;sky: Blue background, thin dark text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;night: Black background, thick white text, orange links&lt;/li&gt;
&lt;li&gt;serif: Cappuccino background, gray text, brown links&lt;/li&gt;
&lt;li&gt;simple: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;solarized: Cream-colored background, dark green text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;/media/boards.jpg&#34;
  &gt;

&lt;h2 id=&#34;custom-slide&#34;&gt;Custom Slide&lt;/h2&gt;
&lt;p&gt;Customize the slide style and background&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; slide background-image=&amp;quot;/media/boards.jpg&amp;quot; &amp;gt;}}
{{&amp;lt; slide background-color=&amp;quot;#0000FF&amp;quot; &amp;gt;}}
{{&amp;lt; slide class=&amp;quot;my-style&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;custom-css-example&#34;&gt;Custom CSS Example&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s make headers navy colored.&lt;/p&gt;
&lt;p&gt;Create &lt;code&gt;assets/css/reveal_custom.css&lt;/code&gt; with:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.reveal section h1 {
  color: navy;
},
.reveal section h2,
.reveal section h3 {
  color: navy;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h1 id=&#34;questions&#34;&gt;Questions?&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/wowchemy/wowchemy-hugo-modules/discussions&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ask&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://wowchemy.com/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>An example journal article</title>
      <link>http://bendeivide.github.io/publication/journal-article/</link>
      <pubDate>Tue, 01 Sep 2015 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/publication/journal-article/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Create your slides in Markdown - click the &lt;em&gt;Slides&lt;/em&gt; button to check out the example.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including &lt;a href=&#34;https://wowchemy.com/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code, math, and images&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/estprob/s01/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/estprob/s01/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/estprob/s01/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/estprob/s01/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/estprob/s02/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/estprob/s02/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/estprob/s02/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/estprob/s02/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/estprob/s03/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/estprob/s03/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/estprob/s03/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/estprob/s03/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/estprob/s04/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/estprob/s04/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/estprob/s04/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/estprob/s04/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/estprob/s05/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/estprob/s05/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/estprob/s05/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/estprob/s05/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/estprob/s06/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/estprob/s06/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/estprob/s06/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/estprob/s06/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/estprob/s07/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/estprob/s07/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/estprob/s07/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/estprob/s07/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/estprob/s08/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/estprob/s08/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/estprob/s08/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/estprob/s08/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/estprob/s09/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/estprob/s09/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/estprob/s09/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/estprob/s09/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/estprob/s11.2/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/estprob/s11.2/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/estprob/s11.2/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/estprob/s11.2/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/estprob/s11/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/estprob/s11/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/estprob/s11/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/estprob/s11/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/estprob/s12/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/estprob/s12/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/estprob/s12/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/estprob/s12/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/estprob/s13/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/estprob/s13/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/estprob/s13/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/estprob/s13/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/estprob/s14/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/estprob/s14/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/estprob/s14/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/estprob/s14/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/estprob/s15/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/estprob/s15/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/estprob/s15/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/estprob/s15/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/estprob/s16/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/estprob/s16/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/estprob/s16/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/estprob/s16/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/estprob/s17/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/estprob/s17/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/estprob/s17/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/estprob/s17/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/expagr/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/expagr/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/expagr/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/expagr/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/lancamento/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/lancamento/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/lancamento/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/lancamento/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/live01/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/live01/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/live01/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/live01/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/live02/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/live02/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/live02/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/live02/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/live03/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/live03/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/live03/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/live03/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide00/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide00/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide00/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide00/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide01/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide01/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide01/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide01/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide02/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide02/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide02/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide02/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide03/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide03/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide03/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide03/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide04/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide04/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide04/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide04/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide05/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide05/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide05/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide05/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide06/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide06/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide06/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide06/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide07/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide07/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide07/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide07/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide08/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide08/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide08/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide08/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide09/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide09/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide09/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide09/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide10/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide10/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide10/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide10/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide11/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide11/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide11/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide11/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide12/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide12/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide12/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide12/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide13/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide13/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide13/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide13/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide14/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide14/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide14/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide14/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide15/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide15/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide15/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide15/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide16/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide16/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide16/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide16/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide17/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide17/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide17/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide17/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide18/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide18/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide18/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide18/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide19/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide19/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide19/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide19/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide20/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide20/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide20/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide20/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide21/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide21/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide21/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide21/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide22/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide22/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide22/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide22/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide23/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide23/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide23/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide23/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide24/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide24/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide24/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide24/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide25/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide25/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico/slide25/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico/slide25/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/lancamento/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/lancamento/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/lancamento/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/lancamento/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide00/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide00/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide00/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide00/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide01/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide01/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide01/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide01/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide02/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide02/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide02/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide02/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide03/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide03/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide03/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide03/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide04/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide04/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide04/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide04/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide05/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide05/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide05/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide05/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide06/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide06/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide06/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide06/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide07/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide07/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide07/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide07/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide08/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide08/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide08/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide08/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide09/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide09/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide09/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide09/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide10/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide10/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide10/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide10/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide11/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide11/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide11/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide11/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide12/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide12/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide12/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide12/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide13/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide13/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide13/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide13/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide14/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide14/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide14/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide14/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide15/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide15/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide15/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide15/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide16/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide16/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide16/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide16/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide17/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide17/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide17/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide17/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide18/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide18/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide18/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide18/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide19/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide19/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide19/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide19/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide20/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide20/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide20/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide20/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide21/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide21/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide21/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide21/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide22/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide22/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide22/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide22/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide23/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide23/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide23/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide23/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide24/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide24/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide24/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide24/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide25/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide25/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/rbasico2024/slide25/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/rbasico2024/slide25/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/semanact/index_files/libs/revealjs/plugin/notes/speaker-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/semanact/index_files/libs/revealjs/plugin/notes/speaker-view/</guid>
      <description>
&lt;html lang=&#34;en&#34;&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Speaker View&lt;/title&gt;

		&lt;style&gt;
			body {
				font-family: Helvetica;
				font-size: 18px;
			}

			#current-slide,
			#upcoming-slide,
			#speaker-controls {
				padding: 6px;
				box-sizing: border-box;
				-moz-box-sizing: border-box;
			}

			#current-slide iframe,
			#upcoming-slide iframe {
				width: 100%;
				height: 100%;
				border: 1px solid #ddd;
			}

			#current-slide .label,
			#upcoming-slide .label {
				position: absolute;
				top: 10px;
				left: 10px;
				z-index: 2;
			}

			#connection-status {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 20;
				padding: 30% 20% 20% 20%;
				font-size: 18px;
				color: #222;
				background: #fff;
				text-align: center;
				box-sizing: border-box;
				line-height: 1.4;
			}

			.overlay-element {
				height: 34px;
				line-height: 34px;
				padding: 0 10px;
				text-shadow: none;
				background: rgba( 220, 220, 220, 0.8 );
				color: #222;
				font-size: 14px;
			}

			.overlay-element.interactive:hover {
				background: rgba( 220, 220, 220, 1 );
			}

			#current-slide {
				position: absolute;
				width: 60%;
				height: 100%;
				top: 0;
				left: 0;
				padding-right: 0;
			}

			#upcoming-slide {
				position: absolute;
				width: 40%;
				height: 40%;
				right: 0;
				top: 0;
			}

			/* Speaker controls */
			#speaker-controls {
				position: absolute;
				top: 40%;
				right: 0;
				width: 40%;
				height: 60%;
				overflow: auto;
				font-size: 18px;
			}

				.speaker-controls-time.hidden,
				.speaker-controls-notes.hidden {
					display: none;
				}

				.speaker-controls-time .label,
				.speaker-controls-pace .label,
				.speaker-controls-notes .label {
					text-transform: uppercase;
					font-weight: normal;
					font-size: 0.66em;
					color: #666;
					margin: 0;
				}

				.speaker-controls-time, .speaker-controls-pace {
					border-bottom: 1px solid rgba( 200, 200, 200, 0.5 );
					margin-bottom: 10px;
					padding: 10px 16px;
					padding-bottom: 20px;
					cursor: pointer;
				}

				.speaker-controls-time .reset-button {
					opacity: 0;
					float: right;
					color: #666;
					text-decoration: none;
				}
				.speaker-controls-time:hover .reset-button {
					opacity: 1;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock {
					width: 50%;
				}

				.speaker-controls-time .timer,
				.speaker-controls-time .clock,
				.speaker-controls-time .pacing .hours-value,
				.speaker-controls-time .pacing .minutes-value,
				.speaker-controls-time .pacing .seconds-value {
					font-size: 1.9em;
				}

				.speaker-controls-time .timer {
					float: left;
				}

				.speaker-controls-time .clock {
					float: right;
					text-align: right;
				}

				.speaker-controls-time span.mute {
					opacity: 0.3;
				}

				.speaker-controls-time .pacing-title {
					margin-top: 5px;
				}

				.speaker-controls-time .pacing.ahead {
					color: blue;
				}

				.speaker-controls-time .pacing.on-track {
					color: green;
				}

				.speaker-controls-time .pacing.behind {
					color: red;
				}

				.speaker-controls-notes {
					padding: 10px 16px;
				}

				.speaker-controls-notes .value {
					margin-top: 5px;
					line-height: 1.4;
					font-size: 1.2em;
				}

			/* Layout selector¬†*/
			#speaker-layout {
				position: absolute;
				top: 10px;
				right: 10px;
				color: #222;
				z-index: 10;
			}
				#speaker-layout select {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					border: 0;
					box-shadow: 0;
					cursor: pointer;
					opacity: 0;

					font-size: 1em;
					background-color: transparent;

					-moz-appearance: none;
					-webkit-appearance: none;
					-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
				}

				#speaker-layout select:focus {
					outline: none;
					box-shadow: none;
				}

			.clear {
				clear: both;
			}

			/* Speaker layout: Wide */
			body[data-speaker-layout=&#34;wide&#34;] #current-slide,
			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				width: 50%;
				height: 45%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;wide&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;wide&#34;] #upcoming-slide {
				top: 0;
				left: 50%;
			}

			body[data-speaker-layout=&#34;wide&#34;] #speaker-controls {
				top: 45%;
				left: 0;
				width: 100%;
				height: 50%;
				font-size: 1.25em;
			}

			/* Speaker layout: Tall */
			body[data-speaker-layout=&#34;tall&#34;] #current-slide,
			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				width: 45%;
				height: 50%;
				padding: 6px;
			}

			body[data-speaker-layout=&#34;tall&#34;] #current-slide {
				top: 0;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #upcoming-slide {
				top: 50%;
				left: 0;
			}

			body[data-speaker-layout=&#34;tall&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 45%;
				width: 55%;
				height: 100%;
				font-size: 1.25em;
			}

			/* Speaker layout: Notes only */
			body[data-speaker-layout=&#34;notes-only&#34;] #current-slide,
			body[data-speaker-layout=&#34;notes-only&#34;] #upcoming-slide {
				display: none;
			}

			body[data-speaker-layout=&#34;notes-only&#34;] #speaker-controls {
				padding-top: 40px;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				font-size: 1.25em;
			}

			@media screen and (max-width: 1080px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 16px;
				}
			}

			@media screen and (max-width: 900px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 14px;
				}
			}

			@media screen and (max-width: 800px) {
				body[data-speaker-layout=&#34;default&#34;] #speaker-controls {
					font-size: 12px;
				}
			}

		&lt;/style&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div id=&#34;connection-status&#34;&gt;Loading speaker view...&lt;/div&gt;

		&lt;div id=&#34;current-slide&#34;&gt;&lt;/div&gt;
		&lt;div id=&#34;upcoming-slide&#34;&gt;&lt;span class=&#34;overlay-element label&#34;&gt;Upcoming&lt;/span&gt;&lt;/div&gt;
		&lt;div id=&#34;speaker-controls&#34;&gt;
			&lt;div class=&#34;speaker-controls-time&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Time &lt;span class=&#34;reset-button&#34;&gt;Click to Reset&lt;/span&gt;&lt;/h4&gt;
				&lt;div class=&#34;clock&#34;&gt;
					&lt;span class=&#34;clock-value&#34;&gt;0:00 AM&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;timer&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
				&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;

				&lt;h4 class=&#34;label pacing-title&#34; style=&#34;display: none&#34;&gt;Pacing ‚Äì Time to finish current slide&lt;/h4&gt;
				&lt;div class=&#34;pacing&#34; style=&#34;display: none&#34;&gt;
					&lt;span class=&#34;hours-value&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;minutes-value&#34;&gt;:00&lt;/span&gt;&lt;span class=&#34;seconds-value&#34;&gt;:00&lt;/span&gt;
				&lt;/div&gt;
			&lt;/div&gt;

			&lt;div class=&#34;speaker-controls-notes hidden&#34;&gt;
				&lt;h4 class=&#34;label&#34;&gt;Notes&lt;/h4&gt;
				&lt;div class=&#34;value&#34;&gt;&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;div id=&#34;speaker-layout&#34; class=&#34;overlay-element interactive&#34;&gt;
			&lt;span class=&#34;speaker-layout-label&#34;&gt;&lt;/span&gt;
			&lt;select class=&#34;speaker-layout-dropdown&#34;&gt;&lt;/select&gt;
		&lt;/div&gt;

		&lt;script&gt;

			(function() {

				var notes,
					notesValue,
					currentState,
					currentSlide,
					upcomingSlide,
					layoutLabel,
					layoutDropdown,
					pendingCalls = {},
					lastRevealApiCallId = 0,
					connected = false,
					whitelistedWindows = [window.opener];

				var SPEAKER_LAYOUTS = {
					&#39;default&#39;: &#39;Default&#39;,
					&#39;wide&#39;: &#39;Wide&#39;,
					&#39;tall&#39;: &#39;Tall&#39;,
					&#39;notes-only&#39;: &#39;Notes only&#39;
				};

				setupLayout();

				var connectionStatus = document.querySelector( &#39;#connection-status&#39; );
				var connectionTimeout = setTimeout( function() {
					connectionStatus.innerHTML = &#39;Error connecting to main window.&lt;br&gt;Please try closing and reopening the speaker view.&#39;;
				}, 5000 );
;
				window.addEventListener( &#39;message&#39;, function( event ) {

					// Validate the origin of this message to prevent XSS
					if( window.location.origin !== event.origin &amp;&amp; whitelistedWindows.indexOf( event.source ) === -1 ) {
						return;
					}

					clearTimeout( connectionTimeout );
					connectionStatus.style.display = &#39;none&#39;;

					var data = JSON.parse( event.data );

					// The overview mode is only useful to the reveal.js instance
					// where navigation occurs so we don&#39;t sync it
					if( data.state ) delete data.state.overview;

					// Messages sent by the notes plugin inside of the main window
					if( data &amp;&amp; data.namespace === &#39;reveal-notes&#39; ) {
						if( data.type === &#39;connect&#39; ) {
							handleConnectMessage( data );
						}
						else if( data.type === &#39;state&#39; ) {
							handleStateMessage( data );
						}
						else if( data.type === &#39;return&#39; ) {
							pendingCalls[data.callId](data.result);
							delete pendingCalls[data.callId];
						}
					}
					// Messages sent by the reveal.js inside of the current slide preview
					else if( data &amp;&amp; data.namespace === &#39;reveal&#39; ) {
						if( /ready/.test( data.eventName ) ) {
							// Send a message back to notify that the handshake is complete
							window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;connected&#39;} ), &#39;*&#39; );
						}
						else if( /slidechanged|fragmentshown|fragmenthidden|paused|resumed/.test( data.eventName ) &amp;&amp; currentState !== JSON.stringify( data.state ) ) {

							dispatchStateToMainWindow( data.state );

						}
					}

				} );

				/**
				 * Updates the presentation in the main window to match the state
				 * of the presentation in the notes window.
				 */
				const dispatchStateToMainWindow = debounce(( state ) =&gt; {
					window.opener.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ state ]} ), &#39;*&#39; );
				}, 500);

				/**
				 * Asynchronously calls the Reveal.js API of the main frame.
				 */
				function callRevealApi( methodName, methodArguments, callback ) {

					var callId = ++lastRevealApiCallId;
					pendingCalls[callId] = callback;
					window.opener.postMessage( JSON.stringify( {
						namespace: &#39;reveal-notes&#39;,
						type: &#39;call&#39;,
						callId: callId,
						methodName: methodName,
						arguments: methodArguments
					} ), &#39;*&#39; );

				}

				/**
				 * Called when the main window is trying to establish a
				 * connection.
				 */
				function handleConnectMessage( data ) {

					if( connected === false ) {
						connected = true;

						setupIframes( data );
						setupKeyboard();
						setupNotes();
						setupTimer();
						setupHeartbeat();
					}

				}

				/**
				 * Called when the main window sends an updated state.
				 */
				function handleStateMessage( data ) {

					// Store the most recently set state to avoid circular loops
					// applying the same state
					currentState = JSON.stringify( data.state );

					// No need for updating the notes in case of fragment changes
					if ( data.notes ) {
						notes.classList.remove( &#39;hidden&#39; );
						notesValue.style.whiteSpace = data.whitespace;
						if( data.markdown ) {
							notesValue.innerHTML = marked( data.notes );
						}
						else {
							notesValue.innerHTML = data.notes;
						}
					}
					else {
						notes.classList.add( &#39;hidden&#39; );
					}

					// Update the note slides
					currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;setState&#39;, args: [ data.state ] }), &#39;*&#39; );
					upcomingSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;next&#39; }), &#39;*&#39; );

				}

				// Limit to max one state update per X ms
				handleStateMessage = debounce( handleStateMessage, 200 );

				/**
				 * Forward keyboard events to the current slide window.
				 * This enables keyboard events to work even if focus
				 * isn&#39;t set on the current slide iframe.
				 *
				 * Block F5 default handling, it reloads and disconnects
				 * the speaker notes window.
				 */
				function setupKeyboard() {

					document.addEventListener( &#39;keydown&#39;, function( event ) {
						if( event.keyCode === 116 || ( event.metaKey &amp;&amp; event.keyCode === 82 ) ) {
							event.preventDefault();
							return false;
						}
						currentSlide.contentWindow.postMessage( JSON.stringify({ method: &#39;triggerKey&#39;, args: [ event.keyCode ] }), &#39;*&#39; );
					} );

				}

				/**
				 * Creates the preview iframes.
				 */
				function setupIframes( data ) {

					var params = [
						&#39;receiver&#39;,
						&#39;progress=false&#39;,
						&#39;history=false&#39;,
						&#39;transition=none&#39;,
						&#39;autoSlide=0&#39;,
						&#39;backgroundTransition=none&#39;
					].join( &#39;&amp;&#39; );

					var urlSeparator = /\?/.test(data.url) ? &#39;&amp;&#39; : &#39;?&#39;;
					var hash = &#39;#/&#39; + data.state.indexh + &#39;/&#39; + data.state.indexv;
					var currentURL = data.url + urlSeparator + params + &#39;&amp;postMessageEvents=true&#39; + hash;
					var upcomingURL = data.url + urlSeparator + params + &#39;&amp;controls=false&#39; + hash;

					currentSlide = document.createElement( &#39;iframe&#39; );
					currentSlide.setAttribute( &#39;width&#39;, 1280 );
					currentSlide.setAttribute( &#39;height&#39;, 1024 );
					currentSlide.setAttribute( &#39;src&#39;, currentURL );
					document.querySelector( &#39;#current-slide&#39; ).appendChild( currentSlide );

					upcomingSlide = document.createElement( &#39;iframe&#39; );
					upcomingSlide.setAttribute( &#39;width&#39;, 640 );
					upcomingSlide.setAttribute( &#39;height&#39;, 512 );
					upcomingSlide.setAttribute( &#39;src&#39;, upcomingURL );
					document.querySelector( &#39;#upcoming-slide&#39; ).appendChild( upcomingSlide );

					whitelistedWindows.push( currentSlide.contentWindow, upcomingSlide.contentWindow );

				}

				/**
				 * Setup the notes UI.
				 */
				function setupNotes() {

					notes = document.querySelector( &#39;.speaker-controls-notes&#39; );
					notesValue = document.querySelector( &#39;.speaker-controls-notes .value&#39; );

				}

				/**
				 * We send out a heartbeat at all times to ensure we can
				 * reconnect with the main presentation window after reloads.
				 */
				function setupHeartbeat() {

					setInterval( () =&gt; {
						window.opener.postMessage( JSON.stringify({ namespace: &#39;reveal-notes&#39;, type: &#39;heartbeat&#39;} ), &#39;*&#39; );
					}, 1000 );

				}

				function getTimings( callback ) {

					callRevealApi( &#39;getSlidesAttributes&#39;, [], function ( slideAttributes ) {
						callRevealApi( &#39;getConfig&#39;, [], function ( config ) {
							var totalTime = config.totalTime;
							var minTimePerSlide = config.minimumTimePerSlide || 0;
							var defaultTiming = config.defaultTiming;
							if ((defaultTiming == null) &amp;&amp; (totalTime == null)) {
								callback(null);
								return;
							}
							// Setting totalTime overrides defaultTiming
							if (totalTime) {
								defaultTiming = 0;
							}
							var timings = [];
							for ( var i in slideAttributes ) {
								var slide = slideAttributes[ i ];
								var timing = defaultTiming;
								if( slide.hasOwnProperty( &#39;data-timing&#39; )) {
									var t = slide[ &#39;data-timing&#39; ];
									timing = parseInt(t);
									if( isNaN(timing) ) {
										console.warn(&#34;Could not parse timing &#39;&#34; + t + &#34;&#39; of slide &#34; + i + &#34;; using default of &#34; + defaultTiming);
										timing = defaultTiming;
									}
								}
								timings.push(timing);
							}
							if ( totalTime ) {
								// After we&#39;ve allocated time to individual slides, we summarize it and
								// subtract it from the total time
								var remainingTime = totalTime - timings.reduce( function(a, b) { return a + b; }, 0 );
								// The remaining time is divided by the number of slides that have 0 seconds
								// allocated at the moment, giving the average time-per-slide on the remaining slides
								var remainingSlides = (timings.filter( function(x) { return x == 0 }) ).length
								var timePerSlide = Math.round( remainingTime / remainingSlides, 0 )
								// And now we replace every zero-value timing with that average
								timings = timings.map( function(x) { return (x==0 ? timePerSlide : x) } );
							}
							var slidesUnderMinimum = timings.filter( function(x) { return (x &lt; minTimePerSlide) } ).length
							if ( slidesUnderMinimum ) {
								message = &#34;The pacing time for &#34; + slidesUnderMinimum + &#34; slide(s) is under the configured minimum of &#34; + minTimePerSlide + &#34; seconds. Check the data-timing attribute on individual slides, or consider increasing the totalTime or minimumTimePerSlide configuration options (or removing some slides).&#34;;
								alert(message);
							}
							callback( timings );
						} );
					} );

				}

				/**
				 * Return the number of seconds allocated for presenting
				 * all slides up to and including this one.
				 */
				function getTimeAllocated( timings, callback ) {

					callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
						var allocated = 0;
						for (var i in timings.slice(0, currentSlide + 1)) {
							allocated += timings[i];
						}
						callback( allocated );
					} );

				}

				/**
				 * Create the timer and clock and start updating them
				 * at an interval.
				 */
				function setupTimer() {

					var start = new Date(),
					timeEl = document.querySelector( &#39;.speaker-controls-time&#39; ),
					clockEl = timeEl.querySelector( &#39;.clock-value&#39; ),
					hoursEl = timeEl.querySelector( &#39;.hours-value&#39; ),
					minutesEl = timeEl.querySelector( &#39;.minutes-value&#39; ),
					secondsEl = timeEl.querySelector( &#39;.seconds-value&#39; ),
					pacingTitleEl = timeEl.querySelector( &#39;.pacing-title&#39; ),
					pacingEl = timeEl.querySelector( &#39;.pacing&#39; ),
					pacingHoursEl = pacingEl.querySelector( &#39;.hours-value&#39; ),
					pacingMinutesEl = pacingEl.querySelector( &#39;.minutes-value&#39; ),
					pacingSecondsEl = pacingEl.querySelector( &#39;.seconds-value&#39; );

					var timings = null;
					getTimings( function ( _timings ) {

						timings = _timings;
						if (_timings !== null) {
							pacingTitleEl.style.removeProperty(&#39;display&#39;);
							pacingEl.style.removeProperty(&#39;display&#39;);
						}

						// Update once directly
						_updateTimer();

						// Then update every second
						setInterval( _updateTimer, 1000 );

					} );


					function _resetTimer() {

						if (timings == null) {
							start = new Date();
							_updateTimer();
						}
						else {
							// Reset timer to beginning of current slide
							getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
								var slideEndTiming = slideEndTimingSeconds * 1000;
								callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
									var currentSlideTiming = timings[currentSlide] * 1000;
									var previousSlidesTiming = slideEndTiming - currentSlideTiming;
									var now = new Date();
									start = new Date(now.getTime() - previousSlidesTiming);
									_updateTimer();
								} );
							} );
						}

					}

					timeEl.addEventListener( &#39;click&#39;, function() {
						_resetTimer();
						return false;
					} );

					function _displayTime( hrEl, minEl, secEl, time) {

						var sign = Math.sign(time) == -1 ? &#34;-&#34; : &#34;&#34;;
						time = Math.abs(Math.round(time / 1000));
						var seconds = time % 60;
						var minutes = Math.floor( time / 60 ) % 60 ;
						var hours = Math.floor( time / ( 60 * 60 )) ;
						hrEl.innerHTML = sign + zeroPadInteger( hours );
						if (hours == 0) {
							hrEl.classList.add( &#39;mute&#39; );
						}
						else {
							hrEl.classList.remove( &#39;mute&#39; );
						}
						minEl.innerHTML = &#39;:&#39; + zeroPadInteger( minutes );
						if (hours == 0 &amp;&amp; minutes == 0) {
							minEl.classList.add( &#39;mute&#39; );
						}
						else {
							minEl.classList.remove( &#39;mute&#39; );
						}
						secEl.innerHTML = &#39;:&#39; + zeroPadInteger( seconds );
					}

					function _updateTimer() {

						var diff, hours, minutes, seconds,
						now = new Date();

						diff = now.getTime() - start.getTime();

						clockEl.innerHTML = now.toLocaleTimeString( &#39;en-US&#39;, { hour12: true, hour: &#39;2-digit&#39;, minute:&#39;2-digit&#39; } );
						_displayTime( hoursEl, minutesEl, secondsEl, diff );
						if (timings !== null) {
							_updatePacing(diff);
						}

					}

					function _updatePacing(diff) {

						getTimeAllocated( timings, function ( slideEndTimingSeconds ) {
							var slideEndTiming = slideEndTimingSeconds * 1000;

							callRevealApi( &#39;getSlidePastCount&#39;, [], function ( currentSlide ) {
								var currentSlideTiming = timings[currentSlide] * 1000;
								var timeLeftCurrentSlide = slideEndTiming - diff;
								if (timeLeftCurrentSlide &lt; 0) {
									pacingEl.className = &#39;pacing behind&#39;;
								}
								else if (timeLeftCurrentSlide &lt; currentSlideTiming) {
									pacingEl.className = &#39;pacing on-track&#39;;
								}
								else {
									pacingEl.className = &#39;pacing ahead&#39;;
								}
								_displayTime( pacingHoursEl, pacingMinutesEl, pacingSecondsEl, timeLeftCurrentSlide );
							} );
						} );
					}

				}

				/**
				 * Sets up the speaker view layout and layout selector.
				 */
				function setupLayout() {

					layoutDropdown = document.querySelector( &#39;.speaker-layout-dropdown&#39; );
					layoutLabel = document.querySelector( &#39;.speaker-layout-label&#39; );

					// Render the list of available layouts
					for( var id in SPEAKER_LAYOUTS ) {
						var option = document.createElement( &#39;option&#39; );
						option.setAttribute( &#39;value&#39;, id );
						option.textContent = SPEAKER_LAYOUTS[ id ];
						layoutDropdown.appendChild( option );
					}

					// Monitor the dropdown for changes
					layoutDropdown.addEventListener( &#39;change&#39;, function( event ) {

						setLayout( layoutDropdown.value );

					}, false );

					// Restore any currently persisted layout
					setLayout( getLayout() );

				}

				/**
				 * Sets a new speaker view layout. The layout is persisted
				 * in local storage.
				 */
				function setLayout( value ) {

					var title = SPEAKER_LAYOUTS[ value ];

					layoutLabel.innerHTML = &#39;Layout&#39; + ( title ? ( &#39;: &#39; + title ) : &#39;&#39; );
					layoutDropdown.value = value;

					document.body.setAttribute( &#39;data-speaker-layout&#39;, value );

					// Persist locally
					if( supportsLocalStorage() ) {
						window.localStorage.setItem( &#39;reveal-speaker-layout&#39;, value );
					}

				}

				/**
				 * Returns the ID of the most recently set speaker layout
				 * or our default layout if none has been set.
				 */
				function getLayout() {

					if( supportsLocalStorage() ) {
						var layout = window.localStorage.getItem( &#39;reveal-speaker-layout&#39; );
						if( layout ) {
							return layout;
						}
					}

					// Default to the first record in the layouts hash
					for( var id in SPEAKER_LAYOUTS ) {
						return id;
					}

				}

				function supportsLocalStorage() {

					try {
						localStorage.setItem(&#39;test&#39;, &#39;test&#39;);
						localStorage.removeItem(&#39;test&#39;);
						return true;
					}
					catch( e ) {
						return false;
					}

				}

				function zeroPadInteger( num ) {

					var str = &#39;00&#39; + parseInt( num );
					return str.substring( str.length - 2 );

				}

				/**
				 * Limits the frequency at which a function can be called.
				 */
				function debounce( fn, ms ) {

					var lastTime = 0,
						timeout;

					return function() {

						var args = arguments;
						var context = this;

						clearTimeout( timeout );

						var timeSinceLastCall = Date.now() - lastTime;
						if( timeSinceLastCall &gt; ms ) {
							fn.apply( context, args );
							lastTime = Date.now();
						}
						else {
							timeout = setTimeout( function() {
								fn.apply( context, args );
								lastTime = Date.now();
							}, ms - timeSinceLastCall );
						}

					}

				}

			})();

		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://bendeivide.github.io/slides/semanact/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/semanact/index_files/libs/revealjs/plugin/reveal-chalkboard/readme/</guid>
      <description>&lt;h1 id=&#34;chalkboard&#34;&gt;Chalkboard&lt;/h1&gt;
&lt;p&gt;With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can make notes directly on the slides, e.g. to comment on certain aspects,&lt;/li&gt;
&lt;li&gt;you can open a chalkboard or whiteboard on which you can make notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.&lt;/p&gt;
&lt;p&gt;The plugin records all drawings made so that they can be play backed using the &lt;code&gt;autoSlide&lt;/code&gt; feature or the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the live demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The chalkboard effect is based on &lt;a href=&#34;https://github.com/mmoustafa/Chalkboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chalkboard&lt;/a&gt; by Mohamed Moustafa.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Copy the file &lt;code&gt;plugin.js&lt;/code&gt; and the  &lt;code&gt;img&lt;/code&gt; directory into the plugin folder of your reveal.js presentation, i.e. &lt;code&gt;plugin/chalkboard&lt;/code&gt; and load the plugin as shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;plugin/chalkboard/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;plugin/customcontrols/plugin.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
    Reveal.initialize({
        // ...
        plugins: [ RevealChalkboard, RevealCustomControls ],
        // ...
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following stylesheet&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/chalkboard/style.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;plugin/customcontrols/style.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;has to be included to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;p&gt;In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that &lt;code&gt;font-awesome&lt;/code&gt; is available. The easiest way is to include&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the &lt;code&gt;head&lt;/code&gt; section of you HTML-file.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;h3 id=&#34;mouse-or-touch&#34;&gt;Mouse or touch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)&lt;/li&gt;
&lt;li&gt;Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)&lt;/li&gt;
&lt;li&gt;Click the left mouse button and drag to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Click the right mouse button and drag to wipe away previous drawings&lt;/li&gt;
&lt;li&gt;Touch and move to write on notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Touch and hold for half a second, then move to wipe away previous drawings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Press the &amp;lsquo;BACKSPACE&amp;rsquo; key to delete all chalkboard drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;DEL&amp;rsquo; key to clear the notes canvas or chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;c&amp;rsquo; key to toggle the notes canvas&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;b&amp;rsquo; key to toggle the chalkboard&lt;/li&gt;
&lt;li&gt;Press the &amp;rsquo;d&amp;rsquo; key to download drawings&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;x&amp;rsquo; key to cycle colors forward&lt;/li&gt;
&lt;li&gt;Press the &amp;lsquo;y&amp;rsquo; key to cycle colors backward&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;playback&#34;&gt;Playback&lt;/h2&gt;
&lt;p&gt;If the &lt;code&gt;autoSlide&lt;/code&gt; feature is set or if the &lt;code&gt;audio-slideshow&lt;/code&gt; plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.&lt;/p&gt;
&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;
&lt;p&gt;The plugin supports multiplexing via the &lt;a href=&#34;https://github.com/reveal/multiplex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;multiplex&lt;/code&gt; plugin&lt;/a&gt; or the &lt;a href=&#34;https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;seminar&lt;/code&gt; plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-export&#34;&gt;PDF-Export&lt;/h2&gt;
&lt;p&gt;If the slideshow is opened in &lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;print mode&lt;/a&gt;, the chalkboard drawings in the session storage (see &lt;code&gt;storage&lt;/code&gt; option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see &lt;code&gt;src&lt;/code&gt; option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The plugin has several configuration options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boardmarkerWidth&lt;/code&gt;: an integer, the drawing width of the boardmarker; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkWidth&lt;/code&gt;: an integer, the drawing width of the chalk; larger values draw thicker lines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalkEffect&lt;/code&gt;: a float in the range &lt;code&gt;[0.0, 1.0]&lt;/code&gt;, the intesity of the chalk effect on the chalk board. Full effect (default) &lt;code&gt;1.0&lt;/code&gt;, no effect &lt;code&gt;0.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt;: Optional variable name for session storage of drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: Optional filename for pre-recorded drawings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: Configuation option allowing to prevent changes to existing drawings. If set to &lt;code&gt;true&lt;/code&gt; no changes can be made, if set to false &lt;code&gt;false&lt;/code&gt; changes can be made, if unset or set to &lt;code&gt;undefined&lt;/code&gt; no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the &amp;lsquo;DEL&amp;rsquo; key (i.e. by using the &lt;code&gt;RevealChalkboard.clear()&lt;/code&gt; function).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transition&lt;/code&gt;: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: Can be set to either &lt;code&gt;&amp;quot;chalkboard&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;whiteboard&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid&lt;/code&gt;: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. &lt;code&gt;{ color: &#39;rgb(127,127,255,0.1)&#39;, distance: 40, width: 2}&lt;/code&gt;. Alternatively, the grid can be removed by setting the value to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eraser&lt;/code&gt;: An image path and radius for the eraser.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boardmarkers&lt;/code&gt;: A list of boardmarkers with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chalks&lt;/code&gt;: A list of chalks with given color and cursor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rememberColor&lt;/code&gt;: Whether to remember the last selected color for the slide canvas or the board.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the configurations are optional and the default values shown below are used if the options are not provided.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Reveal.initialize({
	// ...
    chalkboard: {
        boardmarkerWidth: 3,
        chalkWidth: 7,
        chalkEffect: 1.0,
        storage: null,
        src: null,
        readOnly: undefined,
        transition: 800,
        theme: &amp;quot;chalkboard&amp;quot;,
        background: [ &#39;rgba(127,127,127,.1)&#39; , path + &#39;img/blackboard.png&#39; ],
        grid: { color: &#39;rgb(50,50,10,0.5)&#39;, distance: 80, width: 2},
        eraser: { src: path + &#39;img/sponge.png&#39;, radius: 20},
        boardmarkers : [
                { color: &#39;rgba(100,100,100,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-black.png), auto&#39;},
                { color: &#39;rgba(30,144,255, 1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-blue.png), auto&#39;},
                { color: &#39;rgba(220,20,60,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-red.png), auto&#39;},
                { color: &#39;rgba(50,205,50,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-green.png), auto&#39;},
                { color: &#39;rgba(255,140,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-orange.png), auto&#39;},
                { color: &#39;rgba(150,0,20150,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,1)&#39;, cursor: &#39;url(&#39; + path + &#39;img/boardmarker-yellow.png), auto&#39;}
        ],
        chalks: [
                { color: &#39;rgba(255,255,255,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-white.png), auto&#39;},
                { color: &#39;rgba(96, 154, 244, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-blue.png), auto&#39;},
                { color: &#39;rgba(237, 20, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-red.png), auto&#39;},
                { color: &#39;rgba(20, 237, 28, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-green.png), auto&#39;},
                { color: &#39;rgba(220, 133, 41, 0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-orange.png), auto&#39;},
                { color: &#39;rgba(220,0,220,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-purple.png), auto&#39;},
                { color: &#39;rgba(255,220,0,0.5)&#39;, cursor: &#39;url(&#39; + path + &#39;img/chalk-yellow.png), auto&#39;}
        ]
    },
    customcontrols: {
  		controls: [
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle chalkboard (B)&#39;,
  			  action: &#39;RevealChalkboard.toggleChalkboard();&#39;
  			},
  			{ icon: &#39;&amp;lt;i class=&amp;quot;fa fa-pen&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&#39;,
  			  title: &#39;Toggle notes canvas (C)&#39;,
  			  action: &#39;RevealChalkboard.toggleNotesCanvas();&#39;
  			}
  		]
    },
    // ...

});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;MIT licensed&lt;/p&gt;
&lt;p&gt;Copyright (C) 2021 Asvin Goel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ambiente R  al√©m das an√°lises estat√≠sticas</title>
      <link>http://bendeivide.github.io/slides/ramb-alem-das-analises-estat/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/ramb-alem-das-analises-estat/</guid>
      <description>
&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;curso_verao.png&#34;
  &gt;

&lt;h1 id=&#34;ambiente-r--al√©m-das-an√°lises-estat√≠sticas&#34;&gt;Ambiente R  al√©m das an√°lises estat√≠sticas&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ben D√™ivide&lt;/a&gt; | &lt;a href=&#34;https://www.ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;selo-dc&#34;&gt;Selo DC&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/dc/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/ramb-alem-das-analises-estat/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_57f4d021c573f1cdb22f5303fccfacd9.webp 400w,
               /slides/ramb-alem-das-analises-estat/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_e3124639f3c96b16d12396d9954194c3.webp 760w,
               /slides/ramb-alem-das-analises-estat/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/ramb-alem-das-analises-estat/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_57f4d021c573f1cdb22f5303fccfacd9.webp&#34;
               width=&#34;385&#34;
               height=&#34;406&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;acesso-a-todo-material&#34;&gt;Acesso a todo material&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/bendeivide/palestras/tree/master/ramb-alem-das-analises-estatisticas&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/ramb-alem-das-analises-estat/folder_hu84ae0d30d5154d1e73aaf9945c348d03_20466_620e1c48e451842e2f4135b7117821ad.webp 400w,
               /slides/ramb-alem-das-analises-estat/folder_hu84ae0d30d5154d1e73aaf9945c348d03_20466_81e4eb609876936d8a5e708f395fd9b9.webp 760w,
               /slides/ramb-alem-das-analises-estat/folder_hu84ae0d30d5154d1e73aaf9945c348d03_20466_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/ramb-alem-das-analises-estat/folder_hu84ae0d30d5154d1e73aaf9945c348d03_20466_620e1c48e451842e2f4135b7117821ad.webp&#34;
               width=&#34;607&#34;
               height=&#34;471&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;nota&#34;&gt;Nota&lt;/h2&gt;
&lt;p&gt;Essa apresenta√ß√£o ter√° um vi√©s, pois apesar do poder que a ambiente &lt;code&gt;R&lt;/code&gt; tem, muitos dos exemplos estar√£o dentro das minhas necessidades/limita√ß√µes pessoais e profissionais. Portanto, um resultado do que experimento e venho experienciando!&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;hist√≥rico-sobre-o-ambiente-r&#34;&gt;Hist√≥rico sobre o ambiente R&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Criadores Ross Ihaka e por Robert Gentleman (Nova Zel√¢ndia), 1993&lt;/li&gt;
&lt;li&gt;Baseado na linguagem S, criado por John Chambers e colaboradores (Primeira vers√£o 1976)&lt;/li&gt;
&lt;li&gt;Atualmente √© mantida por colaboradores volunt√°rios em todo o mundo&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;hist√≥rico-sobre-o-ambiente-r-1&#34;&gt;Hist√≥rico sobre o ambiente R&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Linguagem pode ser orientada a objetos, C√≥digo aberto, funcional, metapragm√°tica, Licen√ßa GNU&lt;/li&gt;
&lt;li&gt;Reposit√≥rio &lt;a href=&#34;https://cran.r-project.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CRAN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Popularidade com o &lt;a href=&#34;https://rstudio.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RStudio&lt;/a&gt; (Joseph J. Allaire)&lt;/li&gt;
&lt;li&gt;Como instalar o R?&lt;/li&gt;
&lt;li&gt;Como instalar o RStudio?&lt;/li&gt;
&lt;li&gt;Como usar o R?&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;curso-r-n√≠vel-b√°sico&#34;&gt;Curso R (N√≠vel B√°sico)&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/cursor/nbasico/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;N√≠vel B√°sico&#34; srcset=&#34;
               /slides/ramb-alem-das-analises-estat/cursor-nb_hu8cbf2d1b9b5244f1524037e4474c538e_69900_4b297cb8f0e33e442ebf99b215388034.webp 400w,
               /slides/ramb-alem-das-analises-estat/cursor-nb_hu8cbf2d1b9b5244f1524037e4474c538e_69900_f138ba75b6cb4eb62d1ecea4bcae0172.webp 760w,
               /slides/ramb-alem-das-analises-estat/cursor-nb_hu8cbf2d1b9b5244f1524037e4474c538e_69900_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/ramb-alem-das-analises-estat/cursor-nb_hu8cbf2d1b9b5244f1524037e4474c538e_69900_4b297cb8f0e33e442ebf99b215388034.webp&#34;
               width=&#34;593&#34;
               height=&#34;579&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;curso-r-ni&#34;&gt;Curso R (NI)&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/post/cursorni2/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;N√≠vel Intermedi√°rio&#34; srcset=&#34;
               /slides/ramb-alem-das-analises-estat/cursor-ni_hua909e2f7dc5b7deac580280a2231351e_70067_01ee0fc5dca62b5827c4744b677401e2.webp 400w,
               /slides/ramb-alem-das-analises-estat/cursor-ni_hua909e2f7dc5b7deac580280a2231351e_70067_2be287ff636a8ea73ce5b5354154f128.webp 760w,
               /slides/ramb-alem-das-analises-estat/cursor-ni_hua909e2f7dc5b7deac580280a2231351e_70067_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/ramb-alem-das-analises-estat/cursor-ni_hua909e2f7dc5b7deac580280a2231351e_70067_01ee0fc5dca62b5827c4744b677401e2.webp&#34;
               width=&#34;593&#34;
               height=&#34;579&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;rapidinhas-do-r&#34;&gt;Rapidinhas do R&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/project/rapidinhasr/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/ramb-alem-das-analises-estat/rapidinhasr_huf4c584a0ea803c0b4fded9f2abc27f53_510973_df46483f285db6db6d908bc356b06e75.webp 400w,
               /slides/ramb-alem-das-analises-estat/rapidinhasr_huf4c584a0ea803c0b4fded9f2abc27f53_510973_db647e21fc70a6855b86924338dcb47a.webp 760w,
               /slides/ramb-alem-das-analises-estat/rapidinhasr_huf4c584a0ea803c0b4fded9f2abc27f53_510973_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/ramb-alem-das-analises-estat/rapidinhasr_huf4c584a0ea803c0b4fded9f2abc27f53_510973_df46483f285db6db6d908bc356b06e75.webp&#34;
               width=&#34;760&#34;
               height=&#34;374&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;cole√ß√£o-estudando-o-ambiente-r&#34;&gt;Cole√ß√£o Estudando o Ambiente R&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/book-eambr01&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/ramb-alem-das-analises-estat/hardcover01_hu6fd2f9a5af792bfbcb973270ac465a56_130113_f7ee7ac1bcb38885ed43ff6283f91281.webp 400w,
               /slides/ramb-alem-das-analises-estat/hardcover01_hu6fd2f9a5af792bfbcb973270ac465a56_130113_f8257eabb142099dedb529c07f030721.webp 760w,
               /slides/ramb-alem-das-analises-estat/hardcover01_hu6fd2f9a5af792bfbcb973270ac465a56_130113_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/ramb-alem-das-analises-estat/hardcover01_hu6fd2f9a5af792bfbcb973270ac465a56_130113_f7ee7ac1bcb38885ed43ff6283f91281.webp&#34;
               width=&#34;248&#34;
               height=&#34;351&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;
















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/ramb-alem-das-analises-estat/hardcover02_hu6fd2f9a5af792bfbcb973270ac465a56_140122_45f619095959daf2295f20cedc96666e.webp 400w,
               /slides/ramb-alem-das-analises-estat/hardcover02_hu6fd2f9a5af792bfbcb973270ac465a56_140122_bf2cc9d0d398d7bc6c1078f0736f1b29.webp 760w,
               /slides/ramb-alem-das-analises-estat/hardcover02_hu6fd2f9a5af792bfbcb973270ac465a56_140122_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/ramb-alem-das-analises-estat/hardcover02_hu6fd2f9a5af792bfbcb973270ac465a56_140122_45f619095959daf2295f20cedc96666e.webp&#34;
               width=&#34;248&#34;
               height=&#34;351&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;

















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/ramb-alem-das-analises-estat/hardcover03_hu6fd2f9a5af792bfbcb973270ac465a56_132421_5d2480d8e0e7c78bda916b4e31c58e8b.webp 400w,
               /slides/ramb-alem-das-analises-estat/hardcover03_hu6fd2f9a5af792bfbcb973270ac465a56_132421_2a3fcd56ea738f0fa720cfa8ecc1caf6.webp 760w,
               /slides/ramb-alem-das-analises-estat/hardcover03_hu6fd2f9a5af792bfbcb973270ac465a56_132421_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/ramb-alem-das-analises-estat/hardcover03_hu6fd2f9a5af792bfbcb973270ac465a56_132421_5d2480d8e0e7c78bda916b4e31c58e8b.webp&#34;
               width=&#34;248&#34;
               height=&#34;351&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;ferramentas-do-r-al√©m-do-fim-estat√≠stico&#34;&gt;Ferramentas do R al√©m do fim Estat√≠stico&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;An√°lises Estat√≠sticas ‚ùå&lt;/li&gt;
&lt;li&gt;Cria√ß√£o e divulga√ß√£o de materiais cient√≠ficos:
&lt;ul&gt;
&lt;li&gt;Materiais Din√¢micos (HTML, JavaScript, CSS, &lt;code&gt;\(\LaTeX\)&lt;/code&gt;, &lt;code&gt;R&lt;/code&gt;, PDF) ‚úîÔ∏è&lt;/li&gt;
&lt;li&gt;Materiais estat√≠sticos (HTML, PDF, EPUB, WORD, SLIDES) ‚úîÔ∏è&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;ferramentas-do-r-al√©m-do-fim-estat√≠stico-1&#34;&gt;Ferramentas do R al√©m do fim Estat√≠stico&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Desenvolvimento de pacotes  ‚úîÔ∏è
&lt;ul&gt;
&lt;li&gt;Cria√ß√£o de GUIs para pacotes (Pacotes &lt;code&gt;tcltk&lt;/code&gt;, &lt;code&gt;GTK+&lt;/code&gt;, &lt;code&gt;shiny&lt;/code&gt;) ‚úîÔ∏è&lt;/li&gt;
&lt;li&gt;Documenta√ß√£o de pacotes (Vignettes, tutorial de pacote) ‚úîÔ∏è&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;ferramentas-do-r-al√©m-do-fim-estat√≠stico-2&#34;&gt;Ferramentas do R al√©m do fim Estat√≠stico&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Websites ‚úîÔ∏è&lt;/li&gt;
&lt;li&gt;Blogs ‚úîÔ∏è&lt;/li&gt;
&lt;li&gt;Postcards ‚úîÔ∏è&lt;/li&gt;
&lt;li&gt;Curr√≠culos ‚úîÔ∏è&lt;/li&gt;
&lt;li&gt;Dashboards ‚úîÔ∏è&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;o-que-ser√°-necess√°rio-para-usar-essas-ferramentas&#34;&gt;O que ser√° necess√°rio para usar essas ferramentas?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://youtu.be/Gei-gtBlMos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Instala√ß√£o do &lt;code&gt;R&lt;/code&gt;&lt;/a&gt; e &lt;a href=&#34;https://youtu.be/Gei-gtBlMos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RStudio/Pandoc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;No &lt;code&gt;R&lt;/code&gt; &lt;a href=&#34;https://youtu.be/YRSdoyfqp_g&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;instalar os pacotes&lt;/a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rmarkdown&lt;/code&gt; e &lt;code&gt;knitr&lt;/code&gt; - Pacotes mais importantes!&lt;/li&gt;
&lt;li&gt;&lt;code&gt;shiny&lt;/code&gt; - Pacote para cria√ß√£o de materiais din√¢micos&lt;/li&gt;
&lt;li&gt;&lt;code&gt;devtools&lt;/code&gt; e &lt;code&gt;usethis&lt;/code&gt; - kit de ferramentas&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rsconnect&lt;/code&gt; - Envio para &lt;em&gt;shinyapps.io&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;o-que-ser√°-necess√°rio-para-usar-essas-ferramentas-1&#34;&gt;O que ser√° necess√°rio para usar essas ferramentas?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;No &lt;code&gt;R&lt;/code&gt; &lt;a href=&#34;https://youtu.be/YRSdoyfqp_g&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;instalar os pacotes&lt;/a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tinytex&lt;/code&gt; - Latex (Caso voc√™ n√£o queira instalar o &lt;code&gt;\(\LaTeX\)&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rticles&lt;/code&gt; - Escrever Artigos&lt;/li&gt;
&lt;li&gt;&lt;code&gt;thesisdown&lt;/code&gt; - Escrever Teses&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bookdown&lt;/code&gt; - Escrever Livros (HTML, PDF, ePub, Kindle)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;o-que-ser√°-necess√°rio-para-usar-essas-ferramentas-2&#34;&gt;O que ser√° necess√°rio para usar essas ferramentas?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;No &lt;code&gt;R&lt;/code&gt; &lt;a href=&#34;https://youtu.be/YRSdoyfqp_g&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;instalar os pacotes&lt;/a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;blogdown&lt;/code&gt; e &lt;code&gt;distill&lt;/code&gt; - Cria√ß√£o de blogs, websites&lt;/li&gt;
&lt;li&gt;&lt;code&gt;postcards&lt;/code&gt; - Cria√ß√£o de um cart√£o de visita&lt;/li&gt;
&lt;li&gt;&lt;code&gt;learnr&lt;/code&gt; - Cria√ß√£o de tutoriais para aprender R&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pkgdown&lt;/code&gt;(Documenta√ß√£o para pacotes R) e &lt;code&gt;usethis&lt;/code&gt; ou &lt;code&gt;rmarkdown&lt;/code&gt;(Cria√ß√£o de Vignettes)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;o-que-ser√°-necess√°rio-para-usar-essas-ferramentas-3&#34;&gt;O que ser√° necess√°rio para usar essas ferramentas?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;No &lt;code&gt;R&lt;/code&gt; &lt;a href=&#34;https://youtu.be/YRSdoyfqp_g&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;instalar os pacotes&lt;/a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tcltk&lt;/code&gt; (Existem muitos outros pacotes!) - GUI&amp;rsquo;s&lt;/li&gt;
&lt;li&gt;&lt;code&gt;manipulate&lt;/code&gt; e &lt;code&gt;shiny&lt;/code&gt; - gr√°ficos interativos no RStudio e &lt;code&gt;scatterplot3d&lt;/code&gt; - Gr√°ficos em 3d&lt;/li&gt;
&lt;li&gt;&lt;code&gt;exams&lt;/code&gt; - Cria√ß√£o de Provas para disciplinas + MOODLE&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\(\LaTeX\)&lt;/code&gt;, MS Word (ou similares)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;r-markdown&#34;&gt;R Markdown&lt;/h2&gt;
&lt;p&gt;Tr√™s componentes b√°sicos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Metadados&lt;/strong&gt;: O corpo do documento&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Texto&lt;/strong&gt;: Assunto dissertado&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;C√≥digo&lt;/strong&gt;: Linguagem de interesse&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;LEMBRETE&lt;/strong&gt;: A extens√£o de um arquivo R Markdown √©: &lt;em&gt;.Rmd&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;material-de-apoio-ao-r-markdown&#34;&gt;Material de apoio ao R Markdown&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/cdec/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/ramb-alem-das-analises-estat/cdec_hu891cdc650656200eb98f514c61f934c4_17480_48bcaa36767fa23207c27b820274c199.webp 400w,
               /slides/ramb-alem-das-analises-estat/cdec_hu891cdc650656200eb98f514c61f934c4_17480_d7c00888fc771d6909d650596147e429.webp 760w,
               /slides/ramb-alem-das-analises-estat/cdec_hu891cdc650656200eb98f514c61f934c4_17480_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/ramb-alem-das-analises-estat/cdec_hu891cdc650656200eb98f514c61f934c4_17480_48bcaa36767fa23207c27b820274c199.webp&#34;
               width=&#34;226&#34;
               height=&#34;364&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;material-de-apoio-ao-r-markdown-1&#34;&gt;Material de apoio ao R Markdown&lt;/h2&gt;
&lt;!-- O b√°sico no R Markdown: --&gt;
&lt;!-- &lt;https://rmarkdown.rstudio.com/authoring_basics.html&gt; --&gt;
&lt;!-- A ideia dos pacotes nos documentos din√¢micos: --&gt;
&lt;!-- &lt;https://jreduardo.github.io/semanest-ufpr2017/&gt; --&gt;
&lt;p&gt;Livros do RMarkdown (Yihui Xie et al):
&lt;a href=&#34;https://bookdown.org/yihui/rmarkdown/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://bookdown.org/yihui/rmarkdown/&lt;/a&gt;
&lt;a href=&#34;https://bookdown.org/yihui/rmarkdown-cookbook/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://bookdown.org/yihui/rmarkdown-cookbook/&lt;/a&gt;&lt;/p&gt;
&lt;!-- &lt;http://cursos.leg.ufpr.br/prr/capDocDin.html&gt; --&gt;
&lt;p&gt;Livro em desenvolvimento&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/ramb-alem-das-analises-estat/hardcover04_huc27295f1b46b005b1578c94370131f01_106286_67a3b1d67ee6b6d3910f5de48fe6dcac.webp 400w,
               /slides/ramb-alem-das-analises-estat/hardcover04_huc27295f1b46b005b1578c94370131f01_106286_cfe30f79f7393e50b5ff6820365d5d22.webp 760w,
               /slides/ramb-alem-das-analises-estat/hardcover04_huc27295f1b46b005b1578c94370131f01_106286_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/ramb-alem-das-analises-estat/hardcover04_huc27295f1b46b005b1578c94370131f01_106286_67a3b1d67ee6b6d3910f5de48fe6dcac.webp&#34;
               width=&#34;174&#34;
               height=&#34;246&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;/media/open-book3.jpg&#34;
  &gt;

&lt;h2 id=&#34;r-markdown-documentos-estat√≠sticos&#34;&gt;R Markdown: Documentos estat√≠sticos&lt;/h2&gt;
&lt;p&gt;Aplica√ß√µes:&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/ramb-alem-das-analises-estat/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_0cd5d2661e8fc6dbb49dd886a81160b2.webp 400w,
               /slides/ramb-alem-das-analises-estat/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_5bd7ddd151c2f4da3fa79a2fa5972624.webp 760w,
               /slides/ramb-alem-das-analises-estat/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/ramb-alem-das-analises-estat/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_0cd5d2661e8fc6dbb49dd886a81160b2.webp&#34;
               width=&#34;170&#34;
               height=&#34;170&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;r-markdown-documentos-din√¢micos&#34;&gt;R Markdown: Documentos din√¢micos&lt;/h2&gt;
&lt;p&gt;Recursos do Shiny:&lt;/p&gt;
&lt;p&gt;Ref√™rencia:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mastering-shiny.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://mastering-shiny.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Exemplos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://shiny.estatistica.ccet.ufrn.br/DashboardDeputados/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Reembolso de deputados (UFRN)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://shiny.rstudio.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;Trends&lt;/em&gt; do Google (RStudio)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://shiny.rstudio.com/gallery/didacting-modeling.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Processo de modelagem did√°tica&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;r-markdown-documentos-din√¢micos-1&#34;&gt;R Markdown: Documentos din√¢micos&lt;/h2&gt;
&lt;p&gt;Aplica√ß√µes:&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/ramb-alem-das-analises-estat/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_0cd5d2661e8fc6dbb49dd886a81160b2.webp 400w,
               /slides/ramb-alem-das-analises-estat/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_5bd7ddd151c2f4da3fa79a2fa5972624.webp 760w,
               /slides/ramb-alem-das-analises-estat/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/ramb-alem-das-analises-estat/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_0cd5d2661e8fc6dbb49dd886a81160b2.webp&#34;
               width=&#34;170&#34;
               height=&#34;170&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;cria√ß√£o-de-websites&#34;&gt;Cria√ß√£o de &lt;em&gt;Websites&lt;/em&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Website (pacote &lt;a href=&#34;https://rstudio.github.io/distill/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;distill&lt;/code&gt;&lt;/a&gt;): &lt;a href=&#34;https://youtu.be/FbTLrfYWQQw&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Rapidinhas do R&lt;/a&gt;, ex. &lt;a href=&#34;https://bendeivide.github.io/cursor/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Website via &lt;a href=&#34;https://pkgs.rstudio.com/blogdown/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;blogdown&lt;/code&gt;&lt;/a&gt; e &lt;a href=&#34;https://wowchemy.com/docs/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;Hugo&lt;/code&gt;&lt;/a&gt; (&lt;a href=&#34;https://wowchemy.com/templates/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;temas&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/ramb-alem-das-analises-estat/ben_hu96f6bd792b3af7602ac6cf7cef98b13a_17598_7e5abe44a987059ffc245fad5b802500.webp 400w,
               /slides/ramb-alem-das-analises-estat/ben_hu96f6bd792b3af7602ac6cf7cef98b13a_17598_7191e69c4c5b62592abfeed760168432.webp 760w,
               /slides/ramb-alem-das-analises-estat/ben_hu96f6bd792b3af7602ac6cf7cef98b13a_17598_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/ramb-alem-das-analises-estat/ben_hu96f6bd792b3af7602ac6cf7cef98b13a_17598_7e5abe44a987059ffc245fad5b802500.webp&#34;
               width=&#34;216&#34;
               height=&#34;217&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;exemplos-de-websites&#34;&gt;Exemplos de &lt;em&gt;Websites&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;Exemplos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ben D√™ivide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://rmarkdown.rstudio.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R Markdown no RStudio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Website pessoal de &lt;a href=&#34;https://robjhyndman.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Rob J Hyndman&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Website pessoal de &lt;a href=&#34;https://amber.rbind.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Amber Thomas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Website pessoal de &lt;a href=&#34;https://emitanaka.github.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Emi Tanaka&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;exemplo-de-postcard&#34;&gt;Exemplo de &lt;em&gt;Postcard&lt;/em&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Exemplo: &lt;a href=&#34;https://bendeivide.github.io/cursor/about.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ben D√™ivide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;exemplo-de-dashboard&#34;&gt;Exemplo de Dashboard&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.shinyapps.io/RDashboards/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/ramb-alem-das-analises-estat/midrangeMCP_huf45dc9e9da53fa562b8e5b4d36571394_51649_39352c290d8c5e5a1804a131d2592ce5.webp 400w,
               /slides/ramb-alem-das-analises-estat/midrangeMCP_huf45dc9e9da53fa562b8e5b4d36571394_51649_40d47179797e8775f2210bae5d3f9b20.webp 760w,
               /slides/ramb-alem-das-analises-estat/midrangeMCP_huf45dc9e9da53fa562b8e5b4d36571394_51649_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/ramb-alem-das-analises-estat/midrangeMCP_huf45dc9e9da53fa562b8e5b4d36571394_51649_39352c290d8c5e5a1804a131d2592ce5.webp&#34;
               width=&#34;461&#34;
               height=&#34;534&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;outros-exemplos-de-dashboards&#34;&gt;Outros exemplos de Dashboards&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://eelloo.nl/groepsrapportages-met-infographics/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;eelloo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jjallaire.shinyapps.io/shiny-crandash/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pacotes populares&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://shiny.estatistica.ccet.ufrn.br/DashboardDeputados/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Controle de gastos p√∫blicos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pkgs.rstudio.com/flexdashboard/articles/examples.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Material para usar Dashboards + Shiny&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;r-markdown-relat√≥rios-programados&#34;&gt;R Markdown: Relat√≥rios programados&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Exemplo: &lt;a href=&#34;https://rmarkdown.rstudio.com/articles_mail_merge.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Mine √áetinkaya-Rundel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;/media/open-book3.jpg&#34;
  &gt;

&lt;h2 id=&#34;r-markdown-relat√≥rios-programados-aplica√ß√£o&#34;&gt;R Markdown: Relat√≥rios programados (Aplica√ß√£o)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Nomes dos professores do DEFIM/UFSJ e n√∫merode suas salas;&lt;/li&gt;
&lt;li&gt;Vamos fazer um documento em PDF: nomes dos professores, n√∫mero de salas.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/ramb-alem-das-analises-estat/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_0cd5d2661e8fc6dbb49dd886a81160b2.webp 400w,
               /slides/ramb-alem-das-analises-estat/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_5bd7ddd151c2f4da3fa79a2fa5972624.webp 760w,
               /slides/ramb-alem-das-analises-estat/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/ramb-alem-das-analises-estat/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_0cd5d2661e8fc6dbb49dd886a81160b2.webp&#34;
               width=&#34;170&#34;
               height=&#34;170&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;r-markdown-livros&#34;&gt;R Markdown: Livros&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Site: &lt;a href=&#34;https://bookdown.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://bookdown.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Exemplo: &lt;a href=&#34;https://bendeivide.github.io/book-epaec/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;EPAEC&lt;/a&gt;, &lt;a href=&#34;https://bendeivide.github.io/book-eambr/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;EAMBR&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;r-markdown-artigos-e-teses&#34;&gt;R Markdown: Artigos e Teses&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Pacote &lt;code&gt;bookdown&lt;/code&gt; (Tese)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pacote &lt;code&gt;rticles&lt;/code&gt; (Artigo): &lt;code&gt;install.packages(&amp;quot;rticles&amp;quot;)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pacote &lt;code&gt;thesisdown&lt;/code&gt; (Tese):&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;if (!require(&amp;quot;remotes&amp;quot;))
  install.packages(&amp;quot;remotes&amp;quot;, repos = &amp;quot;https://cran.rstudio.org&amp;quot;)
remotes::install_github(&amp;quot;rstudio/bookdown&amp;quot;)
remotes::install_github(&amp;quot;ismayc/thesisdown&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;/media/open-book3.jpg&#34;
  &gt;

&lt;h2 id=&#34;r-markdown-livros-aplica√ß√µes&#34;&gt;R Markdown: Livros (Aplica√ß√µes)&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/ramb-alem-das-analises-estat/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_0cd5d2661e8fc6dbb49dd886a81160b2.webp 400w,
               /slides/ramb-alem-das-analises-estat/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_5bd7ddd151c2f4da3fa79a2fa5972624.webp 760w,
               /slides/ramb-alem-das-analises-estat/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/ramb-alem-das-analises-estat/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_0cd5d2661e8fc6dbb49dd886a81160b2.webp&#34;
               width=&#34;170&#34;
               height=&#34;170&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;/media/open-book3.jpg&#34;
  &gt;

&lt;h2 id=&#34;r-markdown-slides-aplica√ß√µes&#34;&gt;R Markdown: Slides (Aplica√ß√µes)&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/ramb-alem-das-analises-estat/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_0cd5d2661e8fc6dbb49dd886a81160b2.webp 400w,
               /slides/ramb-alem-das-analises-estat/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_5bd7ddd151c2f4da3fa79a2fa5972624.webp 760w,
               /slides/ramb-alem-das-analises-estat/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/ramb-alem-das-analises-estat/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_0cd5d2661e8fc6dbb49dd886a81160b2.webp&#34;
               width=&#34;170&#34;
               height=&#34;170&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;documenta√ß√£o-para-pacotes&#34;&gt;Documenta√ß√£o para pacotes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Pacote &lt;a href=&#34;https://pkgdown.r-lib.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;pkgdown&lt;/code&gt;&lt;/a&gt;: ex.: &lt;a href=&#34;https://bendeivide.github.io/midrangeMCP/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;midrangeMCP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Vignettes (Pacote &lt;a href=&#34;https://usethis.r-lib.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;usethis&lt;/code&gt;&lt;/a&gt;): &lt;code&gt;usethis::use_vignette()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;interface-gr√°fica-ao-usu√°rio&#34;&gt;Interface Gr√°fica ao Usu√°rio&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Exemplo do pacote &lt;code&gt;tcltk&lt;/code&gt;: &lt;a href=&#34;https://bendeivide.github.io/project/mcptests/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;MCPtests&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34;
           src=&#34;http://bendeivide.github.io/slides/ramb-alem-das-analises-estat/MCPtests.gif&#34;
           loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Exemplo do pacote &lt;code&gt;shiny&lt;/code&gt;: &lt;a href=&#34;https://dreamrs.github.io/esquisse/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;esquisse&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;documentos-para-aprendizagem-do-r&#34;&gt;Documentos para aprendizagem do R&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Pacote &lt;a href=&#34;https://rstudio.github.io/learnr/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;learnr&lt;/code&gt;&lt;/a&gt;: ex.: &lt;a href=&#34;http://bendeivide.shinyapps.io/Est_Exp/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Estat√≠stica Experimental&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;aplica√ß√£o-de-provas-academia&#34;&gt;Aplica√ß√£o de provas (Academia)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Pacote &lt;a href=&#34;http://r-exams.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;exams&lt;/code&gt;&lt;/a&gt; e uso no &lt;a href=&#34;https://moodle.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MOODLE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/ramb-alem-das-analises-estat/rexams&amp;#43;moodle_hu90e239b8805e1b03b777d53fd8bd0aea_63184_45a5acf0538bc5ef2ea0500c6d063fe2.webp 400w,
               /slides/ramb-alem-das-analises-estat/rexams&amp;#43;moodle_hu90e239b8805e1b03b777d53fd8bd0aea_63184_f19d123669d0c8ec3229ab58813739b8.webp 760w,
               /slides/ramb-alem-das-analises-estat/rexams&amp;#43;moodle_hu90e239b8805e1b03b777d53fd8bd0aea_63184_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/ramb-alem-das-analises-estat/rexams&amp;#43;moodle_hu90e239b8805e1b03b777d53fd8bd0aea_63184_45a5acf0538bc5ef2ea0500c6d063fe2.webp&#34;
               width=&#34;295&#34;
               height=&#34;155&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;/media/open-book3.jpg&#34;
  &gt;

&lt;h2 id=&#34;gr√°ficos-3d-latex-e-r&#34;&gt;Gr√°ficos 3D ($\LaTeX$ e &lt;code&gt;R&lt;/code&gt;)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Pacote &lt;code&gt;scatterplot3d&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;/media/open-book3.jpg&#34;
  &gt;

&lt;h2 id=&#34;tabelas-com-ilustra√ß√µes-animadas--sweave&#34;&gt;Tabelas com ilustra√ß√µes animadas + &lt;code&gt;Sweave&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/ramb-alem-das-analises-estat/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_0cd5d2661e8fc6dbb49dd886a81160b2.webp 400w,
               /slides/ramb-alem-das-analises-estat/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_5bd7ddd151c2f4da3fa79a2fa5972624.webp 760w,
               /slides/ramb-alem-das-analises-estat/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/ramb-alem-das-analises-estat/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_0cd5d2661e8fc6dbb49dd886a81160b2.webp&#34;
               width=&#34;170&#34;
               height=&#34;170&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;onde-publicamos-esses-materiais&#34;&gt;Onde publicamos esses materiais?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://rpubs.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RPubs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://rpubs.com/cathydatascience/518692&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Como publicar!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.shinyapps.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;shinyapp.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bookdown.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Bookdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://marcusnunes.me/posts/como-instalar-o-shiny-em-seu-proprio-servidor/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Servidor pr√≥prio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gomesfellipe.github.io/post/2018-10-27-server-cloud/server-cloud/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Servidor online&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://https://github.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub&lt;/a&gt;, &lt;a href=&#34;https://bendeivide.github.io/project/rapidinhasr/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Rapidinhas do R 5 a 11&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.netlify.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Netlify&lt;/a&gt;, &lt;a href=&#34;https://bookdown.org/yihui/rmarkdown/blogdown-deploy.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Como publicar!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;quest√µes&#34;&gt;Quest√µes?&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;D√∫vidas e Sugest√µes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/#contact&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Contato&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Como criar uma website via R</title>
      <link>http://bendeivide.github.io/slides/websiter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/websiter/</guid>
      <description>
&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;EAR-rdoc-background.png&#34;
  &gt;

&lt;h1 id=&#34;como-criar-uma-website-via-r&#34;&gt;Como criar uma website via R&lt;/h1&gt;
&lt;p&gt;EAR: R Documenta√ß√µes
&lt;/br&gt;
&lt;/br&gt;

  &lt;i class=&#34;fas fa-user-tie  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ben D√™ivide&lt;/a&gt; | 
  &lt;i class=&#34;fas fa-school  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://www.ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;EAR-rdoc-background.png&#34;
  &gt;

&lt;h2 id=&#34;encarte&#34;&gt;Encarte&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;verao2023ufla-ben.png&#34; 
width=&#34;400&#34; 
height=&#34;400&#34; /&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;EAR-rdoc-background.png&#34;
  &gt;

&lt;h2 id=&#34;filosofia-de-publica√ß√£o-selo-dc&#34;&gt;Filosofia de publica√ß√£o (Selo DC)&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/dc/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/websiter/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_57f4d021c573f1cdb22f5303fccfacd9.webp 400w,
               /slides/websiter/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_e3124639f3c96b16d12396d9954194c3.webp 760w,
               /slides/websiter/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/websiter/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_57f4d021c573f1cdb22f5303fccfacd9.webp&#34;
               width=&#34;385&#34;
               height=&#34;406&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;EAR-rdoc-background.png&#34;
  &gt;

&lt;section&gt;
&lt;h2&gt; Pr√©-requisitos &lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Ambiente R (&lt;a href=&#34;http://localhost:4321/courses/ear/rbasico/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R b√°sico&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Instala√ß√£o de pacotes R:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://pkgs.rstudio.com/blogdown/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;blogdown&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;R&amp;gt; install.packages(&amp;quot;blogdown&amp;quot;)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://posit.co/downloads/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RStudio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Gerador de site (&lt;a href=&#34;https://gohugo.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo&lt;/a&gt;) &lt;a href=&#34;https://github.com/yihui/hugo-lithium&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Lithium&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;R&amp;gt; blogdown::install_hugo()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt; Pr√©-requisitos &lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Conhecimento b√°sico sobre a linguagem &lt;code&gt;YAML&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Conversor de documentos &lt;a href=&#34;https://pandoc.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pandoc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;RStudio e Github via &lt;a href=&#34;https://bendeivide.github.io/project/rapidinhasr/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Rapidinhas do R (5-16)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Pacote &lt;a href=&#34;&#34;&gt;usethis&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://rmarkdown.rstudio.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RMarkdown&lt;/a&gt; e &lt;a href=&#34;https://www.markdownguide.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Markdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pkgs.rstudio.com/bookdown/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Bookdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Use: &lt;code&gt;&amp;lt;&amp;gt;.Rmarkdown&lt;/code&gt; ao inv√©s de &lt;code&gt;&amp;lt;&amp;gt;.rmd&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Diret√≥rio do projeto: &lt;code&gt;docs&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;hr&gt;
&lt;h2 id=&#34;material-de-apoio&#34;&gt;Material de apoio&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/bendeivide/websiter&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/websiter/folder_hu84ae0d30d5154d1e73aaf9945c348d03_20466_620e1c48e451842e2f4135b7117821ad.webp 400w,
               /slides/websiter/folder_hu84ae0d30d5154d1e73aaf9945c348d03_20466_81e4eb609876936d8a5e708f395fd9b9.webp 760w,
               /slides/websiter/folder_hu84ae0d30d5154d1e73aaf9945c348d03_20466_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/websiter/folder_hu84ae0d30d5154d1e73aaf9945c348d03_20466_620e1c48e451842e2f4135b7117821ad.webp&#34;
               width=&#34;607&#34;
               height=&#34;471&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;EAR-rdoc-background.png&#34;
  &gt;

&lt;h2 id=&#34;m√£o-na-massa&#34;&gt;M√£o na massa!&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Criar uma p√°gina web apenas com o R (Hugo Lithium)&lt;/li&gt;
&lt;/ol&gt;
  &lt;ul&gt;
    &lt;ul&gt;
      &lt;li&gt;Melhor customiza√ß√£o: HTML, CSS, JavaScript, etc (Fora do escopo!)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Chamaremos via GitHub o projeto: Hugo Lithium&lt;/li&gt;
&lt;li&gt;Configurar a p√°gina criada&lt;/li&gt;
&lt;li&gt;Subiremos o projeto ao GitHub&lt;/li&gt;
&lt;li&gt;Ativar a p√°gina!&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;EAR-rdoc-background.png&#34;
  &gt;

&lt;h2 id=&#34;ideias-sobre-_website_-no-r&#34;&gt;Ideias sobre &lt;em&gt;website&lt;/em&gt; no R&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;P√°ginas est√°ticas e P√°ginas din√¢micas&lt;/li&gt;
&lt;li&gt;Servidor local (Desenvolvimento)&lt;/li&gt;
&lt;li&gt;Servidor da p√°gina (GitHub)
&lt;ul&gt;
&lt;li&gt;Raiz (&lt;code&gt;./&lt;/code&gt;) ou &lt;code&gt;docs/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;index.html&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Arquivos YAML: &lt;code&gt;&amp;lt;&amp;gt;.yaml&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;EAR-rdoc-background.png&#34;
  &gt;

&lt;h2 id=&#34;projetos-de-p√°ginas&#34;&gt;Projetos de p√°ginas&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Padr√£o RStudio (Yihui Xie):
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yihui/hugo-lithium&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo-Lithium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/wowchemy/starter-hugo-academic&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo-Acad√™mico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/caressofsteel/hugo-story&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo-Story&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Livro &lt;a href=&#34;https://pkgs.rstudio.com/bookdown/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;bookdown&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;EAR-rdoc-background.png&#34;
  &gt;

&lt;h2 id=&#34;refer√™ncias-de-livros&#34;&gt;Refer√™ncias de livros&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bookdown.org/yihui/rmarkdown/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R Markdown: The Definitive Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bookdown.org/yihui/rmarkdown-cookbook/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R Markdown Cookbook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pkgs.rstudio.com/bookdown/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pacote bookdown&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --- --&gt;
&lt;!-- 
&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;EAR-rdoc-background.png&#34;
  &gt;
 --&gt;
&lt;!-- ## Revisando o *RMarkdown* --&gt;
&lt;!-- &lt;img src=&#34;rmarkdown.png&#34;  --&gt;
&lt;!--      width=&#34;400&#34;  --&gt;
&lt;!--      height=&#34;400&#34; /&gt; --&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;EAR-rdoc-background.png&#34;
  &gt;

&lt;section&gt;
  &lt;h2&gt; Usando o blogdown &lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;blogdown.svg&#34; 
width=&#34;400&#34; 
height=&#34;400&#34; /&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;section&gt;
  &lt;h2&gt; Usando o bookdown &lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;bookdown.png&#34; 
width=&#34;400&#34; 
height=&#34;400&#34; /&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;EAR-rdoc-background.png&#34;
  &gt;

&lt;section&gt;
 &lt;h2&gt; Github + RStudio + Pacote usethis &lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;github.png&#34; 
width=&#34;200&#34; 
height=&#34;200&#34; /&gt;
+
&lt;img src=&#34;rstudio.png&#34; 
width=&#34;200&#34; 
height=&#34;200&#34; /&gt;
+
&lt;img src=&#34;usethis.png&#34; 
width=&#34;200&#34; 
height=&#34;200&#34; /&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;section&gt;
 &lt;h2&gt;&#34;Push&#34; ao Github&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;R&amp;gt; usethis::use_git()
R&amp;gt; usethis::use_github()
&lt;/code&gt;&lt;/pre&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;EAR-rdoc-background.png&#34;
  &gt;

&lt;h2 id=&#34;dicas&#34;&gt;Dicas&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Sites mais simples: pacote &lt;a href=&#34;https://rstudio.github.io/distill/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;distill&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Outros temas do Hugo:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://themes.gohugo.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Temas Hugo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Sites para pacotes R: &lt;a href=&#34;https://pkgdown.r-lib.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pkgdown&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;EAR-rdoc-background.png&#34;
  &gt;

&lt;h1 id=&#34;obrigado&#34;&gt;Obrigado!&lt;/h1&gt;
&lt;p&gt;Sugest√µes, perguntas, cr√≠ticas&amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;EAR-rdoc.png&#34; 
width=&#34;500&#34; 
height=&#34;400&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Como desenvolver o primeiro pacote R</title>
      <link>http://bendeivide.github.io/slides/meupacoter-gems-ufs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/meupacoter-gems-ufs/</guid>
      <description>
&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;hardcover.png&#34;
  &gt;

&lt;h2 id=&#34;como-desenvolver-o-primeiro-pacote-r&#34;&gt;Como desenvolver o primeiro pacote R&lt;/h2&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-user-tie  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ben D√™ivide&lt;/a&gt; |

  &lt;i class=&#34;fas fa-school  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://www.ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;&lt;/p&gt;
&lt;img src=&#34;logo.png&#34; width=&#34;40%&#34; height=&#34;70%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;hardcover.png&#34;
  &gt;

&lt;h2 id=&#34;selo-dc&#34;&gt;Selo DC&lt;/h2&gt;
&lt;img src=&#34;SeloDC-branco.png&#34; width=&#34;40%&#34; height=&#34;70%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;hardcover.png&#34;
  &gt;

&lt;h2 id=&#34;livros-em-desenvolvimento&#34;&gt;Livros em desenvolvimento&lt;/h2&gt;
&lt;img src=&#34;livro.png&#34; width=&#34;100%&#34; height=&#34;100%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;hardcover.png&#34;
  &gt;

&lt;h2 id=&#34;pacotes-estat√≠sticos-publicados&#34;&gt;Pacotes estat√≠sticos publicados&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://doi.org/10.32614/RJ-2014-029&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SMR&lt;/a&gt; (BATISTA; FERREIRA, 2014)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/midrangeMCP/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;midrangeMCP&lt;/a&gt; (BATISTA; FERREIRA; OLIVEIRA, 2020)
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://doi.org/10.1590/1413-7054202044008020&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Alternative Tukey test&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bendeivide/MCPtests&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MCPtests&lt;/a&gt; (BATISTA; FERREIRA; OLIVEIRA; SANTOS, 2020)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://rpubs.com/Henriqueufla/617206&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TVMM&lt;/a&gt; (ALVES; FERREIRA; BATISTA, 2020)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/cppcor/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cppcor&lt;/a&gt; (RIBEIRO; BATISTA; MARTINS; OLIVEIRA, 2020)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;hardcover.png&#34;
  &gt;

&lt;h2 id=&#34;pacotes-em-desenvolvimento&#34;&gt;Pacotes em desenvolvimento&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bendeivide/leem&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;leem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bendeivide/statscience&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;statscience&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;hardcover.png&#34;
  &gt;

&lt;h2 id=&#34;o-que-√©-necess√°rio&#34;&gt;O que √© necess√°rio?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Conhecer o ambiente R (&lt;a href=&#34;https://bendeivide.github.io/books/eambr01/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R b√°sico&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;A linguagem R instalada:
&lt;ul&gt;
&lt;li&gt;Pacote &lt;a href=&#34;https://devtools.r-lib.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;devtools&lt;/a&gt; e &lt;a href=&#34;https://usethis.r-lib.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;usethis&lt;/a&gt; (Kit de ferramentas)&lt;/li&gt;
&lt;li&gt;Pacote &lt;a href=&#34;https://roxygen2.r-lib.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;roxygen2&lt;/a&gt; (Documenta√ß√£o R);&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;RStudio (Opcional) &lt;a href=&#34;https://rstudio.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://rstudio.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Rtools (Windows) &lt;a href=&#34;https://cran.r-project.org/bin/windows/Rtools/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://cran.r-project.org/bin/windows/Rtools/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\(\LaTeX\)&lt;/code&gt; &lt;a href=&#34;https://miktex.org/download&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://miktex.org/download&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Alternativa: instalar o pacote &lt;a href=&#34;https://yihui.org/tinytex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tinytex&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;hardcover.png&#34;
  &gt;

&lt;h3 id=&#34;conhecendo-a-estrutura-b√°sica-de-um-pacote&#34;&gt;Conhecendo a estrutura b√°sica de um pacote&lt;/h3&gt;
&lt;img src=&#34;est_pacote01.png&#34; width=&#34;40%&#34; height=&#34;70%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;hardcover.png&#34;
  &gt;

&lt;h3 id=&#34;criando-um-pacote-com-o-rstudio&#34;&gt;Criando um pacote com o RStudio&lt;/h3&gt;
&lt;iframe width=&#34;660&#34; height=&#34;415&#34; src=&#34;https://www.youtube.com/embed/aq4OL8IDRJ0&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;hardcover.png&#34;
  &gt;

&lt;section&gt;
&lt;h2&gt;aritmetica.R &lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Operacoes basicas da matematica
aritmetica &amp;lt;- function (a, b, op) {
           # op: divisi, multi, soma, subtra
           if (op == &amp;quot;divisi&amp;quot;) x &amp;lt;- divisi(a, b)
           if (op == &amp;quot;multi&amp;quot;) x &amp;lt;- multi(a,b)
           if (op == &amp;quot;soma&amp;quot;) x &amp;lt;- soma(a,b)
           if (op == &amp;quot;subtra&amp;quot;) x &amp;lt;- subtra(a,b)
           return(x)
         }
&lt;/code&gt;&lt;/pre&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;auxiliar.R &lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;soma &amp;lt;- function (a, b) { # Soma
          calculo &amp;lt;- a + b
          return(calculo)}
subtra &amp;lt;- function (a, b) { #Subtracao
            calculo &amp;lt;- a - b
            return(calculo)}
multi &amp;lt;- function (a, b) { # Multiplicacao
           calculo &amp;lt;- a * b
           return(calculo)}
divisi &amp;lt;- function (a, b) { # Divisao
            calculo &amp;lt;- a / b
            return(calculo)}
&lt;/code&gt;&lt;/pre&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;hardcover.png&#34;
  &gt;

&lt;h3 id=&#34;local-para-inserir-aritmeticar-e-auxiliarr&#34;&gt;Local para inserir &lt;code&gt;aritmetica.R&lt;/code&gt; e &lt;code&gt;auxiliar.R&lt;/code&gt;&lt;/h3&gt;
&lt;img src=&#34;est_pacote02.png&#34; width=&#34;40%&#34; height=&#34;70%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;hardcover.png&#34;
  &gt;

&lt;section&gt;
&lt;h2&gt;Editando o DESCRIPTION&lt;/h2&gt;
&lt;img src=&#34;est_pacote03.png&#34; width=&#34;40%&#34; height=&#34;70%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Arquivo DESCRIPTION&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-{}&#34;&gt;Package: meupacoter
Type: Package
Title: Funcoes Aritmeticas Basicas
Version: 1.0
Date: 2022-11-18
Author: Ben Deivide
Maintainer: Ben Deivide &amp;lt;ben.deivide@ufsj.edu.br&amp;gt;
Description: Este pacote realiza operacoes aritmeticas basicas utilizando dois numeros.
License: GPL (&amp;gt;= 2)
Encoding: UTF-8
RoxygenNote: 7.1.2
&lt;/code&gt;&lt;/pre&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;hardcover.png&#34;
  &gt;

&lt;section&gt;
&lt;h2&gt;Editando o NAMESPACE&lt;/h2&gt;
&lt;img src=&#34;est_pacote04.png&#34; width=&#34;40%&#34; height=&#34;70%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Arquivo NAMESPACE&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-{}&#34;&gt;exportPattern(&amp;quot;^[[:alpha:]]+&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt; Importante &lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;O que n√≥s vamos fazer √© deletar o arquivo &lt;strong&gt;NAMESPACE&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Vamos deixar para que o pacote &lt;code&gt;roxygen2&lt;/code&gt; gere-o.&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;hardcover.png&#34;
  &gt;

&lt;h2 id=&#34;configurando-o-roxygen2&#34;&gt;Configurando o &lt;code&gt;roxygen2&lt;/code&gt;&lt;/h2&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/Nw8ZBlmy3Yw&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;hardcover.png&#34;
  &gt;

&lt;section&gt;
&lt;h2&gt;Criando a documenta√ß√£o b√°sica do pacote&lt;/h2&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/YcPRWE6oD1E&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Estrutura da documenta√ß√£o&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-{}&#34;&gt;\name{meupacoter-package}
\alias{meupacoter-package}
\alias{meupacoter}
\docType{package}
\name{aritmetica}
\alias{aritmetica}
\title{Operacoes Matematicas Basicas}
\description{
O pacote resolve operacoes como: soma, subtracao, divisao e multiplicacao.
}
\usage{
aritmetica(a, b, op)
}
\arguments{
\item{a}{primeiro numero}
\item{b}{segundo numero}
\item{op}{operacao matematica}
}
\details{
A fun√ß√£o \code{aritmetica} realiza as quatro operacoes basicas. A opcoes para o argumento
\code{op} sao &amp;quot;soma&amp;quot;, &amp;quot;divisi&amp;quot;, &amp;quot;multi&amp;quot;, &amp;quot;subtra&amp;quot;
}
\examples{
aritmetica(8, 4, op = &amp;quot;divisi&amp;quot;)
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Usando o roxygen2 em aritmetica.R&lt;/h2&gt;
&lt;img src=&#34;est_pacote05.png&#34; width=&#34;40%&#34; height=&#34;70%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Estrutura da documenta√ß√£o pelo roxygen2&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;#&#39; Operacoes Matematicas Basicas
#&#39;
#&#39; \code{aritmetica} resolve operacoes como: soma, subtracao,
#&#39;     divisao e multiplicacao.
#&#39; @param a primeiro numero
#&#39; @param b segundo numero
#&#39; @param op operacao matematica
#&#39; @return A fun√ß√£o \code{aritmetica} realiza as quatro operacoes basicas. A opcoes para o argumento
#&#39;     \code{op} sao &amp;quot;soma&amp;quot;, &amp;quot;divisi&amp;quot;, &amp;quot;multi&amp;quot;, &amp;quot;subtra&amp;quot;
#&#39; @examples
#&#39; # Loading package
#&#39; library(meupacoter)
#&#39; aritmetica(8, 4, op = &amp;quot;divisi&amp;quot;)
# @import &amp;quot;nomes de pacotes importados&amp;quot;
# @importFrom &amp;quot;Pacotes&amp;quot; &amp;quot;funcoes&amp;quot;
#&#39; @export
aritmetica &amp;lt;- function (a, b, op) {
           # op: divisi, multi, soma, subtra
           if (op == &amp;quot;divisi&amp;quot;) x &amp;lt;- divisi(a, b)
           if (op == &amp;quot;multi&amp;quot;) x &amp;lt;- multi(a,b)
           if (op == &amp;quot;soma&amp;quot;) x &amp;lt;- soma(a,b)
           if (op == &amp;quot;subtra&amp;quot;) x &amp;lt;- subtra(a,b)
           return(x)}
&lt;/code&gt;&lt;/pre&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;hardcover.png&#34;
  &gt;

&lt;h3 id=&#34;organizando-os-arquivos&#34;&gt;Organizando os arquivos&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Antes de compilarmos o pacote, vamos excluir o arquivo &lt;strong&gt;NAMESPACE&lt;/strong&gt;, e todos os arquivos &lt;strong&gt;./Man/~.Rd&lt;/strong&gt;;&lt;/li&gt;
&lt;li&gt;O diret√≥rio do pacote ficar√° assim:&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;est_pacote06.png&#34; width=&#34;40%&#34; height=&#34;70%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;hardcover.png&#34;
  &gt;

&lt;h3 id=&#34;atualizando-o-pacote-com-o-roxigen2&#34;&gt;Atualizando o pacote com o &lt;code&gt;roxigen2&lt;/code&gt;&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/c7C9nSCGoPQ&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;hardcover.png&#34;
  &gt;

&lt;h3 id=&#34;checando-o-pacote&#34;&gt;Checando o pacote&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/pv98iNiOgqg&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;hardcover.png&#34;
  &gt;

&lt;h3 id=&#34;submetendo-ao-cran&#34;&gt;Submetendo ao CRAN&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://cran.r-project.org/submit.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://cran.r-project.org/submit.html&lt;/a&gt;&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/ou20KCmxSZ0&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;hardcover.png&#34;
  &gt;

&lt;h1 id=&#34;obrigado&#34;&gt;Obrigado!&lt;/h1&gt;
&lt;p&gt;Sugest√µes, perguntas, cr√≠ticas&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Estat√≠stica Computacional</title>
      <link>http://bendeivide.github.io/slides/ceac/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/ceac/</guid>
      <description>
&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;ceac.png&#34;
  &gt;

&lt;h1 id=&#34;heading&#34;&gt;&lt;/h1&gt;
&lt;/br&gt;
&lt;/br&gt;
&lt;/br&gt;
&lt;/br&gt;
&lt;/br&gt;
&lt;/br&gt;
&lt;/br&gt;
&lt;/br&gt;
&lt;/br&gt;
&lt;/br&gt;
&lt;/br&gt;
&lt;div align=&#34;right&#34;&gt;
&lt;p&gt;
  &lt;i class=&#34;fab fa-instagram  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://www.instagram.com/ceac_ufsj/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;@ceac_ufsj&lt;/a&gt; | 
  &lt;i class=&#34;fas fa-school  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://www.ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;ceac02.png&#34;
  &gt;

&lt;h2 id=&#34;quem-somos&#34;&gt;Quem somos?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Somos um projeto de Pesquisa, Ensino e Extens√£o&lt;/li&gt;
&lt;li&gt;Fundado em 2022&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;ceac02.png&#34;
  &gt;

&lt;h2 id=&#34;objetivos&#34;&gt;Objetivos&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Informar e conscientizar sobre uso de ferramentas computacionais&lt;/li&gt;
&lt;li&gt;Difundir o uso dessas ferramentas dentro das disciplinas do CAP&lt;/li&gt;
&lt;li&gt;Trabalhar com problemas pr√°ticos&lt;/li&gt;
&lt;li&gt;Experi√™ncia das ferramentas computacionais para a inser√ß√£o no mercado de trabalho&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;ceac02.png&#34;
  &gt;

&lt;h2 id=&#34;membros&#34;&gt;Membros&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Tutores
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;bendeivide.github.io&#34;&gt;Ben D√™ivide de O. Batista (DEFIM/UFSJ)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://lattes.cnpq.br/4378950347916839&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gabriel de Castro Fonseca (DQBIO)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lattes.cnpq.br/9870727668600291&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jorge David Alguiar Bellido (DEQUI/UFSJ)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://lattes.cnpq.br/5150012010823776&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pedro Mitsuo Shiroma (DTECH/UFSJ)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://lattes.cnpq.br/0704312140937009&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Telles Tim√≥teo da Silva (DEFIM/UFSJ)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;ceac02.png&#34;
  &gt;

&lt;h2 id=&#34;membros-1&#34;&gt;Membros&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Alunos
&lt;ul&gt;
&lt;li&gt;Betania Drosdrocky Gon√ßalves&lt;/li&gt;
&lt;li&gt;Diego Henrique de Souza Lima Duarte&lt;/li&gt;
&lt;li&gt;Gabriel Loureiro Barbosa Aguiar&lt;/li&gt;
&lt;li&gt;Gabriela da Rocha Honorato&lt;/li&gt;
&lt;li&gt;Jos√© Osvaldo Maciel da Rocha J√∫nior&lt;/li&gt;
&lt;li&gt;La√≠s Braga Silva&lt;/li&gt;
&lt;li&gt;Larissa Emanuelle Lara Silva&lt;/li&gt;
&lt;li&gt;Let√≠cia Lima Alves&lt;/li&gt;
&lt;li&gt;Marcos Gomes Machado&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;ceac02.png&#34;
  &gt;

&lt;h1 id=&#34;quest√µes&#34;&gt;Quest√µes?&lt;/h1&gt;
&lt;p&gt;D√∫vidas e Cr√≠ticas&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.instagram.com/ceac_ufsj/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Contato&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Estat√≠stica Computacional</title>
      <link>http://bendeivide.github.io/slides/estcomp/s01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/estcomp/s01/</guid>
      <description>
&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo03.jpg&#34;
  &gt;

&lt;h1 id=&#34;estat√≠stica-computacional&#34;&gt;Estat√≠stica computacional&lt;/h1&gt;
&lt;p&gt;Aula 01 - Apresenta√ß√£o do curso
&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-user-tie  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ben D√™ivide&lt;/a&gt; | 
  &lt;i class=&#34;fas fa-school  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://www.ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;
&lt;/br&gt;

  &lt;i class=&#34;fas fa-book  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/courses/estcomp/&#34;&gt;Estat√≠stica Computacional&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;h2 id=&#34;selo-dc&#34;&gt;Selo DC&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/dc/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/estcomp/s01/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_57f4d021c573f1cdb22f5303fccfacd9.webp 400w,
               /slides/estcomp/s01/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_e3124639f3c96b16d12396d9954194c3.webp 760w,
               /slides/estcomp/s01/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/estcomp/s01/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_57f4d021c573f1cdb22f5303fccfacd9.webp&#34;
               width=&#34;385&#34;
               height=&#34;406&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;section data-background-iframe=&#34;/courses/estcomp&#34; data-background-interactive&gt;
	&lt;div style=&#34;position: absolute; width: 40%; right: 0; box-shadow: 0 1px 4px rgba(0,0,0,0.5), 0 5px 25px rgba(0,0,0,0.2); background-color: rgba(0, 0, 0, 0.9); color: #fff; padding: 20px; font-size: 20px; text-align: left;&#34;&gt;
		&lt;h2&gt;Material do curso&lt;/h2&gt;
		&lt;p&gt;Todo o material ser√° dispon√≠vel na p√°gina &lt;a href=&#34;https://bendeivide.github.io/courses/estcomp/&#34;&gt;Ben D√™ivide&lt;/a&gt;.&lt;/p&gt;
	&lt;/div&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;h2 id=&#34;introdu√ß√£o-e-hist√≥rico-sobre-o-ambiente-r&#34;&gt;Introdu√ß√£o e hist√≥rico sobre o ambiente R&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Criadores Ross Ihaka e por Robert Gentleman (Nova Zel√¢ndia), 1993&lt;/li&gt;
&lt;li&gt;Baseado na linguagem S, criado por John Chambers e colaboradores (Primeira vers√£o 1976)&lt;/li&gt;
&lt;li&gt;Atualmente √© mantida por colaboradores volunt√°rios em todo o mundo&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;h2 id=&#34;caracter√≠sticas-sobre-o-r&#34;&gt;Caracter√≠sticas sobre o R&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Linguagem pode ser orientada a objetos, C√≥digo aberto, funcional, metapragm√°tica, Licen√ßa GNU&lt;/li&gt;
&lt;li&gt;Reposit√≥rio &lt;a href=&#34;https://cran.r-project.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CRAN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Popularidade com o &lt;a href=&#34;https://rstudio.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RStudio&lt;/a&gt; (Joseph J. Allaire)&lt;/li&gt;
&lt;li&gt;Como instalar o R?&lt;/li&gt;
&lt;li&gt;Como instalar o RStudio?&lt;/li&gt;
&lt;li&gt;Como usar o R?&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;section&gt;
&lt;h2&gt; Cursos e Playlists &lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/cursor/nbasico/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;













&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/estcomp/s01/cursor-nb_hu8cbf2d1b9b5244f1524037e4474c538e_69900_4b297cb8f0e33e442ebf99b215388034.webp 400w,
               /slides/estcomp/s01/cursor-nb_hu8cbf2d1b9b5244f1524037e4474c538e_69900_f138ba75b6cb4eb62d1ecea4bcae0172.webp 760w,
               /slides/estcomp/s01/cursor-nb_hu8cbf2d1b9b5244f1524037e4474c538e_69900_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/estcomp/s01/cursor-nb_hu8cbf2d1b9b5244f1524037e4474c538e_69900_4b297cb8f0e33e442ebf99b215388034.webp&#34;
               width=&#34;350&#34;
               height=&#34;350&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/post/cursorni2/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;N√≠vel Intermedi√°rio&#34; srcset=&#34;
               /slides/estcomp/s01/cursor-ni_hua909e2f7dc5b7deac580280a2231351e_70067_01ee0fc5dca62b5827c4744b677401e2.webp 400w,
               /slides/estcomp/s01/cursor-ni_hua909e2f7dc5b7deac580280a2231351e_70067_2be287ff636a8ea73ce5b5354154f128.webp 760w,
               /slides/estcomp/s01/cursor-ni_hua909e2f7dc5b7deac580280a2231351e_70067_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/estcomp/s01/cursor-ni_hua909e2f7dc5b7deac580280a2231351e_70067_01ee0fc5dca62b5827c4744b677401e2.webp&#34;
               width=&#34;593&#34;
               height=&#34;579&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/project/rapidinhasr/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/estcomp/s01/rapidinhasr_huf4c584a0ea803c0b4fded9f2abc27f53_510973_df46483f285db6db6d908bc356b06e75.webp 400w,
               /slides/estcomp/s01/rapidinhasr_huf4c584a0ea803c0b4fded9f2abc27f53_510973_db647e21fc70a6855b86924338dcb47a.webp 760w,
               /slides/estcomp/s01/rapidinhasr_huf4c584a0ea803c0b4fded9f2abc27f53_510973_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/estcomp/s01/rapidinhasr_huf4c584a0ea803c0b4fded9f2abc27f53_510973_df46483f285db6db6d908bc356b06e75.webp&#34;
               width=&#34;760&#34;
               height=&#34;374&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;section data-background-video=&#34;est&amp;prob.mp4&#34; data-background-color=&#34;#000000&#34;&gt;
&lt;div style=&#34;background-color: rgba(0, 0, 0, 0.9); color: #fff; padding: 20px;&#34;&gt;
&lt;h2&gt;Playlist de Estat√≠stica e Probabilidade&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PL-20Z1XFWKR2GatfNSFOwfRvPreZ-nW0D&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;
  &lt;i class=&#34;fab fa-youtube  pr-1 fa-fw&#34;&gt;&lt;/i&gt; youtube/bendeivide&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;section&gt;
&lt;h2&gt; Cole√ß√£o Estudando o Ambiente R &lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/book-eambr01&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;













&lt;figure  id=&#34;figure-volume-i&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Volume I&#34; srcset=&#34;
               /slides/estcomp/s01/hardcover01_hu6fd2f9a5af792bfbcb973270ac465a56_130113_f7ee7ac1bcb38885ed43ff6283f91281.webp 400w,
               /slides/estcomp/s01/hardcover01_hu6fd2f9a5af792bfbcb973270ac465a56_130113_f8257eabb142099dedb529c07f030721.webp 760w,
               /slides/estcomp/s01/hardcover01_hu6fd2f9a5af792bfbcb973270ac465a56_130113_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/estcomp/s01/hardcover01_hu6fd2f9a5af792bfbcb973270ac465a56_130113_f7ee7ac1bcb38885ed43ff6283f91281.webp&#34;
               width=&#34;248&#34;
               height=&#34;351&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Volume I
    &lt;/figcaption&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;section&gt;














&lt;figure  id=&#34;figure-volume-ii&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Volume II&#34; srcset=&#34;
               /slides/estcomp/s01/hardcover02_hu6fd2f9a5af792bfbcb973270ac465a56_140122_45f619095959daf2295f20cedc96666e.webp 400w,
               /slides/estcomp/s01/hardcover02_hu6fd2f9a5af792bfbcb973270ac465a56_140122_bf2cc9d0d398d7bc6c1078f0736f1b29.webp 760w,
               /slides/estcomp/s01/hardcover02_hu6fd2f9a5af792bfbcb973270ac465a56_140122_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/estcomp/s01/hardcover02_hu6fd2f9a5af792bfbcb973270ac465a56_140122_45f619095959daf2295f20cedc96666e.webp&#34;
               width=&#34;248&#34;
               height=&#34;351&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Volume II
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/section&gt;
&lt;section&gt;














&lt;figure  id=&#34;figure-volume-iii&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Volume III&#34; srcset=&#34;
               /slides/estcomp/s01/hardcover03_hu6fd2f9a5af792bfbcb973270ac465a56_132421_5d2480d8e0e7c78bda916b4e31c58e8b.webp 400w,
               /slides/estcomp/s01/hardcover03_hu6fd2f9a5af792bfbcb973270ac465a56_132421_2a3fcd56ea738f0fa720cfa8ecc1caf6.webp 760w,
               /slides/estcomp/s01/hardcover03_hu6fd2f9a5af792bfbcb973270ac465a56_132421_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/estcomp/s01/hardcover03_hu6fd2f9a5af792bfbcb973270ac465a56_132421_5d2480d8e0e7c78bda916b4e31c58e8b.webp&#34;
               width=&#34;248&#34;
               height=&#34;351&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Volume III
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;h1 id=&#34;quest√µes&#34;&gt;Quest√µes?&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;D√∫vidas e Sugest√µes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/#contact&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Contato&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;!-- https://revealjs.com/transitions/ --&gt;
&lt;section data-transition=&#34;zoom&#34;&gt;
  &lt;h1&gt;Pr√≥ximas aulas...&lt;/h1&gt;
&lt;/section&gt;
&lt;section data-transition-speed=&#34;fast&#34;&gt;
&lt;p&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/estcomp&#34;&gt;













&lt;figure  id=&#34;figure-bendeividegithubio&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;bendeivide.github.io&#34; srcset=&#34;
               /slides/estcomp/s01/ben06_hu5bea5166adf08203812bfc1c9ed6c2df_379949_62d825484a795f0ad2a5c47f01253c0d.webp 400w,
               /slides/estcomp/s01/ben06_hu5bea5166adf08203812bfc1c9ed6c2df_379949_0c491b4ea3521509bc21790317b4794e.webp 760w,
               /slides/estcomp/s01/ben06_hu5bea5166adf08203812bfc1c9ed6c2df_379949_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/estcomp/s01/ben06_hu5bea5166adf08203812bfc1c9ed6c2df_379949_62d825484a795f0ad2a5c47f01253c0d.webp&#34;
               width=&#34;630&#34;
               height=&#34;480&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      bendeivide.github.io
    &lt;/figcaption&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;!-- &lt;section&gt; --&gt;
&lt;!--   &lt;h2&gt;Some Slide&lt;/h2&gt; --&gt;
&lt;!--   &lt;aside class=&#34;notes&#34;&gt; --&gt;
&lt;!--     Anota√ß√µes no Visualizador (Clique em S) üìù --&gt;
&lt;!--   &lt;/aside&gt; --&gt;
&lt;!-- &lt;/section&gt; --&gt;
&lt;!-- ## Anima√ß√£o --&gt;
&lt;!-- &lt;section data-auto-animate&gt; --&gt;
&lt;!--   &lt;h1&gt;Auto-Animate&lt;/h1&gt; --&gt;
&lt;!-- &lt;/section&gt; --&gt;
&lt;!-- &lt;section data-auto-animate&gt; --&gt;
&lt;!--   &lt;h1 style=&#34;margin-top: 100px; color: red;&#34;&gt;Auto-Animate&lt;/h1&gt; --&gt;
&lt;!-- &lt;/section&gt; --&gt;
</description>
    </item>
    
    <item>
      <title>Estat√≠stica Computacional</title>
      <link>http://bendeivide.github.io/slides/estcomp/s02/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/estcomp/s02/</guid>
      <description>
&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo03.jpg&#34;
  &gt;

&lt;h1 id=&#34;estat√≠stica-computacional&#34;&gt;Estat√≠stica Computacional&lt;/h1&gt;
&lt;p&gt;Aula 02 - Introdu√ß√£o ao ambiente R
&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-user-tie  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ben D√™ivide&lt;/a&gt; | 
  &lt;i class=&#34;fas fa-school  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://www.ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;
&lt;/br&gt;

  &lt;i class=&#34;fas fa-book  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/courses/estcomp/&#34;&gt;Estat√≠stica Computacional&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;h2 id=&#34;selo-dc&#34;&gt;Selo DC&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/dc/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/estcomp/s02/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_57f4d021c573f1cdb22f5303fccfacd9.webp 400w,
               /slides/estcomp/s02/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_e3124639f3c96b16d12396d9954194c3.webp 760w,
               /slides/estcomp/s02/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/estcomp/s02/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_57f4d021c573f1cdb22f5303fccfacd9.webp&#34;
               width=&#34;385&#34;
               height=&#34;406&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;h2 id=&#34;acesso-a-todo-material&#34;&gt;Acesso a todo material&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/estcomp/&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/estcomp/s02/folder_hu84ae0d30d5154d1e73aaf9945c348d03_20466_620e1c48e451842e2f4135b7117821ad.webp 400w,
               /slides/estcomp/s02/folder_hu84ae0d30d5154d1e73aaf9945c348d03_20466_81e4eb609876936d8a5e708f395fd9b9.webp 760w,
               /slides/estcomp/s02/folder_hu84ae0d30d5154d1e73aaf9945c348d03_20466_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/estcomp/s02/folder_hu84ae0d30d5154d1e73aaf9945c348d03_20466_620e1c48e451842e2f4135b7117821ad.webp&#34;
               width=&#34;607&#34;
               height=&#34;471&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;h2 id=&#34;instala√ß√£o-do-r-e-rstudio&#34;&gt;Instala√ß√£o do R e RStudio&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/cursor/#so-windows&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SO Win&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/cursor/#so-linux-ubuntu&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SO UNIX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bendeivide.github.io/cursor/#so-mac&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SO MAC&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;!-- https://revealjs.com/transitions/ --&gt;
&lt;section data-transition=&#34;zoom&#34;&gt;
  &lt;h2&gt;Diferen√ßa entre o R e RStudio&lt;/h2&gt;
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  &lt;figure  &gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
                 /slides/estcomp/s02/promptr_hu69ee0da2f97395ac428921f37b80459a_472001_9b85968bc29f885dace2270c24039079.webp 400w,
                 /slides/estcomp/s02/promptr_hu69ee0da2f97395ac428921f37b80459a_472001_6bda6b5a62566d76d4072feffbfb2d62.webp 760w,
                 /slides/estcomp/s02/promptr_hu69ee0da2f97395ac428921f37b80459a_472001_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
                 src=&#34;http://bendeivide.github.io/slides/estcomp/s02/promptr_hu69ee0da2f97395ac428921f37b80459a_472001_9b85968bc29f885dace2270c24039079.webp&#34;
                 width=&#34;730&#34;
                 height=&#34;380&#34;
                 loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/figure&gt;
&lt;/section&gt;
&lt;section data-transition-speed=&#34;fast&#34;&gt;
&lt;h2&gt;Diferen√ßa entre o R e RStudio&lt;/h2&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/estcomp/s02/ide_rstudio_huab3737ec9cc2208441583b4930800e4d_307696_331fc9d22477f5928f2c04f7579e6c9c.webp 400w,
               /slides/estcomp/s02/ide_rstudio_huab3737ec9cc2208441583b4930800e4d_307696_df692b5b51b2b661dd286218b18ebe82.webp 760w,
               /slides/estcomp/s02/ide_rstudio_huab3737ec9cc2208441583b4930800e4d_307696_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/estcomp/s02/ide_rstudio_huab3737ec9cc2208441583b4930800e4d_307696_331fc9d22477f5928f2c04f7579e6c9c.webp&#34;
               width=&#34;730&#34;
               height=&#34;380&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;h2 id=&#34;como-o-r-trabalha&#34;&gt;Como o R trabalha&lt;/h2&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/estcomp/s02/rworks_hu2a76007f72e3bedcabac0678f5e95e66_304968_a0d97525785d3775fe573c3d581d2b44.webp 400w,
               /slides/estcomp/s02/rworks_hu2a76007f72e3bedcabac0678f5e95e66_304968_92444b1f46d65a684a309aa5b4156881.webp 760w,
               /slides/estcomp/s02/rworks_hu2a76007f72e3bedcabac0678f5e95e66_304968_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/estcomp/s02/rworks_hu2a76007f72e3bedcabac0678f5e95e66_304968_a0d97525785d3775fe573c3d581d2b44.webp&#34;
               width=&#34;730&#34;
               height=&#34;480&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;section data-auto-animate&gt;
  &lt;h2 data-id=&#34;code-title&#34;&gt;Console e Prompt de comando&lt;/h2&gt;
	&lt;pre data-id=&#34;code-animation&#34;&gt;
	  &lt;code class=&#34;hljs&#34; data-trim data-line-numbers=&#34;|1|2-3&#34;&gt;
	    &lt;script type=&#34;text/template&#34;&gt;
        options(prompt = &#34;R&gt; &#34;)
        # Toda vez que o console iniciar, come√ßarar por &#39;R&gt;&#39;
        10
	    &lt;/script&gt;
	  &lt;/code&gt;
	&lt;/pre&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2 data-id=&#34;code-title&#34;&gt;Resultado da execu√ß√£o&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;R&amp;gt; options(prompt = &amp;quot;R&amp;gt; &amp;quot;)
R&amp;gt; # Toda vez que o console iniciar, come√ßarar por &#39;R&amp;gt;&#39;
R&amp;gt; 10
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 10
&lt;/code&gt;&lt;/pre&gt;
&lt;/section&gt;
&lt;hr&gt;
&lt;section&gt;
&lt;h2&gt; Comandos elementares &lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;10 + 15
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 25
&lt;/code&gt;&lt;/pre&gt;
&lt;/br&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;10,5 + 15,5
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Error: &amp;lt;text&amp;gt;:1:3: &#39;,&#39; inesperado
## 1: 10,
##       ^
&lt;/code&gt;&lt;/pre&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt; Comandos elementares &lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Foi criado um objeto do tipo caractere e o nome &amp;quot;meu_nome&amp;quot; foi associado a ele
# O &#39;R&#39; avalia essa express√£o, mas n√£o imprime no console!
meu_nome &amp;lt;- &amp;quot;Ben&amp;quot;

# Para imprimir o resultado da express√£o, digitamos o nome &amp;quot;meu_nome&amp;quot; no console
# e apertamos o bot√£o ENTER do teclado!
meu_nome
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Ben&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt; Nomes e objetos &lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Deve consistir em letras, d√≠gitos, &lt;code&gt;.&lt;/code&gt; e &lt;code&gt;_&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;Os nomes devem ser iniciado por uma letra ou um ponto n√£o seguido de um n√∫mero, isto √©, Ex.: &lt;code&gt;.123&lt;/code&gt;, &lt;code&gt;1n&lt;/code&gt;, dentre outros;&lt;/li&gt;
&lt;li&gt;As letras mai√∫sculas se distinguem das letras min√∫sculas;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;ul&gt;
&lt;li&gt;N√£o pode inicia por &lt;code&gt;_&lt;/code&gt; ou d√≠gito, √© retornado um erro no console caso isso ocorra;&lt;/li&gt;
&lt;li&gt;N√£o pode usar qualquer uma das palavras reservadas pela linguagem, isto √©, &lt;code&gt;TRUE&lt;/code&gt;, &lt;code&gt;FALSE&lt;/code&gt;, &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;for&lt;/code&gt;, dentre outras, que pode ser consultado usando o comando &lt;code&gt;?Reserved()&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt; Nomes n√£o sint√°ticos  &lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Nome nao sintatico
.123 &amp;lt;- 50
## Error in 0.123 &amp;lt;- 50 : lado esquerdo da atribuicao inv√°lida (do_set)

# Qual a sugestao de nome sintatico para &#39;.123&#39;?
make.names(.123)
[1] &amp;quot;X0.123&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/section&gt;
&lt;hr&gt;
&lt;section&gt;
&lt;h2&gt; Corre√ß√£o de comandos no R &lt;/h2&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/0MRPmVsPvk4&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt; Corre√ß√£o de comandos no RStudio &lt;/h2&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/KL3WAB_GFNI&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;section data-auto-animate&gt;
  &lt;h2 data-id=&#34;code-title&#34;&gt;Ambiente global&lt;/h2&gt;
	&lt;pre data-id=&#34;code-animation&#34;&gt;
	  &lt;code class=&#34;hljs&#34; data-trim data-line-numbers=&#34;|4&#34;&gt;
	    &lt;script type=&#34;text/template&#34;&gt;
       # Nomes criados no ambiente 
       x &lt;- 10 - 6; y &lt;- 10 + 4; w &lt;- &#34;Maria Isabel&#34;
       # Verificando o nomes contidos no ambiente global
       ls()
	    &lt;/script&gt;
	  &lt;/code&gt;
	&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;meu_nome&amp;quot; &amp;quot;w&amp;quot;        &amp;quot;x&amp;quot;        &amp;quot;y&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;h2 id=&#34;criando-e-salvando-um-script&#34;&gt;Criando e salvando um script&lt;/h2&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/ETreeG5HK60&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;hr&gt;
&lt;section&gt;
&lt;h2&gt; Objetos &lt;/h2&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/6t9h9zgWyTE&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/section&gt;
&lt;section data-auto-animate&gt;
&lt;h2&gt; Entendimento dos nomes e objetos &lt;/h2&gt;
	&lt;pre data-id=&#34;code-animation&#34;&gt;
	  &lt;code class=&#34;hljs&#34; data-trim data-line-numbers=&#34;|2;5|3;6&#34;&gt;
	    &lt;script type=&#34;text/template&#34;&gt;
       x &lt;- 10
       lobstr::obj_addr(x)
       ## [1] &#34;0xf8a104fc20&#34;
       y &lt;- x
       lobstr::obj_addr(y)
       ## [1] &#34;0xf8a104fc20&#34;
	    &lt;/script&gt;
	  &lt;/code&gt;
	&lt;/pre&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt; Ilustra√ß√£o &lt;/h2&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/estcomp/s02/y=x=10_hud064575b8f0af6084abdce16d604d280_35386_68692ec504b290b034f8c838fb8db20a.webp 400w,
               /slides/estcomp/s02/y=x=10_hud064575b8f0af6084abdce16d604d280_35386_15c6873244455d4c68831bc1ac435847.webp 760w,
               /slides/estcomp/s02/y=x=10_hud064575b8f0af6084abdce16d604d280_35386_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/estcomp/s02/y=x=10_hud064575b8f0af6084abdce16d604d280_35386_68692ec504b290b034f8c838fb8db20a.webp&#34;
               width=&#34;730&#34;
               height=&#34;380&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt; Objeto e Ambiente &lt;/h2&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/estcomp/s02/objamb_hu90f54417d64275fdfd02177500a3edb8_84634_8708be3b7e9712bbc8c049d901b3c1d9.webp 400w,
               /slides/estcomp/s02/objamb_hu90f54417d64275fdfd02177500a3edb8_84634_1d82851f0dcb635bd55f6ee452d5eee4.webp 760w,
               /slides/estcomp/s02/objamb_hu90f54417d64275fdfd02177500a3edb8_84634_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/estcomp/s02/objamb_hu90f54417d64275fdfd02177500a3edb8_84634_8708be3b7e9712bbc8c049d901b3c1d9.webp&#34;
               width=&#34;730&#34;
               height=&#34;380&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt; Para um melhor entendimento sobre objetos &lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/cursor/nbasico#objetos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://bendeivide.github.io/cursor/nbasico#objetos&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;hr&gt;
&lt;section&gt;
&lt;h2&gt; Importa√ß√£o de dados &lt;/h2&gt;
&lt;h3&gt; Importa√ß√£o de dados &lt;/h3&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/estcomp/s02/banco_dados_huc3819529db37800b78a02d8eb7eb8279_171453_6ed62b943083b71130db9eee71cf9a53.webp 400w,
               /slides/estcomp/s02/banco_dados_huc3819529db37800b78a02d8eb7eb8279_171453_f8ddce6cd5fa1c36ecd612e3880a7e65.webp 760w,
               /slides/estcomp/s02/banco_dados_huc3819529db37800b78a02d8eb7eb8279_171453_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/estcomp/s02/banco_dados_huc3819529db37800b78a02d8eb7eb8279_171453_6ed62b943083b71130db9eee71cf9a53.webp&#34;
               width=&#34;730&#34;
               height=&#34;380&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h3&gt; Importa√ß√£o com o RStudio &lt;/h3&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/estcomp/s02/imp-exp_hu77bdd3ae559bd0d5cfe81de54a95d707_438684_a040797377408cd5f5cb4680ad72ee9d.webp 400w,
               /slides/estcomp/s02/imp-exp_hu77bdd3ae559bd0d5cfe81de54a95d707_438684_eb481cfe9ee854986d2e2b1712450d6c.webp 760w,
               /slides/estcomp/s02/imp-exp_hu77bdd3ae559bd0d5cfe81de54a95d707_438684_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/estcomp/s02/imp-exp_hu77bdd3ae559bd0d5cfe81de54a95d707_438684_a040797377408cd5f5cb4680ad72ee9d.webp&#34;
               width=&#34;730&#34;
               height=&#34;380&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h3&gt; Importa√ß√£o com o RStudio &lt;/h3&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/estcomp/s02/imp-exp2_hu98cf4e8ee59ff1990f444d22eaedaa94_816623_9112b4b050690be0f1170246382acae5.webp 400w,
               /slides/estcomp/s02/imp-exp2_hu98cf4e8ee59ff1990f444d22eaedaa94_816623_2b164ee7821541ca701386d6c25cf91f.webp 760w,
               /slides/estcomp/s02/imp-exp2_hu98cf4e8ee59ff1990f444d22eaedaa94_816623_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/estcomp/s02/imp-exp2_hu98cf4e8ee59ff1990f444d22eaedaa94_816623_9112b4b050690be0f1170246382acae5.webp&#34;
               width=&#34;730&#34;
               height=&#34;380&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h3&gt; Importa√ß√£o com o RStudio &lt;/h3&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/estcomp/s02/imp-exp3_hub4dbf8caff413c56bff8d7d281046b85_563394_9ad9f2e3db95c6a2548cca980f103654.webp 400w,
               /slides/estcomp/s02/imp-exp3_hub4dbf8caff413c56bff8d7d281046b85_563394_f1dd18c67163caaecd156f9965d6727b.webp 760w,
               /slides/estcomp/s02/imp-exp3_hub4dbf8caff413c56bff8d7d281046b85_563394_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/estcomp/s02/imp-exp3_hub4dbf8caff413c56bff8d7d281046b85_563394_9ad9f2e3db95c6a2548cca980f103654.webp&#34;
               width=&#34;730&#34;
               height=&#34;380&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h3&gt; Importa√ß√£o com o RStudio &lt;/h3&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/estcomp/s02/imp-exp4_hu996357d7207e85348fa9b50d37d1005a_661087_3b1f8b64bcf282599109480b14ea8d0e.webp 400w,
               /slides/estcomp/s02/imp-exp4_hu996357d7207e85348fa9b50d37d1005a_661087_5a34179815719ac31b3467f7cbdf9cac.webp 760w,
               /slides/estcomp/s02/imp-exp4_hu996357d7207e85348fa9b50d37d1005a_661087_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/estcomp/s02/imp-exp4_hu996357d7207e85348fa9b50d37d1005a_661087_3b1f8b64bcf282599109480b14ea8d0e.webp&#34;
               width=&#34;730&#34;
               height=&#34;380&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;h1 id=&#34;quest√µes&#34;&gt;Quest√µes?&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;D√∫vidas e Sugest√µes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/#contact&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Contato&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Estat√≠stica Computacional</title>
      <link>http://bendeivide.github.io/slides/estcomp/s03/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/estcomp/s03/</guid>
      <description>
&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo03.jpg&#34;
  &gt;

&lt;h1 id=&#34;estat√≠stica-computacional&#34;&gt;Estat√≠stica Computacional&lt;/h1&gt;
&lt;p&gt;Aula 03 - Objetos em R
&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-user-tie  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ben D√™ivide&lt;/a&gt; | 
  &lt;i class=&#34;fas fa-school  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://www.ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;
&lt;/br&gt;

  &lt;i class=&#34;fas fa-book  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/courses/estcomp/&#34;&gt;Estat√≠stica Computacional&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;h2 id=&#34;selo-dc&#34;&gt;Selo DC&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/dc/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/estcomp/s03/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_57f4d021c573f1cdb22f5303fccfacd9.webp 400w,
               /slides/estcomp/s03/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_e3124639f3c96b16d12396d9954194c3.webp 760w,
               /slides/estcomp/s03/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/estcomp/s03/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_57f4d021c573f1cdb22f5303fccfacd9.webp&#34;
               width=&#34;385&#34;
               height=&#34;406&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;h2 id=&#34;acesso-a-todo-material&#34;&gt;Acesso a todo material&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/estcomp/&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/estcomp/s03/folder_hu84ae0d30d5154d1e73aaf9945c348d03_20466_620e1c48e451842e2f4135b7117821ad.webp 400w,
               /slides/estcomp/s03/folder_hu84ae0d30d5154d1e73aaf9945c348d03_20466_81e4eb609876936d8a5e708f395fd9b9.webp 760w,
               /slides/estcomp/s03/folder_hu84ae0d30d5154d1e73aaf9945c348d03_20466_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/estcomp/s03/folder_hu84ae0d30d5154d1e73aaf9945c348d03_20466_620e1c48e451842e2f4135b7117821ad.webp&#34;
               width=&#34;607&#34;
               height=&#34;471&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;h2 id=&#34;introdu√ß√£o&#34;&gt;Introdu√ß√£o&lt;/h2&gt;
&lt;p&gt;John Chambers (Criador da linguagem S) afirma:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Princ√≠pio do Objeto&lt;/strong&gt;: Tudo que existe em &lt;code&gt;R&lt;/code&gt; √© um objeto&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Definimos um objeto como uma entidade no ambiente &lt;code&gt;R&lt;/code&gt; com caracter√≠sticas internas contendo informa√ß√µes necess√°rias para interpretar sua estrutura e conte√∫do
&lt;ul&gt;
&lt;li&gt;Atributos&lt;/li&gt;
&lt;li&gt;Atributos intr√≠nsecos: &lt;strong&gt;modo&lt;/strong&gt; e &lt;strong&gt;comprimento&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;h2 id=&#34;associando-o-nome-a-um-objeto&#34;&gt;Associando o nome a um objeto&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&amp;gt; x &amp;lt;- 10
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Comandos de atribui√ß√£o&lt;/li&gt;
&lt;li&gt;Use: &lt;code&gt;&amp;lt;-&lt;/code&gt;, isto √©, &lt;code&gt;&amp;lt;&lt;/code&gt; + &lt;code&gt;-&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Evite: &lt;code&gt;=&lt;/code&gt;, use apenas para definir argumentos em uma fun√ß√£o&lt;/li&gt;
&lt;li&gt;Nomes sint√°ticos e nomes n√£o sint√°ticos;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;section&gt;
&lt;h2&gt;Nomes sint√°ticos e n√£o sint√°ticos&lt;/h2&gt;
&lt;ul&gt;
&lt;li class=&#34;fragment&#34; data-fragment-index=&#34;3&#34;&gt;
&lt;p&gt;Deve consistir em letras, d√≠gitos, &lt;code&gt;.&lt;/code&gt; e &lt;code&gt;_&lt;/code&gt; ;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&#34;fragment&#34; data-fragment-index=&#34;1&#34;&gt;
&lt;p&gt;Os nomes devem ser iniciado por uma letra ou um ponto n√£o seguido de um n√∫mero, Ex.: &lt;code&gt;.123&lt;/code&gt;;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&#34;fragment&#34; data-fragment-index=&#34;2&#34;&gt;
&lt;p&gt;Letras mai√∫sculas e min√∫sculas s√£o diferentes;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&#34;fragment&#34; data-fragment-index=&#34;5&#34;&gt;
&lt;p&gt;N√£o pode inicia por &lt;code&gt;_&lt;/code&gt; ou d√≠gito;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&#34;fragment&#34; data-fragment-index=&#34;4&#34;&gt;
&lt;p&gt;N√£o pode usar palavras reservadas: &lt;code&gt;?Reserved()&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Nomes sint√°ticos e n√£o sint√°ticos&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Nome nao sintatico
.123 &amp;lt;- 50
## Error in 0.123 &amp;lt;- 50 : lado esquerdo da atribuicao inv√°lida (do_set)

# Qual a sugestao de nome sintatico para &#39;.123&#39;?
make.names(.123)
[1] &amp;quot;X0.123&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;section&gt;
&lt;h2&gt;Associando um nome ao objeto&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&amp;gt; x &amp;lt;- 10 # Ou 10 -&amp;gt; x
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;x=10.png&#34; width=&#34;60%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&amp;gt; lobstr::obj_addr(x)
&amp;gt; # [1] &amp;quot;0xf8a104fc20&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Associando um nome ao objeto&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&amp;gt; y &amp;lt;- x
&amp;gt; lobstr::obj_addr(y)
&amp;gt; # [1] &amp;quot;0xf8a104fc20&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;y=x=10.png&#34; width=&#34;60%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Associando um nome ao objeto e ambiente global&lt;/h2&gt;
&lt;img src=&#34;objamb.png&#34; width=&#34;60%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Associando um nome ao objeto&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&amp;gt; lobstr::obj_addr(x)
&amp;gt; # [1] &amp;quot;0xf8a104fc20&amp;quot;
&amp;gt; x &amp;lt;- 30
&amp;gt; lobstr::obj_addr(x)
&amp;gt; # [1] &amp;quot;0x42db6dbb50&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;h2 id=&#34;atributos-e-classes&#34;&gt;Atributos e Classes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;atributos intr√≠nsecos:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;modo&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mode()&lt;/code&gt; baseado na linguagem &lt;code&gt;S&lt;/code&gt; e&lt;/li&gt;
&lt;li&gt;&lt;code&gt;typeof()&lt;/code&gt; baseado na linguagem &lt;code&gt;C&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;comprimento&lt;/strong&gt;: &lt;code&gt;length()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Demais atributos: &lt;code&gt;attributes()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Classe: &lt;code&gt;class()&lt;/code&gt; e &lt;code&gt;sloop::s3_class()&lt;/code&gt; e atributo classe por &lt;code&gt;attributes()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;section&gt;
&lt;h2&gt;Atributo intr√≠nseco de modo (Vetores)&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&amp;gt; # Objeto modo caractere
&amp;gt; x &amp;lt;- &amp;quot;Ben&amp;quot;; mode(x)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;character&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&amp;gt; # Objeto modo logico
&amp;gt; z &amp;lt;- TRUE; mode(z)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;logical&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&amp;gt; # Objeto modo complexo
&amp;gt; w &amp;lt;- 1i; mode(w)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;complex&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Atributo intr√≠nseco de modo (Vetores)&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&amp;gt; # Objeto modo numerico
&amp;gt; y &amp;lt;- 10L; mode(y); y2 &amp;lt;- 10; mode(y2)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;numeric&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;numeric&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&amp;gt; # y eh igual a y2? # y eh identico y2?
&amp;gt; y == y2; identical(y, y2)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] FALSE
&lt;/code&gt;&lt;/pre&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Atributo intr√≠nseco de modo (Vetores)&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&amp;gt; # Objeto modo caractere
&amp;gt; x &amp;lt;- &amp;quot;Ben&amp;quot;; typeof(x)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;character&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&amp;gt; # Objeto modo logico
&amp;gt; z &amp;lt;- TRUE; typeof(z)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;logical&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&amp;gt; # Objeto modo complexo
&amp;gt; w &amp;lt;- 1i; typeof(w)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;complex&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Atributo intr√≠nseco de modo (Vetores)&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&amp;gt; # Objeto modo numerico
&amp;gt; y &amp;lt;- 10L; typeof(y); y2 &amp;lt;- 10; typeof(y2)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;integer&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;double&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&amp;gt; # y eh igual a y2? # y eh identico y2?
&amp;gt; y == y2; identical(y, y2)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] FALSE
&lt;/code&gt;&lt;/pre&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;h2 id=&#34;resumo-do-modo-em-vetores-at√¥micos&#34;&gt;Resumo do modo em vetores at√¥micos&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;code&gt;typeof&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;code&gt;mode&lt;/code&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;logical&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;logical&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;integer&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;numeric&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;double&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;numeric&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;complex&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;complex&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;character&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;character&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;raw&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;raw&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;section&gt;
&lt;h2&gt;Comprimento&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&amp;gt; # Vetor de comprimento 5
&amp;gt; v1 &amp;lt;- 1:5
&amp;gt; # Vetor de comprimento 3
&amp;gt; v2 &amp;lt;- c(&amp;quot;Ben&amp;quot;, &amp;quot;Maria&amp;quot;, &amp;quot;Lana&amp;quot;)
&amp;gt; # Vetor de comprimento quatro
&amp;gt; v3 &amp;lt;- c(TRUE, FALSE, TRUE, TRUE)
&amp;gt; # Vejamos o comprimento dos vetores
&amp;gt; length(v1); length(v2); length(v3)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 5
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 3
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 4
&lt;/code&gt;&lt;/pre&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Comprimento&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/estcomp/s03/v1v2v3_huccf721c4a70307ba5fe5e442b4161bdc_260782_0ab2220e12cdb6726c1f0d0db5b82299.webp 400w,
               /slides/estcomp/s03/v1v2v3_huccf721c4a70307ba5fe5e442b4161bdc_260782_e5f12f3f374b191ede089d0d26dbc394.webp 760w,
               /slides/estcomp/s03/v1v2v3_huccf721c4a70307ba5fe5e442b4161bdc_260782_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/estcomp/s03/v1v2v3_huccf721c4a70307ba5fe5e442b4161bdc_260782_0ab2220e12cdb6726c1f0d0db5b82299.webp&#34;
               width=&#34;760&#34;
               height=&#34;265&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;h2 id=&#34;resumo&#34;&gt;Resumo&lt;/h2&gt;
&lt;p&gt;Um resumo as fun√ß√µes mensionadas podem ser refletidas com as seguintes indaga√ß√µes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;base::class()&lt;/code&gt; e &lt;code&gt;loop::c3_class()&lt;/code&gt;:  Qual o tipo de objeto?&lt;/li&gt;
&lt;li&gt;&lt;code&gt;base::mode()&lt;/code&gt;: Qual o tipo de dados baseados na linguagem &lt;code&gt;S&lt;/code&gt;?&lt;/li&gt;
&lt;li&gt;&lt;code&gt;base::typeof()&lt;/code&gt;: Qual o tipo de dados baseados na linguagem &lt;code&gt;C&lt;/code&gt;?&lt;/li&gt;
&lt;li&gt;&lt;code&gt;base::attributes()&lt;/code&gt;: O objeto tem atributos?&lt;/li&gt;
&lt;li&gt;&lt;code&gt;base::length()&lt;/code&gt;: Qual o comprimento do objeto?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sintaxe: &lt;code&gt;pacote::nome_fun√ß√£o()&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;h2 id=&#34;classes&#34;&gt;Classes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Objetos que armazenam &amp;ldquo;dados&amp;rdquo;, pensando em an√°lises:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;numeric&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;logical&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;character&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;list&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;matrix&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;array&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;factor&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;data.frame&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;section&gt;
&lt;h2&gt;Coers√£o do R&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&amp;gt; # Criando um objeto x e imprimindo o seu resultado
&amp;gt; x &amp;lt;- c(&amp;quot;Nome&amp;quot;, 3, 4, 5);x
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Nome&amp;quot; &amp;quot;3&amp;quot;    &amp;quot;4&amp;quot;    &amp;quot;5&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;coersao.png&#34; width=&#34;30%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Coers√£o imposta pelo usu√°rio&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&amp;gt; # Objeto de modo numerico
&amp;gt; minha_idade &amp;lt;- 35; mode(minha_idade)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;numeric&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&amp;gt; # Coers√£o do objeto para modo caractere (`string`)
&amp;gt; minha_idade &amp;lt;- as.character(minha_idade) 
&amp;gt; mode(minha_idade)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;character&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&amp;gt; # Verificando se o objeto tem modo &#39;character&#39;
&amp;gt; is.character(minha_idade)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE
&lt;/code&gt;&lt;/pre&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;section&gt;
&lt;h2&gt;Tipo de objetos&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Vetores at√¥micos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;L√≥gicos, Num√©ricos e Caracteres;&lt;/li&gt;
&lt;li&gt;Matrizes unidimensionais (&lt;em&gt;Matrix&lt;/em&gt;) e multidimensionais (&lt;em&gt;Arrays&lt;/em&gt;);&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Vetores em listas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Listas (&lt;em&gt;Lists&lt;/em&gt;);&lt;/li&gt;
&lt;li&gt;Quadro de dados (&lt;em&gt;Data frames&lt;/em&gt;);&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Existem outros, mas para esse m√≥dulo, exploraremos estes nas se√ß√µes seguintes&lt;/p&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;h1 id=&#34;quest√µes&#34;&gt;Quest√µes?&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;D√∫vidas e Sugest√µes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/#contact&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Contato&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Estat√≠stica Computacional</title>
      <link>http://bendeivide.github.io/slides/estcomp/s06/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/estcomp/s06/</guid>
      <description>
&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo03.jpg&#34;
  &gt;

&lt;h1 id=&#34;estat√≠stica-computacional&#34;&gt;Estat√≠stica Computacional&lt;/h1&gt;
&lt;p&gt;Aula 06 - Introdu√ß√£o ao Markdown no R
&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-user-tie  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ben D√™ivide&lt;/a&gt; | 
  &lt;i class=&#34;fas fa-school  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://www.ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;
&lt;/br&gt;

  &lt;i class=&#34;fas fa-book  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/courses/estcomp/&#34;&gt;Estat√≠stica Computacional&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;h2 id=&#34;selo-dc&#34;&gt;Selo DC&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/dc/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/estcomp/s06/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_57f4d021c573f1cdb22f5303fccfacd9.webp 400w,
               /slides/estcomp/s06/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_e3124639f3c96b16d12396d9954194c3.webp 760w,
               /slides/estcomp/s06/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/estcomp/s06/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_57f4d021c573f1cdb22f5303fccfacd9.webp&#34;
               width=&#34;385&#34;
               height=&#34;406&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;h2 id=&#34;acesso-a-todo-material&#34;&gt;Acesso a todo material&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/estcomp/&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/estcomp/s06/folder_hu84ae0d30d5154d1e73aaf9945c348d03_20466_620e1c48e451842e2f4135b7117821ad.webp 400w,
               /slides/estcomp/s06/folder_hu84ae0d30d5154d1e73aaf9945c348d03_20466_81e4eb609876936d8a5e708f395fd9b9.webp 760w,
               /slides/estcomp/s06/folder_hu84ae0d30d5154d1e73aaf9945c348d03_20466_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/estcomp/s06/folder_hu84ae0d30d5154d1e73aaf9945c348d03_20466_620e1c48e451842e2f4135b7117821ad.webp&#34;
               width=&#34;607&#34;
               height=&#34;471&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;h2 id=&#34;vis√£o-geral-sobre-o-markdown-e-rmarkdown&#34;&gt;Vis√£o geral sobre o Markdown e RMarkdown&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Markdown: Linguagem de marca√ß√£o
&lt;ul&gt;
&lt;li&gt;Exemplos de linguagem de marca√ß√£o: $ \LaTeX $, HTML, XML, etc.&lt;/li&gt;
&lt;li&gt;Objetivo principal: &amp;hellip;&lt;/li&gt;
&lt;li&gt;Criador: John Gruber&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h2 id=&#34;rmarkdown-pacote-r&#34;&gt;RMarkdown: Pacote R&lt;/h2&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;h2 id=&#34;introdu√ß√£o-ao-markdown&#34;&gt;Introdu√ß√£o ao Markdown&lt;/h2&gt;
&lt;h2 id=&#34;criando-se√ß√µes&#34;&gt;Criando Se√ß√µes&lt;/h2&gt;
&lt;!-- https://stackoverflow.com/questions/30861845/how-to-use-two-column-layout-with-reveal-js --&gt;
&lt;!-- &lt;style&gt; --&gt;
&lt;!-- .container{ --&gt;
&lt;!--   display: flex; --&gt;
&lt;!-- } --&gt;
&lt;!-- .col { --&gt;
&lt;!--   flex: 1; --&gt;
&lt;!-- } --&gt;
&lt;!-- &lt;/style&gt; --&gt;
&lt;style&gt;
.container{
  display: grid;
  grid-auto-flow: column;
}
&lt;/style&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;pre&gt;&lt;code&gt;# T√≠tulo 1
## T√≠tulo 2
### T√≠tulo 3
#### T√≠tulo 4
##### T√≠tulo 5
###### T√≠tulo 6
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;h1 id=&#34;t√≠tulo-1&#34;&gt;T√≠tulo 1&lt;/h1&gt;
&lt;h2 id=&#34;t√≠tulo-2&#34;&gt;T√≠tulo 2&lt;/h2&gt;
&lt;h3 id=&#34;t√≠tulo-3&#34;&gt;T√≠tulo 3&lt;/h3&gt;
&lt;h4 id=&#34;t√≠tulo-4&#34;&gt;T√≠tulo 4&lt;/h4&gt;
&lt;h5 id=&#34;t√≠tulo-5&#34;&gt;T√≠tulo 5&lt;/h5&gt;
&lt;h6 id=&#34;t√≠tulo-6&#34;&gt;T√≠tulo 6&lt;/h6&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;h2 id=&#34;introdu√ß√£o-ao-rmarkdown&#34;&gt;Introdu√ß√£o ao RMarkdown&lt;/h2&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;h1 id=&#34;quest√µes&#34;&gt;Quest√µes?&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;D√∫vidas e Sugest√µes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/#contact&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Contato&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Estat√≠stica Computacional</title>
      <link>http://bendeivide.github.io/slides/estcomp/s07/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/estcomp/s07/</guid>
      <description>
&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo03.jpg&#34;
  &gt;

&lt;h1 id=&#34;estat√≠stica-computacional&#34;&gt;Estat√≠stica Computacional&lt;/h1&gt;
&lt;p&gt;Aula 07 - Introdu√ß√£o ao Markdown no R
&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-user-tie  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ben D√™ivide&lt;/a&gt; | 
  &lt;i class=&#34;fas fa-school  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://www.ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;
&lt;/br&gt;

  &lt;i class=&#34;fas fa-book  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/courses/estcomp/&#34;&gt;Estat√≠stica Computacional&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;h2 id=&#34;selo-dc&#34;&gt;Selo DC&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/dc/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/estcomp/s07/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_57f4d021c573f1cdb22f5303fccfacd9.webp 400w,
               /slides/estcomp/s07/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_e3124639f3c96b16d12396d9954194c3.webp 760w,
               /slides/estcomp/s07/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/estcomp/s07/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_57f4d021c573f1cdb22f5303fccfacd9.webp&#34;
               width=&#34;385&#34;
               height=&#34;406&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;h2 id=&#34;acesso-a-todo-material&#34;&gt;Acesso a todo material&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/estcomp/&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/estcomp/s07/folder_hu84ae0d30d5154d1e73aaf9945c348d03_20466_620e1c48e451842e2f4135b7117821ad.webp 400w,
               /slides/estcomp/s07/folder_hu84ae0d30d5154d1e73aaf9945c348d03_20466_81e4eb609876936d8a5e708f395fd9b9.webp 760w,
               /slides/estcomp/s07/folder_hu84ae0d30d5154d1e73aaf9945c348d03_20466_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/estcomp/s07/folder_hu84ae0d30d5154d1e73aaf9945c348d03_20466_620e1c48e451842e2f4135b7117821ad.webp&#34;
               width=&#34;607&#34;
               height=&#34;471&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;section&gt;
&lt;h2&gt; Introdu√ß√£o ao Markdown &lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Markdown √© uma ferramenta de convers√£o de texto para HTML para escritores da web (&lt;a href=&#34;https://daringfireball.net/projects/markdown/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;John Gruber&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Objetivo: &lt;code&gt;Markdown =&amp;gt; HTML&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Criador: &lt;a href=&#34;https://daringfireball.net/projects/markdown/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;John Gruber&lt;/a&gt;, em 2004&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt; Introdu√ß√£o ao Markdown &lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A ideia do Markdown:
&lt;ul&gt;
&lt;li&gt;Texto de escrita simples&lt;/li&gt;
&lt;li&gt;Ferramenta escrita na linguagem &lt;code&gt;Perl&lt;/code&gt;, que converte o c√≥digo para &lt;code&gt;HTML&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;extens√£o do arquivo: &lt;code&gt;.md&lt;/code&gt; ou &lt;code&gt;.markdown&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt; Introdu√ß√£o ao Markdown &lt;/h2&gt;
&lt;p&gt;A ideia da linguagem de marca√ß√£o √©:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Escrito em &lt;code&gt;HTML&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;p&amp;gt;Este √© um par√°grafo com uma palavra em &amp;lt;b&amp;gt;negrito&amp;lt;/b&amp;gt; e outra em &amp;lt;i&amp;gt;it√°lico&amp;lt;/i&amp;gt;.&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Escrito em &lt;code&gt;Markdown&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;Este √© um par√°grafo com uma palavra em **negrito** e outra em *it√°lico*.
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Renderiza√ß√£o:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Este √© um par√°grafo com uma palavra em &lt;strong&gt;negrito&lt;/strong&gt; e outra em &lt;em&gt;it√°lico&lt;/em&gt;.&lt;/p&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;style&gt;
.container{
  display: grid;
  text-align: left;
  grid-auto-flow: column;
}
&lt;/style&gt;
&lt;section&gt;
&lt;h1&gt; Sintaxe &lt;/h1&gt;
&lt;hr&gt;
&lt;h2&gt; Criando Se√ß√µes &lt;/h2&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;# Se√ß√£o 1
## Subse√ß√£o 1
### Subsubse√ß√£o 1
#### Subsubsubse√ß√£o 2
##### ...
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;h1 id=&#34;se√ß√£o-1&#34;&gt;Se√ß√£o 1&lt;/h1&gt;
&lt;h2 id=&#34;subse√ß√£o-1&#34;&gt;Subse√ß√£o 1&lt;/h2&gt;
&lt;h3 id=&#34;subsubse√ß√£o-1&#34;&gt;Subsubse√ß√£o 1&lt;/h3&gt;
&lt;h4 id=&#34;subsubsubse√ß√£o-2&#34;&gt;Subsubsubse√ß√£o 2&lt;/h4&gt;
&lt;h5 id=&#34;heading&#34;&gt;&amp;hellip;&lt;/h5&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt; Outra forma &lt;/h2&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;Se√ß√£o 1
========

Subse√ß√£o 1
----------
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;h1 id=&#34;t√≠tulo-1&#34;&gt;T√≠tulo 1&lt;/h1&gt;
&lt;h2 id=&#34;t√≠tulo-2&#34;&gt;T√≠tulo 2&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt; Texto &lt;/h2&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;Texto em **negrito**!\
Texto em __negrito__!\
Texto em *it√°lico*\
Texto em _it√°lico_ \
Texto ~~taxado~~
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;p&gt;Texto em &lt;strong&gt;negrito&lt;/strong&gt;!&lt;br&gt;
Texto em &lt;strong&gt;negrito&lt;/strong&gt;!&lt;br&gt;
Texto em &lt;em&gt;it√°lico&lt;/em&gt;!&lt;br&gt;
Texto em &lt;em&gt;it√°lico&lt;/em&gt; &lt;br&gt;
Texto &lt;del&gt;taxado&lt;/del&gt; \&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt; Par√°grafos &lt;/h2&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;Texto do primeiro par√°grafo. \
Texto do segundo par√°grafo.

Ou ainda o par√°grafo pode 
ser separado acrescentando 
dois espa√ßos na √∫ltima linha

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;p&gt;Texto do primeiro par√°grafo. &lt;br&gt;
Texto do segundo par√°grafo.&lt;/p&gt;
&lt;p&gt;Ou ainda o par√°grafo pode
ser separado acrescentando
dois espa√ßos na √∫ltima linha&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt; Listas n√£o ordenadas &lt;/h2&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;- Primeiro item da lista 1
- Segundo item da lista 1

+ Primeiro item da lista 2
+ Segundo item da lista 2

* Primeiro item da lista 3
* Segundo item da lista 3
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;ul&gt;
&lt;li&gt;Primeiro item da lista 1&lt;/li&gt;
&lt;li&gt;Segundo item da lista 1&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Primeiro item da lista 2&lt;/li&gt;
&lt;li&gt;Segundo item da lista 2&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Primeiro item da lista 3&lt;/li&gt;
&lt;li&gt;Segundo item da lista 3&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt; Listas com checagem &lt;/h2&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;- [X] Primeiro OK!
- [ ] Segundo pendente
- [ ] Segundo tamb√©m


&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Primeiro OK!&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Segundo pendente&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Segundo tamb√©m&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt; Listas e sublistas n√£o ordenadas &lt;/h2&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;- Lista 1
  - Sublista 1.1
  - Sublista 1.2
    - Subsublista 1.2.1
- Lista 2
  - Sublista 2.1
  - Sublista 2.2
    - Subsublista 2.2.1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;ul&gt;
&lt;li&gt;Lista 1
&lt;ul&gt;
&lt;li&gt;Sublista 1.1&lt;/li&gt;
&lt;li&gt;Sublista 1.2
&lt;ul&gt;
&lt;li&gt;Subsublista 1.2.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Lista 2
&lt;ul&gt;
&lt;li&gt;Sublista 2.1&lt;/li&gt;
&lt;li&gt;Sublista 2.2
&lt;ul&gt;
&lt;li&gt;Subsublista 2.2.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt; Listas ordenadas &lt;/h2&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;1. Primeiro 
2. Segundo 
3. Terceiro
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;ol&gt;
&lt;li&gt;Primeiro&lt;/li&gt;
&lt;li&gt;Segundo&lt;/li&gt;
&lt;li&gt;Terceiro&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt; Cita√ß√µes &lt;/h2&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;&amp;gt; Cita√ß√£o em n√≠vel 1
&amp;gt;&amp;gt; Cita√ß√£o em n√≠vel 2
&amp;gt;&amp;gt;&amp;gt; Cita√ß√£o em n√≠vel 3
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;Cita√ß√£o em n√≠vel 1&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Cita√ß√£o em n√≠vel 2&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Cita√ß√£o em n√≠vel 3&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;Linhas horizontais&lt;/h2&gt;
&lt;p&gt;Tr√™s ou quatro tra√ßos (ou asteriscos), formam uma linha:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;Primeira linha:

----

Segunda Linha:

****
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2&gt; Links &lt;/h2&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;- [Ben D√™ivide](https://bendeivide.github.io/)
- Outra forma: [Ben D√™ivide][link01]

   [link01]: https://bendeivide.github.io/
   
- Outra forma: [Ben D√™ivide]

   [Ben D√™ivide]: https://bendeivide.github.io/
   
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ben D√™ivide&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Outra forma: &lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ben D√™ivide&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Outra forma: &lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ben D√™ivide&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt; Imagem sem Nome &lt;/h2&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;
![](./imagens/rstudio.png)
   
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/estcomp/s07/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_0cd5d2661e8fc6dbb49dd886a81160b2.webp 400w,
               /slides/estcomp/s07/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_5bd7ddd151c2f4da3fa79a2fa5972624.webp 760w,
               /slides/estcomp/s07/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/estcomp/s07/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_0cd5d2661e8fc6dbb49dd886a81160b2.webp&#34;
               width=&#34;170&#34;
               height=&#34;170&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt; Imagem com Nome &lt;/h2&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;
![](./imagens/rstudio.png &amp;quot;IDE RStudio&amp;quot;)
   
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-ide-rstudio&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;IDE RStudio&#34; srcset=&#34;
               /slides/estcomp/s07/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_0cd5d2661e8fc6dbb49dd886a81160b2.webp 400w,
               /slides/estcomp/s07/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_5bd7ddd151c2f4da3fa79a2fa5972624.webp 760w,
               /slides/estcomp/s07/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/estcomp/s07/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_0cd5d2661e8fc6dbb49dd886a81160b2.webp&#34;
               width=&#34;170&#34;
               height=&#34;170&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      IDE RStudio
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt; Imagem estilo de refer√™nica &lt;/h2&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;
![][rstudio]

  [rstudio]: ./imagens/rstudio.png &amp;quot;IDE RStudio&amp;quot;
   
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-ide-rstudio&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;IDE RStudio&#34; srcset=&#34;
               /slides/estcomp/s07/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_0cd5d2661e8fc6dbb49dd886a81160b2.webp 400w,
               /slides/estcomp/s07/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_5bd7ddd151c2f4da3fa79a2fa5972624.webp 760w,
               /slides/estcomp/s07/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/estcomp/s07/rstudio_hucbfa44c25ae8fec7feb2f58ef04a2141_39544_0cd5d2661e8fc6dbb49dd886a81160b2.webp&#34;
               width=&#34;170&#34;
               height=&#34;170&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      IDE RStudio
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt; C√≥digos &lt;/h2&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;
```python
print(&#39;Ola, Mundo!&#39;)
```

```r
print(&#39;Ola, Mundo!&#39;)
```

```html
&amp;lt;p&amp;gt; Isso est√° em &amp;lt;i&amp;gt;negrito&amp;lt;/i&amp;gt; ! &amp;lt;/p&amp;gt;
```

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;ul&gt;
&lt;li&gt;C√≥digo &lt;code&gt;python&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(&#39;Ola, Mundo!&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;C√≥digo &lt;code&gt;R&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;print(&#39;Ola, Mundo!&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;C√≥digo &lt;code&gt;html&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;p&amp;gt; Isso est√° em &amp;lt;i&amp;gt;negrito&amp;lt;/i&amp;gt; ! &amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt; Tabelas &lt;/h2&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;
| Col1     | Col2     |   Col3   |
|:---------|:--------:|---------:|
| Direita  | centro   | esquerda |
| B        |     D    |        F |

   
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;style type=&#34;text/css&#34;&gt;
.tg  {border-collapse:collapse;border-color:#93a1a1;border-spacing:0;}
.tg td{background-color:#fdf6e3;border-bottom-width:1px;border-color:#93a1a1;border-style:solid;border-top-width:1px;
  border-width:0px;color:#002b36;font-family:Arial, sans-serif;font-size:14px;overflow:hidden;padding:13px 13px;
  word-break:normal;}
.tg th{background-color:#657b83;border-bottom-width:1px;border-color:#93a1a1;border-style:solid;border-top-width:1px;
  border-width:0px;color:#fdf6e3;font-family:Arial, sans-serif;font-size:14px;font-weight:normal;overflow:hidden;
  padding:13px 13px;word-break:normal;}
.tg .tg-z4i2{border-color:#ffffff;text-align:left;vertical-align:middle}
.tg .tg-wl5s{background-color:#eee8d5;border-color:#ffffff;text-align:left;vertical-align:middle}
.tg .tg-i2ob{background-color:#eee8d5;border-color:#ffffff;text-align:right;vertical-align:middle}
.tg .tg-44qx{border-color:#ffffff;font-weight:bold;text-align:center;vertical-align:middle}
.tg .tg-0w69{border-color:#ffffff;text-align:right;vertical-align:middle}
.tg .tg-2eyt{border-color:#ffffff;font-weight:bold;text-align:left;vertical-align:middle}
.tg .tg-ung0{border-color:#ffffff;font-weight:bold;text-align:right;vertical-align:middle}
.tg .tg-ttci{background-color:#eee8d5;border-color:#ffffff;text-align:center;vertical-align:middle}
.tg .tg-v0mg{border-color:#ffffff;text-align:center;vertical-align:middle}
&lt;/style&gt;
&lt;table class=&#34;tg&#34;&gt;
&lt;thead&gt;
  &lt;tr&gt;
    &lt;th class=&#34;tg-2eyt&#34;&gt;Col1&lt;/th&gt;
    &lt;th class=&#34;tg-44qx&#34;&gt;Col2&lt;/th&gt;
    &lt;th class=&#34;tg-ung0&#34;&gt;Col3&lt;/th&gt;
  &lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
  &lt;tr&gt;
    &lt;td class=&#34;tg-wl5s&#34;&gt;Direita&lt;/td&gt;
    &lt;td class=&#34;tg-ttci&#34;&gt;centro&lt;/td&gt;
    &lt;td class=&#34;tg-i2ob&#34;&gt;esquerda&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class=&#34;tg-z4i2&#34;&gt;B&lt;/td&gt;
    &lt;td class=&#34;tg-v0mg&#34;&gt;D&lt;/td&gt;
    &lt;td class=&#34;tg-0w69&#34;&gt;F&lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;h1 id=&#34;quest√µes&#34;&gt;Quest√µes?&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;D√∫vidas e Sugest√µes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/#contact&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Contato&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Estat√≠stica e Probabilidade</title>
      <link>http://bendeivide.github.io/slides/profmat-est/s02/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/profmat-est/s02/</guid>
      <description>
&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap.png&#34;
  &gt;

&lt;h1 id=&#34;estat√≠stica-e-probabilidade&#34;&gt;Estat√≠stica e Probabilidade&lt;/h1&gt;
&lt;p&gt;Aula 02 - Defini√ß√µes gerais e t√©cnicas de somat√≥rio
&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-user-tie  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ben D√™ivide&lt;/a&gt; | 
  &lt;i class=&#34;fas fa-school  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://www.ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;
&lt;/br&gt;

  &lt;i class=&#34;fas fa-book  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/courses/epaec/&#34;&gt;Estat√≠stica e Probabilidade&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;selo-dc&#34;&gt;Selo DC&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/dc/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/profmat-est/s02/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_57f4d021c573f1cdb22f5303fccfacd9.webp 400w,
               /slides/profmat-est/s02/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_e3124639f3c96b16d12396d9954194c3.webp 760w,
               /slides/profmat-est/s02/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/profmat-est/s02/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_57f4d021c573f1cdb22f5303fccfacd9.webp&#34;
               width=&#34;385&#34;
               height=&#34;406&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;!-- https://revealjs.com/transitions/ --&gt;
&lt;section data-transition=&#34;zoom&#34;&gt;
  &lt;h2&gt;Introdu√ß√£o&lt;/h2&gt;
  &lt;p&gt; Nossa vida atual √© assim hoje ... &lt;/p&gt;
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  &lt;figure  id=&#34;figure-imagens-gratispngcom&#34;&gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Imagens: gratispng.com&#34; srcset=&#34;
                 /slides/profmat-est/s02/programador_hu85c5d9c20779881f2ae8deae4e3d792a_590442_0769bc3bdb3596bca3f6a01e3f6b0394.webp 400w,
                 /slides/profmat-est/s02/programador_hu85c5d9c20779881f2ae8deae4e3d792a_590442_198182e3dda60929a57504574af4d842.webp 760w,
                 /slides/profmat-est/s02/programador_hu85c5d9c20779881f2ae8deae4e3d792a_590442_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
                 src=&#34;http://bendeivide.github.io/slides/profmat-est/s02/programador_hu85c5d9c20779881f2ae8deae4e3d792a_590442_0769bc3bdb3596bca3f6a01e3f6b0394.webp&#34;
                 width=&#34;530&#34;
                 height=&#34;380&#34;
                 loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;figcaption&gt;
        Imagens: gratispng.com
      &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/section&gt;
&lt;section data-transition-speed=&#34;fast&#34;&gt;
&lt;h2&gt;Introdu√ß√£o&lt;/h2&gt;
&lt;p&gt; Nossa vida atual √© assim hoje ... &lt;/p&gt;














&lt;figure  id=&#34;figure-imagens-gratispngcom&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Imagens: gratispng.com&#34; srcset=&#34;
               /slides/profmat-est/s02/dados_hu887ba6b7f9c0e641f75b5f82feacab54_163105_453a07f9082a2771b97ce6d020dc4ec8.webp 400w,
               /slides/profmat-est/s02/dados_hu887ba6b7f9c0e641f75b5f82feacab54_163105_1d078c7aaef4a058d23d40388727b8be.webp 760w,
               /slides/profmat-est/s02/dados_hu887ba6b7f9c0e641f75b5f82feacab54_163105_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/profmat-est/s02/dados_hu887ba6b7f9c0e641f75b5f82feacab54_163105_453a07f9082a2771b97ce6d020dc4ec8.webp&#34;
               width=&#34;530&#34;
               height=&#34;380&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Imagens: gratispng.com
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/section&gt;
&lt;section data-transition-speed=&#34;fast&#34;&gt;
&lt;h2&gt;Introdu√ß√£o&lt;/h2&gt;
&lt;p&gt; Usamos para tudo ... &lt;/p&gt;














&lt;figure  id=&#34;figure-imagens-gratispngcom&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Imagens: gratispng.com&#34; srcset=&#34;
               /slides/profmat-est/s02/emojis_huf8050f69e6ce2d326df2bbe686aea7ea_72356_5f58a4399a031452fdf2f7b4567ce22a.webp 400w,
               /slides/profmat-est/s02/emojis_huf8050f69e6ce2d326df2bbe686aea7ea_72356_ea8f7f14ad53afdff9b10b7854945999.webp 760w,
               /slides/profmat-est/s02/emojis_huf8050f69e6ce2d326df2bbe686aea7ea_72356_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/profmat-est/s02/emojis_huf8050f69e6ce2d326df2bbe686aea7ea_72356_5f58a4399a031452fdf2f7b4567ce22a.webp&#34;
               width=&#34;530&#34;
               height=&#34;380&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Imagens: gratispng.com
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/section&gt;
&lt;section data-transition-speed=&#34;fast&#34;&gt;
&lt;h2&gt;Introdu√ß√£o&lt;/h2&gt;
&lt;p&gt; Pesquisar ... &lt;/p&gt;














&lt;figure  id=&#34;figure-imagens-gratispngcom&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Imagens: gratispng.com&#34; srcset=&#34;
               /slides/profmat-est/s02/searching_hu749c487df7c6eff3fe551052b606a39d_94218_979a7958ebfc5597f19575ecd9f05006.webp 400w,
               /slides/profmat-est/s02/searching_hu749c487df7c6eff3fe551052b606a39d_94218_4f5e7490b68d33a29e8fb42d353e8930.webp 760w,
               /slides/profmat-est/s02/searching_hu749c487df7c6eff3fe551052b606a39d_94218_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/profmat-est/s02/searching_hu749c487df7c6eff3fe551052b606a39d_94218_979a7958ebfc5597f19575ecd9f05006.webp&#34;
               width=&#34;530&#34;
               height=&#34;380&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Imagens: gratispng.com
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/section&gt;
&lt;section data-transition-speed=&#34;fast&#34;&gt;
&lt;h2&gt;Introdu√ß√£o&lt;/h2&gt;
&lt;p&gt; Contratempos ... &lt;/p&gt;














&lt;figure  id=&#34;figure-imagens-gratispngcom&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Imagens: gratispng.com&#34; srcset=&#34;
               /slides/profmat-est/s02/quebrando_pc_hub4a3ac35862bea0b486522facdebe990_189986_dd3a418c0515058ffb1d8bd7f924ff87.webp 400w,
               /slides/profmat-est/s02/quebrando_pc_hub4a3ac35862bea0b486522facdebe990_189986_d8e1aa3e09274d0d674507d64e36b02f.webp 760w,
               /slides/profmat-est/s02/quebrando_pc_hub4a3ac35862bea0b486522facdebe990_189986_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/profmat-est/s02/quebrando_pc_hub4a3ac35862bea0b486522facdebe990_189986_dd3a418c0515058ffb1d8bd7f924ff87.webp&#34;
               width=&#34;530&#34;
               height=&#34;380&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Imagens: gratispng.com
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;!-- https://revealjs.com/transitions/ --&gt;
&lt;section data-transition=&#34;zoom&#34;&gt;
  &lt;h2&gt;Dados&lt;/h2&gt;
  &lt;p&gt; Em meio a tudo isso, uma coisa acontece ... &lt;/p&gt;
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  &lt;figure  id=&#34;figure-imagens-gratispngcom&#34;&gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Imagens: gratispng.com&#34; srcset=&#34;
                 /slides/profmat-est/s02/dados02_huaa69fdfff67864a40a8e5e6a627be466_18369921_7684bd630a966bea4c66d8f3e27710af.webp 400w,
                 /slides/profmat-est/s02/dados02_huaa69fdfff67864a40a8e5e6a627be466_18369921_88e47f38d0b957e637a120fc53fed28d.webp 760w,
                 /slides/profmat-est/s02/dados02_huaa69fdfff67864a40a8e5e6a627be466_18369921_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
                 src=&#34;http://bendeivide.github.io/slides/profmat-est/s02/dados02_huaa69fdfff67864a40a8e5e6a627be466_18369921_7684bd630a966bea4c66d8f3e27710af.webp&#34;
                 width=&#34;530&#34;
                 height=&#34;380&#34;
                 loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;figcaption&gt;
        Imagens: gratispng.com
      &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/section&gt;
&lt;section data-transition-speed=&#34;fast&#34;&gt;
&lt;h2&gt;Dados&lt;/h2&gt;
&lt;p&gt; Essas informa√ß√µes s√£o processadas ... &lt;/p&gt;














&lt;figure  id=&#34;figure-imagens-gratispngcom&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Imagens: gratispng.com&#34; srcset=&#34;
               /slides/profmat-est/s02/infra_comp_hub6808cefc104d832c78f51c1fe99f225_205407_d992efe6d9441dba596dd57504563239.webp 400w,
               /slides/profmat-est/s02/infra_comp_hub6808cefc104d832c78f51c1fe99f225_205407_cc5813b7ab49e6ce51f87ec864d8bd40.webp 760w,
               /slides/profmat-est/s02/infra_comp_hub6808cefc104d832c78f51c1fe99f225_205407_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/profmat-est/s02/infra_comp_hub6808cefc104d832c78f51c1fe99f225_205407_d992efe6d9441dba596dd57504563239.webp&#34;
               width=&#34;530&#34;
               height=&#34;380&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Imagens: gratispng.com
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/section&gt;
&lt;section data-transition-speed=&#34;fast&#34;&gt;
&lt;h2&gt;Dados&lt;/h2&gt;
&lt;p&gt; Analisadas ... &lt;/p&gt;














&lt;figure  id=&#34;figure-imagens-gratispngcom&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Imagens: gratispng.com&#34; srcset=&#34;
               /slides/profmat-est/s02/exp_user_hu8f5c0e0d7f084260f0d10501891b1393_29133_6ef8d184a5fe1679c0d6b7abc1011d81.webp 400w,
               /slides/profmat-est/s02/exp_user_hu8f5c0e0d7f084260f0d10501891b1393_29133_87aaaa3da49d73051be18accb8582e5a.webp 760w,
               /slides/profmat-est/s02/exp_user_hu8f5c0e0d7f084260f0d10501891b1393_29133_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/profmat-est/s02/exp_user_hu8f5c0e0d7f084260f0d10501891b1393_29133_6ef8d184a5fe1679c0d6b7abc1011d81.webp&#34;
               width=&#34;530&#34;
               height=&#34;380&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Imagens: gratispng.com
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/section&gt;
&lt;section data-transition-speed=&#34;fast&#34;&gt;
&lt;h2&gt;Dados&lt;/h2&gt;
&lt;p&gt; E assim, todos esses dados ... &lt;/p&gt;














&lt;figure  id=&#34;figure-imagens-gratispngcom&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Imagens: gratispng.com&#34; srcset=&#34;
               /slides/profmat-est/s02/analise02_hu9ea620b0e1d37040944340d01dd78f2b_515291_8778f4bc4322cd248911f541b900c98e.webp 400w,
               /slides/profmat-est/s02/analise02_hu9ea620b0e1d37040944340d01dd78f2b_515291_7a54132dfe8825d6cab37da7f5bfd4ed.webp 760w,
               /slides/profmat-est/s02/analise02_hu9ea620b0e1d37040944340d01dd78f2b_515291_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/profmat-est/s02/analise02_hu9ea620b0e1d37040944340d01dd78f2b_515291_8778f4bc4322cd248911f541b900c98e.webp&#34;
               width=&#34;530&#34;
               height=&#34;380&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Imagens: gratispng.com
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/section&gt;
&lt;section data-transition-speed=&#34;fast&#34;&gt;
&lt;h2&gt;Dados&lt;/h2&gt;
&lt;p&gt; ... que os usu√°rios repassam ... &lt;/p&gt;














&lt;figure  id=&#34;figure-imagens-gratispngcom&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Imagens: gratispng.com&#34; srcset=&#34;
               /slides/profmat-est/s02/analise03_hub2e1dffd2cc65cb9ada91baab78eae39_412393_ecbf33cd9eab19e34cbc14286fd53e75.webp 400w,
               /slides/profmat-est/s02/analise03_hub2e1dffd2cc65cb9ada91baab78eae39_412393_6104309efe8272d3b6d06f70cad0b52b.webp 760w,
               /slides/profmat-est/s02/analise03_hub2e1dffd2cc65cb9ada91baab78eae39_412393_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/profmat-est/s02/analise03_hub2e1dffd2cc65cb9ada91baab78eae39_412393_ecbf33cd9eab19e34cbc14286fd53e75.webp&#34;
               width=&#34;530&#34;
               height=&#34;380&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Imagens: gratispng.com
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/section&gt;
&lt;section data-transition-speed=&#34;fast&#34;&gt;
&lt;h1&gt;Dados &gt; \$&lt;/h1&gt;
&lt;/section&gt;
&lt;section data-transition-speed=&#34;fast&#34;&gt;
&lt;h2&gt;Dados&lt;/h2&gt;
&lt;p&gt; E a√≠, o Vale do sil√≠cio √© o que tem que ser! &lt;/p&gt;














&lt;figure  id=&#34;figure-imagens-oficinadanetcombr&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Imagens: oficinadanet.com.br&#34; srcset=&#34;
               /slides/profmat-est/s02/vale_silicio_hu2e878ae56d4a55650a6917f7b07e2ae0_84455_e4d52bf7f5244f20b8c1cbb9bbc42621.webp 400w,
               /slides/profmat-est/s02/vale_silicio_hu2e878ae56d4a55650a6917f7b07e2ae0_84455_927ece7d5689dccd421079d10c92cf95.webp 760w,
               /slides/profmat-est/s02/vale_silicio_hu2e878ae56d4a55650a6917f7b07e2ae0_84455_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/profmat-est/s02/vale_silicio_hu2e878ae56d4a55650a6917f7b07e2ae0_84455_e4d52bf7f5244f20b8c1cbb9bbc42621.webp&#34;
               width=&#34;530&#34;
               height=&#34;380&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Imagens: oficinadanet.com.br
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;!-- https://revealjs.com/transitions/ --&gt;
&lt;section data-transition=&#34;zoom&#34;&gt;
  &lt;h2&gt;Motiva√ß√£o inicial &lt;/h2&gt;
  &lt;p&gt; Defini√ß√µes gerais da estat√≠stica (Exemplo do livro EPAEC) &lt;/p&gt;
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  &lt;figure  &gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
                 /slides/profmat-est/s02/epaec_exerc5.19_huf42f90654072e146aede07d81ef72130_118873_d2eb6c328bbca59128eb008a44841e3c.webp 400w,
                 /slides/profmat-est/s02/epaec_exerc5.19_huf42f90654072e146aede07d81ef72130_118873_2422affad744e4d2bee6a7971f41e9ec.webp 760w,
                 /slides/profmat-est/s02/epaec_exerc5.19_huf42f90654072e146aede07d81ef72130_118873_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
                 src=&#34;http://bendeivide.github.io/slides/profmat-est/s02/epaec_exerc5.19_huf42f90654072e146aede07d81ef72130_118873_d2eb6c328bbca59128eb008a44841e3c.webp&#34;
                 width=&#34;830&#34;
                 height=&#34;420&#34;
                 loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/figure&gt;
&lt;/section&gt;
&lt;section data-transition-speed=&#34;fast&#34;&gt;
&lt;h2&gt;Motiva√ß√£o inicial&lt;/h2&gt;
&lt;p&gt; Defini√ß√µes gerais da estat√≠stica... &lt;/p&gt;














&lt;figure  id=&#34;figure-imagem-livro-epaec&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Imagem: Livro EPAEC&#34; srcset=&#34;
               /slides/profmat-est/s02/prodcons_hu5910991e216a6cca12abe1fdcd74a6f7_5529_41d76642fcdda6f48ac510a3ac9a6405.webp 400w,
               /slides/profmat-est/s02/prodcons_hu5910991e216a6cca12abe1fdcd74a6f7_5529_18a6dc64c476a8c99164f36faf38e895.webp 760w,
               /slides/profmat-est/s02/prodcons_hu5910991e216a6cca12abe1fdcd74a6f7_5529_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/profmat-est/s02/prodcons_hu5910991e216a6cca12abe1fdcd74a6f7_5529_41d76642fcdda6f48ac510a3ac9a6405.webp&#34;
               width=&#34;530&#34;
               height=&#34;380&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Imagem: Livro EPAEC
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;m√©todo-cient√≠fico&#34;&gt;M√©todo Cient√≠fico&lt;/h2&gt;
&lt;iframe width=&#34;760&#34; height=&#34;515&#34; src=&#34;https://www.youtube.com/embed/QPeS1v7l6yk&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;!-- https://revealjs.com/transitions/ --&gt;
&lt;section data-transition=&#34;zoom&#34;&gt;
  &lt;h2&gt;Defini√ß√µes Gerais da Estat√≠stica&lt;/h2&gt;
  &lt;aside class=&#34;notes&#34;&gt;
    üìù Mostrar a rela√ß√£o do M√©todo cient√≠fico com as Defini√ß√µes gerais da estat√≠stica (Smoothdraw)
  &lt;/aside&gt;
  &lt;iframe width=&#34;760&#34; height=&#34;515&#34; src=&#34;https://www.youtube.com/embed/mASLUwyaC5Q&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/section&gt;
&lt;section data-transition-speed=&#34;fast&#34;&gt;
&lt;h2&gt;Defini√ß√µes Gerais da Estat√≠stica&lt;/h2&gt;
&lt;aside class=&#34;notes&#34;&gt;
    üìù Mostrar a rela√ß√£o do M√©todo cient√≠fico com as Defini√ß√µes gerais da estat√≠stica (Smoothdraw)
  &lt;/aside&gt;
&lt;iframe width=&#34;760&#34; height=&#34;515&#34; src=&#34;https://www.youtube.com/embed/xvORKHMVUr8&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/section&gt;
&lt;hr&gt;
&lt;h2 id=&#34;natureza-das-vari√°veis&#34;&gt;Natureza das vari√°veis&lt;/h2&gt;
&lt;iframe width=&#34;760&#34; height=&#34;515&#34; src=&#34;https://www.youtube.com/embed/LIg6uLzCRmU&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;t√©cnicas-de-somat√≥rio&#34;&gt;T√©cnicas de Somat√≥rio&lt;/h2&gt;
  &lt;aside class=&#34;notes&#34;&gt;
    üìù Fazer alguns exemplos na sala digital (Smoothdraw)
  &lt;/aside&gt;
&lt;iframe width=&#34;760&#34; height=&#34;515&#34; src=&#34;https://www.youtube.com/embed/tWCxCyZZHes&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h1 id=&#34;quest√µes&#34;&gt;Quest√µes?&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;D√∫vidas e Sugest√µes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/#contact&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Contato&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;!-- https://revealjs.com/transitions/ --&gt;
&lt;section data-transition=&#34;zoom&#34;&gt;
  &lt;h1&gt;Pr√≥ximas aulas...&lt;/h1&gt;
&lt;/section&gt;
&lt;section data-transition-speed=&#34;fast&#34;&gt;
&lt;a href=&#34;http://bendeivide.github.io/courses/epaec&#34; target=&#34;_blank&#34;&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/profmat-est/s02/ben_hu087225affb9399e037f09661c4d0adbd_219224_5c10d459c8ddc0416f506a4ad838a085.webp 400w,
               /slides/profmat-est/s02/ben_hu087225affb9399e037f09661c4d0adbd_219224_29ebba9a3e515b23ea411bffea18d2f1.webp 760w,
               /slides/profmat-est/s02/ben_hu087225affb9399e037f09661c4d0adbd_219224_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/profmat-est/s02/ben_hu087225affb9399e037f09661c4d0adbd_219224_5c10d459c8ddc0416f506a4ad838a085.webp&#34;
               width=&#34;630&#34;
               height=&#34;480&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;
&lt;p&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec&#34; target=&#34;_blank&#34;&gt;bendeivide.github.io/courses/epaec&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;!-- &lt;section&gt; --&gt;
&lt;!--   &lt;h2&gt;Some Slide&lt;/h2&gt; --&gt;
&lt;!--   &lt;aside class=&#34;notes&#34;&gt; --&gt;
&lt;!--     Anota√ß√µes no Visualizador (Clique em S) üìù --&gt;
&lt;!--   &lt;/aside&gt; --&gt;
&lt;!-- &lt;/section&gt; --&gt;
&lt;!-- ## Anima√ß√£o --&gt;
&lt;!-- &lt;section data-auto-animate&gt; --&gt;
&lt;!--   &lt;h1&gt;Auto-Animate&lt;/h1&gt; --&gt;
&lt;!-- &lt;/section&gt; --&gt;
&lt;!-- &lt;section data-auto-animate&gt; --&gt;
&lt;!--   &lt;h1 style=&#34;margin-top: 100px; color: red;&#34;&gt;Auto-Animate&lt;/h1&gt; --&gt;
&lt;!-- &lt;/section&gt; --&gt;
</description>
    </item>
    
    <item>
      <title>Estat√≠stica e Probabilidade</title>
      <link>http://bendeivide.github.io/slides/profmat-est/s03/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/profmat-est/s03/</guid>
      <description>
&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap.png&#34;
  &gt;

&lt;h1 id=&#34;estat√≠stica-e-probabilidade&#34;&gt;Estat√≠stica e Probabilidade&lt;/h1&gt;
&lt;p&gt;Aula 03 - Coleta, organiza√ß√£o e apresenta√ß√£o de dados
&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-user-tie  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ben D√™ivide&lt;/a&gt; | 
  &lt;i class=&#34;fas fa-school  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://www.ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;
&lt;/br&gt;

  &lt;i class=&#34;fas fa-book  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/courses/epaec/&#34;&gt;Estat√≠stica e Probabilidade&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;selo-dc&#34;&gt;Selo DC&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/dc/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/profmat-est/s03/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_57f4d021c573f1cdb22f5303fccfacd9.webp 400w,
               /slides/profmat-est/s03/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_e3124639f3c96b16d12396d9954194c3.webp 760w,
               /slides/profmat-est/s03/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/profmat-est/s03/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_57f4d021c573f1cdb22f5303fccfacd9.webp&#34;
               width=&#34;385&#34;
               height=&#34;406&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;section&gt;
  &lt;h2&gt;Motiva√ß√£o inicial&lt;/h2&gt;
  &lt;h3&gt; Dados (Primeiro tipo) &lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;##    [1] 100.93730855  90.78737290  31.43347250  70.04161421 114.72725633
##    [6] 119.48971504  39.59619123  81.81619913  18.66636591  87.17608029
##   [11] 155.08897515 137.78907540  88.08832220 149.37223517 137.06950642
##   [16] 104.46736332  52.25280719  90.24248077 146.27606310 124.14892624
##   [21]  70.18446816  -9.26434191  66.25670311  -5.95305960  36.74009892
##   [26]  81.31692224  65.62222848  56.39205866  94.91194969  87.31097349
##   [31]   7.31297728  96.10269670 148.42831703 109.24629800  31.00282108
##   [36]  28.22428188 118.10436143  12.04566231  83.77279952  67.42185057
##   [41] 154.32756997  61.87275600  58.56687325 141.72369515  51.61740066
##   [46]  98.55923323 111.62625763  84.93956592  66.11927084 132.76138181
##   [51]  79.96812265  83.27217175 168.39769766 206.88835518 125.29096323
##   [56] 139.31711921  54.88940279 126.64484962  67.70528732 114.54937442
##   [61]  38.12027656  77.19118624  58.48386726 117.00578218 153.31881978
##   [66] 160.80629190 136.78453288  75.93956913 128.13723814  37.68401441
##   [71] 119.04611063  28.47863736  47.57772476  89.07482247  25.50318816
##   [76] 158.63531406  26.00864892  78.48060920  47.41806790 176.12931720
##   [81] 129.64140273  88.86692455 135.64471381 135.83004169 122.01209322
##   [86] 107.94153107 132.98820692 211.02598315  40.80274630  96.30220828
##   [91]  79.18226626  90.42588281 103.47723907 157.76741590 129.74786735
##   [96]  29.01774458  19.66613773 144.64629498 107.40839776 161.35141951
##  [101]  61.90978304 120.96877029  48.00283177 135.57869830  68.33934925
##  [106] 128.15873322 133.04933429  17.09745713 151.40839885 156.39768070
##  [111]  35.99226983 156.44341137  76.79327364  84.21198952 146.21465734
##  [116] 103.85723620 151.99618026 137.09431034 162.77724291 147.54594832
##  [121]  75.93171964 110.14408890  98.41301281  40.22098498 131.18406184
##  [126]  54.25977582 112.43790039  46.86886034  81.80088764  39.65025733
##  [131] 171.46063907 131.67179455   0.15921912  65.90839135  76.99722603
##  [136]  50.84654029 124.76658564 136.29087501 133.36493659 147.73932182
##  [141]  16.23339104  39.74073038   1.83737554 173.53761549 118.62361693
##  [146] 153.29396670 126.53249342 105.09917229 166.88912329 104.36173842
##  [151]  80.44478963  87.50662577 157.75523729  56.76363801  56.66608288
##  [156] -16.05085152 130.44150845 157.50030241  40.02011641  20.99996227
##  [161] 132.65830968  72.52957574 126.05272627  65.02984668  78.05453426
##  [166]  66.13403519 147.95705974  26.59133353 109.18819463  28.24264087
##  [171]  43.13000509  79.26773366 107.19671441 153.10121653  71.46030486
##  [176] 163.85906882 111.41446603  84.55934677 147.99145653 127.44111874
##  [181] 121.27565469 132.17500176  31.98469282  90.07469468 130.96513384
##  [186] 203.41048025  84.73576229 114.06228061 134.56586684 102.31807191
##  [191] 105.65146808 149.76659371  65.94243193  36.14713767  26.56511251
##  [196]  84.32629667  14.81702537  32.47426719  44.89531614  45.02284927
##  [201] 160.77568881 116.54382426 169.51375596 143.60234925  45.95914887
##  [206] 124.79107957 152.63137781  36.26750249  90.31666358  35.24581787
##  [211] 107.09401423 163.08575260  78.42498360   8.86437052 117.62719794
##  [216]  32.57742793 135.38441590  79.45545316  77.69774100  47.94218492
##  [221]  83.53876419  85.85891879 121.62145627  84.61964525  97.16818461
##  [226] 136.67577101 104.86558098 181.54458683 128.03053495 166.47823822
##  [231]  86.05882522  36.66342279  87.54258030 100.89942073 118.85363636
##  [236] 139.80042788  57.96612915 -10.27358754  43.59720045  32.93450206
##  [241] 180.25570214 137.22118642 143.10411030 119.75779077 125.45593482
##  [246]  93.87249371 104.62923236  82.10600428  82.01723878 151.42853604
##  [251] 153.89462962 146.58906076  26.96030665  54.69622119  65.98260843
##  [256] 153.15830184  65.37934239  43.31858674  45.26922831  49.35481906
##  [261] 120.51386629 123.88702210 -16.49397725 100.81277326 149.01767616
##  [266] 140.31741324 105.98004444 -21.83078022 101.55112381  83.21266510
##  [271]  86.81119190  82.20737696  75.94226009 111.13677339 221.49551593
##  [276] 174.81490594  64.13958986  76.64730499 133.14617264 215.00884455
##  [281] 116.37550706 103.19317408  43.02195300 159.02051018 102.06942385
##  [286]  39.32032183 103.65978883  87.13377028 113.34032055 169.38621629
##  [291] 109.65398175 129.61583113  58.50127365 119.62866408 119.24338053
##  [296] 152.55223329 157.78987423  48.27810205  87.27659671 163.68421330
##  [301] 175.12723195 129.52047336  68.46572743 139.61747686 106.26922851
##  [306] 116.13774856  77.72083953 138.34219672  29.82484891  41.19766102
##  [311] 125.57982346 165.83826319 219.64564735  96.61152958  89.81074668
##  [316] 199.82172261 177.16088972  38.58311869 232.22439961 137.85068541
##  [321] 152.76725961 147.89724477 141.69395288  91.53622150  79.77831785
##  [326] 114.78007869  88.40627464  77.59608842 101.11553983 102.22336486
##  [331] 124.03605826 131.78099276  -0.03711965  65.46722481  93.46774053
##  [336]  82.78741085  97.37935880 104.80619603 113.32035266 127.73967376
##  [341] 161.77229393 114.25666907  77.06035361 131.17390109  63.80024542
##  [346] 180.97093517  69.16632949 119.22705287 205.72606564  48.57163169
##  [351]  55.66060172 163.55730007  19.74572794 156.11366915 207.92193209
##  [356] 121.41233065 160.05893452 151.58450581 132.69371264 200.60408866
##  [361] 154.73149209 136.32046770  30.01714317  35.61024184  51.57922612
##  [366]  13.16571211 141.58486790  62.05234457 207.75385005  78.83705599
##  [371]  99.71750317 120.01808643  81.71610990  78.54280824 112.23485634
##  [376] 210.98881244 115.71349040  71.81074627  25.71519208 120.76492965
##  [381]  73.59681587  82.47646913 136.53109686  72.16879175  27.51197319
##  [386]  47.40017859  65.85806906  69.35294107 194.53900175  92.72947332
##  [391]  68.02881397  79.44119774 117.13959392  43.33766227 103.30351513
##  [396] 101.89998830 146.05323738 206.74828192  70.00865342 162.22232293
##  [401]  96.02714914 159.08757749 209.30720313 120.30874654  63.08204477
##  [406]   2.17566485   2.49771492  52.95010922 159.88933843  68.78803048
##  [411]  93.35651724  99.13895389  77.01853589 173.64683953 208.46598063
##  [416] -50.07156532  11.40072085  81.75803886 118.72668903  38.29610367
##  [421] 123.74467110 161.65287285  70.34356716 137.61312197 130.60227534
##  [426]  88.56713174  64.75803251 161.47580236 175.92575649 167.25470902
##  [431]  93.81542355 146.69512268 100.97484228 141.54260549  84.77526660
##  [436]  97.03593614 150.36983487  31.11024570  49.78986365  98.83598475
##  [441] 177.33736369  62.03183745 150.33963287 113.71074582  95.98088177
##  [446]  54.82237523 123.65725515 169.42444890 101.73730469  35.37074860
##  [451] 158.19837525  23.83077015 -25.91675268  64.62353847  85.62835586
##  [456]  78.23458443  82.84606146  98.03445580 144.34829939  82.00257996
##  [461]  63.55228647 187.58728096  95.69807049 155.31815079  99.04110814
##  [466]  25.32699108 235.03183115  62.81527889 153.25974905  98.39591342
##  [471]  73.00201553   3.71782162 150.39156881  86.03826016  37.52170724
##  [476] 162.42455639  90.38933117 145.59881155  -7.91348400 164.48052662
##  [481]  78.59450172  87.24985535 166.35791194 141.93450603  26.74996614
##  [486]  69.18736511 105.30529197   7.79916211  19.17885731 111.38383521
##  [491] 146.06083510  83.43982803 164.36170155 102.86304012 -10.19665626
##  [496]  73.85448259 154.03926551  87.84293312  54.52767189  56.58502463
##  [501] 143.47375225  65.99952011 108.66072694  92.02809805 139.67497163
##  [506] 184.71752457 161.99843432 101.47183716 182.86072495 156.56115701
##  [511]  29.87946839 107.83852306 143.37542982  98.33824214 147.70322782
##  [516] 156.50483626 119.68486560 118.84041640  87.41285465 125.20474454
##  [521]  33.50982643  94.08502737  68.33757667 133.88456724  85.10591176
##  [526] 131.39611236 183.92153640 -20.00012703  32.50785575 160.10039479
##  [531] 164.69213597  97.02028269  65.74688274  27.32803478 164.70632806
##  [536] 158.80845447 143.20225391 -14.83662617  30.40949940  30.70616275
##  [541]  46.34765780  52.92872484  70.67828451 151.73606100 122.94811033
##  [546]  40.32774640 139.59446358  11.38475446  70.61387890  35.88148437
##  [551]  84.39326695  65.06123497 -32.19248839 141.25111884 115.34631566
##  [556]  97.09802709 146.32847054  89.06540697 149.65667487   3.83328288
##  [561]  47.36424078 144.51988810 277.05701388 137.07553713  89.62643730
##  [566] 108.99692271 171.31824247  77.84166053 118.35949933 134.79108481
##  [571] 146.67223643 174.59445413 157.97614951 111.33979785  35.22674076
##  [576]  96.86106542 149.66414684  49.70345300  62.45075262 187.20081912
##  [581]  40.61999543  79.15147911  21.50899203  85.97629824  70.73365181
##  [586] 133.01595988  68.12437255  73.04891834 147.57601168  94.72100771
##  [591]  81.29653636  91.18837096 113.82416540 111.81662963 203.08370797
##  [596]  35.49700071 128.55947237 189.26951134 110.64701215 144.23460730
##  [601]  54.90148678  97.26250210  32.16226445 115.86152886 169.78595597
##  [606]  39.43880916  89.79291696  22.37743370 125.90248343  79.05798484
##  [611]  14.52733922 224.15813357 124.90168675  66.30658974  55.65093022
##  [616]  13.43113246 130.22745607  56.43624609 136.26708232  98.46340099
##  [621]  94.13888128 104.91114693  66.15713891  97.53768225  71.96401200
##  [626] 219.95774326  95.50639492  58.91757911  85.65191192 106.56394370
##  [631]  46.89580248 136.67905179 116.13460992  82.55101143 164.17628321
##  [636]  49.27559756  74.49678629  91.64151269  84.86661072 201.32352362
##  [641] 145.04528192 106.77145202  89.93555229  59.65816295 132.20620619
##  [646]  83.16704397  13.41482444 113.09603313  54.16512009  71.57177624
##  [651]  56.70897791 141.27469559  59.99338579 148.79150434 235.00377654
##  [656]  93.23052016  94.69844180  32.79680974 122.15609143 148.05588708
##  [661]  87.92820917 104.14774456  81.91376211 116.69300999 113.28047105
##  [666] 250.64528733  82.76349312 153.12787266  63.51574630 102.82738605
##  [671] 123.39148560  81.36773747 110.50808438 164.48041528  18.65802251
##  [676]  60.82317452 125.54565517 160.88130280 115.25546238 110.51468167
##  [681] 123.44329828   4.78287139 161.92011423 119.54994457  98.44005416
##  [686]  19.05997391 122.56331391  65.45783182 170.27228110  14.93286561
##  [691] 109.61227986  64.85216193  59.57220683  68.09006292 186.86727140
##  [696] -13.02391316  19.37639531 132.68700994 145.14403643 137.73042439
##  [701]  88.65946156  65.20156862 125.33236787 130.81171468  16.65603627
##  [706]  83.18728871 125.35899284  15.13046492  89.65363880  80.07014859
##  [711]  40.56900863 122.62827021 110.37948520  39.49388119 138.37075271
##  [716]  70.04861544  21.95136136  50.21679785 154.66255042 145.85714430
##  [721]  61.34753224  76.20820912  43.46484080  78.55822842  58.02081751
##  [726]  69.95066635  61.30546109  55.37538244  98.21340765  84.79109488
##  [731] -50.60818918  -0.42615289  97.68142953  82.02314677  90.24891691
##  [736]  24.27649323  55.39834764  56.86467543 127.59770740  90.58830433
##  [741]  83.74266282  73.15307754  81.42612936 136.14035118 160.28459417
##  [746] 159.20765628 133.55952177 158.77510367 109.42632364 124.95317984
##  [751]   2.61908443 121.03686231 158.67381249  27.68842215  81.66243970
##  [756]  69.61018826 115.99356887 154.99238361  79.69816862 220.53732134
##  [761] 157.94499424 116.91947958 122.80886720  84.29776668 170.21720101
##  [766]  79.48650255  95.59487419 116.24377974 159.25499001  87.22457133
##  [771] 144.22239604  75.57194652  63.63119134  40.58723635  73.10287920
##  [776] 105.96756087 165.90890477 172.15402788 112.45131058 140.78511634
##  [781]  63.26960968 112.90766390  57.35696156 110.78243793  64.53948940
##  [786] 135.54327616  77.63140706  83.08508479 125.86167111 104.93517972
##  [791] 137.18428079  86.07249293 126.95358403  95.58302652  62.71212459
##  [796]  21.99607744 154.14782627 -17.05280013 110.31526330 138.23712856
##  [801]  -6.25342905 126.05893332  97.67885500  42.52641395 131.46691539
##  [806]  63.67642620  80.67913388  66.41428051 145.01930952 144.34208453
##  [811] 119.51390559  53.62442549 137.29196144 124.74120783  98.90342691
##  [816] 129.40111631 137.82455370  75.29868637  63.33421857  99.94898030
##  [821] 140.29128484 155.46546909  84.51602589  54.57108759 113.15130638
##  [826]  98.95410962  89.38287462  48.44480401 106.97553698 108.31089923
##  [831]  50.76701755 101.13170354 139.26650163  41.04052379 195.53953888
##  [836]  73.09992525 144.21382145 107.36548184  49.57863186 141.90944961
##  [841]  41.58804313 122.71590665 110.62864338  72.34568263 101.17150126
##  [846] 132.40894452  12.86026324 129.75813305  56.07354935 132.22187856
##  [851]  68.54507487  95.08999052 134.21088496  30.76569845 177.74727930
##  [856]  59.28293291  57.81844571 151.24637129 105.78516882 112.07470199
##  [861]  30.45919292 176.30304223 102.32581184 161.99911798 115.42863177
##  [866] 139.28138023 155.87393524  99.75088638  91.07908949 134.81145345
##  [871] 126.08986042  77.60867049 120.27003020  63.15177877 112.78740072
##  [876]  85.75332475  98.44393375  75.70705565  93.24559579  25.96406386
##  [881] 162.81845628 110.45208250 115.65783948 153.75741193  85.66874127
##  [886]  98.40112863  62.86333017 204.26100961 142.74452052 150.02229981
##  [891]  40.79410450  22.94487224  89.41334996 108.51762850  65.46113128
##  [896] 184.88603695  96.36550187  64.11955719  79.17427808 209.67933805
##  [901] 127.11739129 151.18338045 140.64130544 165.05135387 128.39782055
##  [906]  93.99642789  75.39986469 110.03859877 108.23996494 134.68288481
##  [911] 106.66621267  63.02684207  80.12405924 112.85793197  85.99130404
##  [916] 150.39837961 157.76098120  89.86025254  83.92952265  18.94730415
##  [921] 128.40526295 133.56401236 173.01297609  18.11403129 164.92505411
##  [926]  92.31500856 178.95744228 202.76175928 164.22433254 120.87016586
##  [931] 157.99268036 124.57951279 155.10043589 128.42852151  81.80414574
##  [936] 106.84781854 136.21377136 176.99908030 149.34961674  52.69890010
##  [941]  69.36596579 164.34432952  72.16749200  98.85111389 166.23705613
##  [946] 113.19488345 142.06695095  86.79312555 144.33846460 111.27428778
##  [951] 127.24163623 158.81253634  84.32123791 125.26883443 176.98506493
##  [956] 174.55013553 112.18447423  79.23428368  -1.75863811  67.83210511
##  [961] 102.69107405  80.52190580 193.89127767  27.11966366 136.19276892
##  [966]  39.09618692  84.71205651 101.21988583 117.61330506 141.18948778
##  [971] 129.88932805 164.78187322  71.09669104 108.64874902  70.94018770
##  [976]  60.87047018  16.65853979  64.32633758  74.66620861  65.24080279
##  [981] 127.08039056  70.94613518 121.54160255 133.58505948  78.32463472
##  [986]  60.95082856 120.81490912  58.91897002 110.55379452 137.74115849
##  [991] 189.00548763 133.29738410  99.46330902  39.94726968  67.83011078
##  [996] 139.86461552 126.41241372 114.18348694  99.39303476  90.40431113
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h3&gt; Dados (Segundo tipo) &lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;##    [1] -50.60818918 -50.07156532 -32.19248839 -25.91675268 -21.83078022
##    [6] -20.00012703 -17.05280013 -16.49397725 -16.05085152 -14.83662617
##   [11] -13.02391316 -10.27358754 -10.19665626  -9.26434191  -7.91348400
##   [16]  -6.25342905  -5.95305960  -1.75863811  -0.42615289  -0.03711965
##   [21]   0.15921912   1.83737554   2.17566485   2.49771492   2.61908443
##   [26]   3.71782162   3.83328288   4.78287139   7.31297728   7.79916211
##   [31]   8.86437052  11.38475446  11.40072085  12.04566231  12.86026324
##   [36]  13.16571211  13.41482444  13.43113246  14.52733922  14.81702537
##   [41]  14.93286561  15.13046492  16.23339104  16.65603627  16.65853979
##   [46]  17.09745713  18.11403129  18.65802251  18.66636591  18.94730415
##   [51]  19.05997391  19.17885731  19.37639531  19.66613773  19.74572794
##   [56]  20.99996227  21.50899203  21.95136136  21.99607744  22.37743370
##   [61]  22.94487224  23.83077015  24.27649323  25.32699108  25.50318816
##   [66]  25.71519208  25.96406386  26.00864892  26.56511251  26.59133353
##   [71]  26.74996614  26.96030665  27.11966366  27.32803478  27.51197319
##   [76]  27.68842215  28.22428188  28.24264087  28.47863736  29.01774458
##   [81]  29.82484891  29.87946839  30.01714317  30.40949940  30.45919292
##   [86]  30.70616275  30.76569845  31.00282108  31.11024570  31.43347250
##   [91]  31.98469282  32.16226445  32.47426719  32.50785575  32.57742793
##   [96]  32.79680974  32.93450206  33.50982643  35.22674076  35.24581787
##  [101]  35.37074860  35.49700071  35.61024184  35.88148437  35.99226983
##  [106]  36.14713767  36.26750249  36.66342279  36.74009892  37.52170724
##  [111]  37.68401441  38.12027656  38.29610367  38.58311869  39.09618692
##  [116]  39.32032183  39.43880916  39.49388119  39.59619123  39.65025733
##  [121]  39.74073038  39.94726968  40.02011641  40.22098498  40.32774640
##  [126]  40.56900863  40.58723635  40.61999543  40.79410450  40.80274630
##  [131]  41.04052379  41.19766102  41.58804313  42.52641395  43.02195300
##  [136]  43.13000509  43.31858674  43.33766227  43.46484080  43.59720045
##  [141]  44.89531614  45.02284927  45.26922831  45.95914887  46.34765780
##  [146]  46.86886034  46.89580248  47.36424078  47.40017859  47.41806790
##  [151]  47.57772476  47.94218492  48.00283177  48.27810205  48.44480401
##  [156]  48.57163169  49.27559756  49.35481906  49.57863186  49.70345300
##  [161]  49.78986365  50.21679785  50.76701755  50.84654029  51.57922612
##  [166]  51.61740066  52.25280719  52.69890010  52.92872484  52.95010922
##  [171]  53.62442549  54.16512009  54.25977582  54.52767189  54.57108759
##  [176]  54.69622119  54.82237523  54.88940279  54.90148678  55.37538244
##  [181]  55.39834764  55.65093022  55.66060172  56.07354935  56.39205866
##  [186]  56.43624609  56.58502463  56.66608288  56.70897791  56.76363801
##  [191]  56.86467543  57.35696156  57.81844571  57.96612915  58.02081751
##  [196]  58.48386726  58.50127365  58.56687325  58.91757911  58.91897002
##  [201]  59.28293291  59.57220683  59.65816295  59.99338579  60.82317452
##  [206]  60.87047018  60.95082856  61.30546109  61.34753224  61.87275600
##  [211]  61.90978304  62.03183745  62.05234457  62.45075262  62.71212459
##  [216]  62.81527889  62.86333017  63.02684207  63.08204477  63.15177877
##  [221]  63.26960968  63.33421857  63.51574630  63.55228647  63.63119134
##  [226]  63.67642620  63.80024542  64.11955719  64.13958986  64.32633758
##  [231]  64.53948940  64.62353847  64.75803251  64.85216193  65.02984668
##  [236]  65.06123497  65.20156862  65.24080279  65.37934239  65.45783182
##  [241]  65.46113128  65.46722481  65.62222848  65.74688274  65.85806906
##  [246]  65.90839135  65.94243193  65.98260843  65.99952011  66.11927084
##  [251]  66.13403519  66.15713891  66.25670311  66.30658974  66.41428051
##  [256]  67.42185057  67.70528732  67.83011078  67.83210511  68.02881397
##  [261]  68.09006292  68.12437255  68.33757667  68.33934925  68.46572743
##  [266]  68.54507487  68.78803048  69.16632949  69.18736511  69.35294107
##  [271]  69.36596579  69.61018826  69.95066635  70.00865342  70.04161421
##  [276]  70.04861544  70.18446816  70.34356716  70.61387890  70.67828451
##  [281]  70.73365181  70.94018770  70.94613518  71.09669104  71.46030486
##  [286]  71.57177624  71.81074627  71.96401200  72.16749200  72.16879175
##  [291]  72.34568263  72.52957574  73.00201553  73.04891834  73.09992525
##  [296]  73.10287920  73.15307754  73.59681587  73.85448259  74.49678629
##  [301]  74.66620861  75.29868637  75.39986469  75.57194652  75.70705565
##  [306]  75.93171964  75.93956913  75.94226009  76.20820912  76.64730499
##  [311]  76.79327364  76.99722603  77.01853589  77.06035361  77.19118624
##  [316]  77.59608842  77.60867049  77.63140706  77.69774100  77.72083953
##  [321]  77.84166053  78.05453426  78.23458443  78.32463472  78.42498360
##  [326]  78.48060920  78.54280824  78.55822842  78.59450172  78.83705599
##  [331]  79.05798484  79.15147911  79.17427808  79.18226626  79.23428368
##  [336]  79.26773366  79.44119774  79.45545316  79.48650255  79.69816862
##  [341]  79.77831785  79.96812265  80.07014859  80.12405924  80.44478963
##  [346]  80.52190580  80.67913388  81.29653636  81.31692224  81.36773747
##  [351]  81.42612936  81.66243970  81.71610990  81.75803886  81.80088764
##  [356]  81.80414574  81.81619913  81.91376211  82.00257996  82.01723878
##  [361]  82.02314677  82.10600428  82.20737696  82.47646913  82.55101143
##  [366]  82.76349312  82.78741085  82.84606146  83.08508479  83.16704397
##  [371]  83.18728871  83.21266510  83.27217175  83.43982803  83.53876419
##  [376]  83.74266282  83.77279952  83.92952265  84.21198952  84.29776668
##  [381]  84.32123791  84.32629667  84.39326695  84.51602589  84.55934677
##  [386]  84.61964525  84.71205651  84.73576229  84.77526660  84.79109488
##  [391]  84.86661072  84.93956592  85.10591176  85.62835586  85.65191192
##  [396]  85.66874127  85.75332475  85.85891879  85.97629824  85.99130404
##  [401]  86.03826016  86.05882522  86.07249293  86.79312555  86.81119190
##  [406]  87.13377028  87.17608029  87.22457133  87.24985535  87.27659671
##  [411]  87.31097349  87.41285465  87.50662577  87.54258030  87.84293312
##  [416]  87.92820917  88.08832220  88.40627464  88.56713174  88.65946156
##  [421]  88.86692455  89.06540697  89.07482247  89.38287462  89.41334996
##  [426]  89.62643730  89.65363880  89.79291696  89.81074668  89.86025254
##  [431]  89.93555229  90.07469468  90.24248077  90.24891691  90.31666358
##  [436]  90.38933117  90.40431113  90.42588281  90.58830433  90.78737290
##  [441]  91.07908949  91.18837096  91.53622150  91.64151269  92.02809805
##  [446]  92.31500856  92.72947332  93.23052016  93.24559579  93.35651724
##  [451]  93.46774053  93.81542355  93.87249371  93.99642789  94.08502737
##  [456]  94.13888128  94.69844180  94.72100771  94.91194969  95.08999052
##  [461]  95.50639492  95.58302652  95.59487419  95.69807049  95.98088177
##  [466]  96.02714914  96.10269670  96.30220828  96.36550187  96.61152958
##  [471]  96.86106542  97.02028269  97.03593614  97.09802709  97.16818461
##  [476]  97.26250210  97.37935880  97.53768225  97.67885500  97.68142953
##  [481]  98.03445580  98.21340765  98.33824214  98.39591342  98.40112863
##  [486]  98.41301281  98.44005416  98.44393375  98.46340099  98.55923323
##  [491]  98.83598475  98.85111389  98.90342691  98.95410962  99.04110814
##  [496]  99.13895389  99.39303476  99.46330902  99.71750317  99.75088638
##  [501]  99.94898030 100.81277326 100.89942073 100.93730855 100.97484228
##  [506] 101.11553983 101.13170354 101.17150126 101.21988583 101.47183716
##  [511] 101.55112381 101.73730469 101.89998830 102.06942385 102.22336486
##  [516] 102.31807191 102.32581184 102.69107405 102.82738605 102.86304012
##  [521] 103.19317408 103.30351513 103.47723907 103.65978883 103.85723620
##  [526] 104.14774456 104.36173842 104.46736332 104.62923236 104.80619603
##  [531] 104.86558098 104.91114693 104.93517972 105.09917229 105.30529197
##  [536] 105.65146808 105.78516882 105.96756087 105.98004444 106.26922851
##  [541] 106.56394370 106.66621267 106.77145202 106.84781854 106.97553698
##  [546] 107.09401423 107.19671441 107.36548184 107.40839776 107.83852306
##  [551] 107.94153107 108.23996494 108.31089923 108.51762850 108.64874902
##  [556] 108.66072694 108.99692271 109.18819463 109.24629800 109.42632364
##  [561] 109.61227986 109.65398175 110.03859877 110.14408890 110.31526330
##  [566] 110.37948520 110.45208250 110.50808438 110.51468167 110.55379452
##  [571] 110.62864338 110.64701215 110.78243793 111.13677339 111.27428778
##  [576] 111.33979785 111.38383521 111.41446603 111.62625763 111.81662963
##  [581] 112.07470199 112.18447423 112.23485634 112.43790039 112.45131058
##  [586] 112.78740072 112.85793197 112.90766390 113.09603313 113.15130638
##  [591] 113.19488345 113.28047105 113.32035266 113.34032055 113.71074582
##  [596] 113.82416540 114.06228061 114.18348694 114.25666907 114.54937442
##  [601] 114.72725633 114.78007869 115.25546238 115.34631566 115.42863177
##  [606] 115.65783948 115.71349040 115.86152886 115.99356887 116.13460992
##  [611] 116.13774856 116.24377974 116.37550706 116.54382426 116.69300999
##  [616] 116.91947958 117.00578218 117.13959392 117.61330506 117.62719794
##  [621] 118.10436143 118.35949933 118.62361693 118.72668903 118.84041640
##  [626] 118.85363636 119.04611063 119.22705287 119.24338053 119.48971504
##  [631] 119.51390559 119.54994457 119.62866408 119.68486560 119.75779077
##  [636] 120.01808643 120.27003020 120.30874654 120.51386629 120.76492965
##  [641] 120.81490912 120.87016586 120.96877029 121.03686231 121.27565469
##  [646] 121.41233065 121.54160255 121.62145627 122.01209322 122.15609143
##  [651] 122.56331391 122.62827021 122.71590665 122.80886720 122.94811033
##  [656] 123.39148560 123.44329828 123.65725515 123.74467110 123.88702210
##  [661] 124.03605826 124.14892624 124.57951279 124.74120783 124.76658564
##  [666] 124.79107957 124.90168675 124.95317984 125.20474454 125.26883443
##  [671] 125.29096323 125.33236787 125.35899284 125.45593482 125.54565517
##  [676] 125.57982346 125.86167111 125.90248343 126.05272627 126.05893332
##  [681] 126.08986042 126.41241372 126.53249342 126.64484962 126.95358403
##  [686] 127.08039056 127.11739129 127.24163623 127.44111874 127.59770740
##  [691] 127.73967376 128.03053495 128.13723814 128.15873322 128.39782055
##  [696] 128.40526295 128.42852151 128.55947237 129.40111631 129.52047336
##  [701] 129.61583113 129.64140273 129.74786735 129.75813305 129.88932805
##  [706] 130.22745607 130.44150845 130.60227534 130.81171468 130.96513384
##  [711] 131.17390109 131.18406184 131.39611236 131.46691539 131.67179455
##  [716] 131.78099276 132.17500176 132.20620619 132.22187856 132.40894452
##  [721] 132.65830968 132.68700994 132.69371264 132.76138181 132.98820692
##  [726] 133.01595988 133.04933429 133.14617264 133.29738410 133.36493659
##  [731] 133.55952177 133.56401236 133.58505948 133.88456724 134.21088496
##  [736] 134.56586684 134.68288481 134.79108481 134.81145345 135.38441590
##  [741] 135.54327616 135.57869830 135.64471381 135.83004169 136.14035118
##  [746] 136.19276892 136.21377136 136.26708232 136.29087501 136.32046770
##  [751] 136.53109686 136.67577101 136.67905179 136.78453288 137.06950642
##  [756] 137.07553713 137.09431034 137.18428079 137.22118642 137.29196144
##  [761] 137.61312197 137.73042439 137.74115849 137.78907540 137.82455370
##  [766] 137.85068541 138.23712856 138.34219672 138.37075271 139.26650163
##  [771] 139.28138023 139.31711921 139.59446358 139.61747686 139.67497163
##  [776] 139.80042788 139.86461552 140.29128484 140.31741324 140.64130544
##  [781] 140.78511634 141.18948778 141.25111884 141.27469559 141.54260549
##  [786] 141.58486790 141.69395288 141.72369515 141.90944961 141.93450603
##  [791] 142.06695095 142.74452052 143.10411030 143.20225391 143.37542982
##  [796] 143.47375225 143.60234925 144.21382145 144.22239604 144.23460730
##  [801] 144.33846460 144.34208453 144.34829939 144.51988810 144.64629498
##  [806] 145.01930952 145.04528192 145.14403643 145.59881155 145.85714430
##  [811] 146.05323738 146.06083510 146.21465734 146.27606310 146.32847054
##  [816] 146.58906076 146.67223643 146.69512268 147.54594832 147.57601168
##  [821] 147.70322782 147.73932182 147.89724477 147.95705974 147.99145653
##  [826] 148.05588708 148.42831703 148.79150434 149.01767616 149.34961674
##  [831] 149.37223517 149.65667487 149.66414684 149.76659371 150.02229981
##  [836] 150.33963287 150.36983487 150.39156881 150.39837961 151.18338045
##  [841] 151.24637129 151.40839885 151.42853604 151.58450581 151.73606100
##  [846] 151.99618026 152.55223329 152.63137781 152.76725961 153.10121653
##  [851] 153.12787266 153.15830184 153.25974905 153.29396670 153.31881978
##  [856] 153.75741193 153.89462962 154.03926551 154.14782627 154.32756997
##  [861] 154.66255042 154.73149209 154.99238361 155.08897515 155.10043589
##  [866] 155.31815079 155.46546909 155.87393524 156.11366915 156.39768070
##  [871] 156.44341137 156.50483626 156.56115701 157.50030241 157.75523729
##  [876] 157.76098120 157.76741590 157.78987423 157.94499424 157.97614951
##  [881] 157.99268036 158.19837525 158.63531406 158.67381249 158.77510367
##  [886] 158.80845447 158.81253634 159.02051018 159.08757749 159.20765628
##  [891] 159.25499001 159.88933843 160.05893452 160.10039479 160.28459417
##  [896] 160.77568881 160.80629190 160.88130280 161.35141951 161.47580236
##  [901] 161.65287285 161.77229393 161.92011423 161.99843432 161.99911798
##  [906] 162.22232293 162.42455639 162.77724291 162.81845628 163.08575260
##  [911] 163.55730007 163.68421330 163.85906882 164.17628321 164.22433254
##  [916] 164.34432952 164.36170155 164.48041528 164.48052662 164.69213597
##  [921] 164.70632806 164.78187322 164.92505411 165.05135387 165.83826319
##  [926] 165.90890477 166.23705613 166.35791194 166.47823822 166.88912329
##  [931] 167.25470902 168.39769766 169.38621629 169.42444890 169.51375596
##  [936] 169.78595597 170.21720101 170.27228110 171.31824247 171.46063907
##  [941] 172.15402788 173.01297609 173.53761549 173.64683953 174.55013553
##  [946] 174.59445413 174.81490594 175.12723195 175.92575649 176.12931720
##  [951] 176.30304223 176.98506493 176.99908030 177.16088972 177.33736369
##  [956] 177.74727930 178.95744228 180.25570214 180.97093517 181.54458683
##  [961] 182.86072495 183.92153640 184.71752457 184.88603695 186.86727140
##  [966] 187.20081912 187.58728096 189.00548763 189.26951134 193.89127767
##  [971] 194.53900175 195.53953888 199.82172261 200.60408866 201.32352362
##  [976] 202.76175928 203.08370797 203.41048025 204.26100961 205.72606564
##  [981] 206.74828192 206.88835518 207.75385005 207.92193209 208.46598063
##  [986] 209.30720313 209.67933805 210.98881244 211.02598315 215.00884455
##  [991] 219.64564735 219.95774326 220.53732134 221.49551593 224.15813357
##  [996] 232.22439961 235.00377654 235.03183115 250.64528733 277.05701388
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h3&gt; Dados (Terceiro tipo) &lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;## 
## Tabela de frequ√™ncia 
## Tipo de vari√°vel: continuous
## 
##                Classes  Fi     PM   Fr Fac1 Fac2 Fp Fac1p Fac2p
## 1  -62.31 |---  -38.91   2 -50.61 0.00    2 1000  0   0.2 100.0
## 2  -38.91 |---  -15.51   7 -27.21 0.01    9  998  1   0.9  99.8
## 3    -15.51 |---  7.89  21  -3.81 0.02   30  991  2   3.0  99.1
## 4     7.89 |---  31.29  59  19.59 0.06   89  970  6   8.9  97.0
## 5    31.29 |---  54.69  86  42.99 0.09  175  911  9  17.5  91.1
## 6    54.69 |---  78.09 147  66.39 0.15  322  825 15  32.2  82.5
## 7   78.09 |---  101.49 188  89.79 0.19  510  678 19  51.0  67.8
## 8  101.49 |---  124.89 156 113.19 0.16  666  490 16  66.6  49.0
## 9  124.89 |---  148.29 160 136.59 0.16  826  334 16  82.6  33.4
## 10 148.29 |---  171.69 114 159.99 0.11  940  174 11  94.0  17.4
## 11 171.69 |---  195.09  31 183.39 0.03  971   60  3  97.1   6.0
## 12 195.09 |---  218.49  19 206.79 0.02  990   29  2  99.0   2.9
## 13 218.49 |---  241.89   8 230.19 0.01  998   10  1  99.8   1.0
## 14 241.89 |---  265.29   1 253.59 0.00  999    2  0  99.9   0.2
## 15 265.29 |---  288.69   1 276.99 0.00 1000    1  0 100.0   0.1
## 
##  ============================================== 
## Classes: Agrupamento de classes 
## Fi: Frequ√™ncia absoluta 
## PM: Ponto m√©dio 
## Fr: Frequ√™ncia relativa 
## Fac1: Frequ√™ncia acumulada (abaixo de) 
## Fac2: Frequ√™ncia acumulada (acima de) 
## Fp: Frequ√™ncia percentual 
## Fac1p: Frequ√™ncia acumulada percentual (abaixo de) 
## Fac2p: Frequ√™ncia acumulada percentual (acima de)
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h3&gt; Dados (Quarto tipo) &lt;/h3&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s03/index_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;coleta-dados-brutos&#34;&gt;Coleta (Dados brutos)&lt;/h2&gt;
&lt;p&gt;Dados elaborados sobre o n√∫mero de erros encontrados em 20 conjunto de caracteres monitorado em um canal de comunica√ß√£o&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;4&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;dados-em-rol-ou-elaborados&#34;&gt;Dados em rol ou elaborados&lt;/h2&gt;
&lt;p&gt;Dados elaborados sobre o n√∫mero de erros encontrados em 20 conjunto de caracteres monitorado em um canal de comunica√ß√£o&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;section&gt;
&lt;h2&gt; Distribui√ß√£o de frequ√™ncia &lt;/h2&gt;
&lt;h3&gt;Frequ√™ncia absoluta&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;N√∫mero de erros &lt;code&gt;\((x_i)\)&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Frequ√™ncia simples ($f_i$)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;4&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Total&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h3&gt;Frequ√™ncia relativa&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;N√∫mero de erros &lt;code&gt;\((x_i)\)&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(f_i\)&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(f_{r_i}\)&lt;/code&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(3\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(3 / 20 = 0,15\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(1\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(7\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(7 / 20 = 0,35\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(2\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(4\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(4 / 20 = 0,20\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(3\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(5\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(5 / 20 = 0,25\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(4\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(1\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(1 / 20 = 0,05\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h3&gt;Frequ√™ncia percentual&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;N√∫mero de erros &lt;code&gt;\((x_i)\)&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(f_i\)&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(f_{r_i}\)&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(f_{\%_i}\)&lt;/code&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(3\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,15\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,15 \times 100 = 15\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(1\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(7\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,35\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,35 \times 100 = 35\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(2\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(4\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,20\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,20 \times 100 = 20\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(3\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(5\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,25\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,25 \times 100 = 25\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(4\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(1\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,05\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,05 \times 100 = 5\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Total&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(20\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(1\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(100\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h3&gt;Tabela completa&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;N√∫mero de erros &lt;code&gt;\((x_i)\)&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(f_i\)&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(f_{r_i}\)&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(f_{\%_i}\)&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(f_{ac\downarrow_i}\)&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(f_{ac\uparrow_i}\)&lt;/code&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(3\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,15\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(15\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(3\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(20\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(1\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(7\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,35\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(35\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(10\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(17\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(2\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(4\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,20\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(35\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(14\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(10\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(3\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(5\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,25\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(25\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(19\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(6\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(4\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(1\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,05\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(5\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(20\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(1\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Total&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(20\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(1\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(100\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;-&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;section&gt;
&lt;h2&gt;Tabela para V. cont√≠nua (Algoritmo) &lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Classe&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;$ F_i $&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$ Li_{1a} \vdash  Ls_{1a} $&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$ f_1 $&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$ Li_{2a} \vdash  Ls_{2a} $&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$ f_2 $&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$ \vdots $&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$ \vdots $&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$ Li_{ka}  \vdash Ls_{ka} $&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$ f_k $&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;pre&gt; 1¬∫ Passo - N√∫mero de classes &lt;/pre&gt;
&lt;p&gt;&lt;code&gt;\begin{align} k &amp;amp; \approx \left\{\begin{array}{ll} \sqrt{\textrm{n√∫mero de elementos}}, &amp;amp; n \leq 100 \\ 5log_{10}(\textrm{n√∫mero de elementos}), &amp;amp; n &amp;gt; 100 \end{array}\right. \end{align}&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt; 2¬∫ Passo - Amplitude total &lt;/pre&gt;
&lt;p&gt;&lt;code&gt;\begin{align} A_t &amp;amp; = \max_i(X_i) - \min_i(X_i), \end{align}&lt;/code&gt;
para &lt;code&gt;\(i \in \mathbb{N}^{+}\)&lt;/code&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;pre&gt; 3¬∫ Passo - Amplitude de classe &lt;/pre&gt;
&lt;p&gt;&lt;code&gt;\begin{align} c &amp;amp; = \left\{\begin{array}{ll} \frac{A_t}{k - 1}, &amp;amp; \textrm{Amostra} \\ \frac{A_t}{k}, &amp;amp; \textrm{Popula√ß√£o}. \end{array}\right. \end{align}&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt; 4¬∫ Passo - LI da primeira classe &lt;/pre&gt;
&lt;p&gt;&lt;code&gt;\begin{align} Li_{1a} &amp;amp; = \left\{\begin{array}{ll} X_{(1)} - c / 2, &amp;amp; \textrm{Amostra} \\ X_{(1)}, &amp;amp; \textrm{Popula√ß√£o}. \end{array}\right. \end{align}&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt; Em resumo... &lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Calcular &lt;code&gt;\(k\)&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;Calcular &lt;code&gt;\(A_t\)&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;Calcular &lt;code&gt;\(c\)&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;Calcular &lt;code&gt;\(Li_{1a}\)&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;Determinar as classes,&lt;/li&gt;
&lt;li&gt;Calcular o ponto m√©dio, e&lt;/li&gt;
&lt;li&gt;Calcular as frequ√™ncias como apresentadas no in√≠cio dessa se√ß√£o.&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;gr√°ficos&#34;&gt;Gr√°ficos&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Gr√°fico de Haste ou bast√£o&lt;/li&gt;
&lt;li&gt;Gr√°fico de barras&lt;/li&gt;
&lt;li&gt;Gr√°fico de Pizza&lt;/li&gt;
&lt;li&gt;Histograma de frequ√™ncias&lt;/li&gt;
&lt;li&gt;Ogivas&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;section&gt;
&lt;h2&gt; Uso do pacote &lt;code&gt;leem&lt;/code&gt; &lt;/h2&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/profmat-est/s03/leem_hu7b1031bcd7f556bee541df85c0c5375e_34750_3761f4b815fffe33ceb7dbc21c169f83.webp 400w,
               /slides/profmat-est/s03/leem_hu7b1031bcd7f556bee541df85c0c5375e_34750_3705f9ee693abc73a6049df605c75df5.webp 760w,
               /slides/profmat-est/s03/leem_hu7b1031bcd7f556bee541df85c0c5375e_34750_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/profmat-est/s03/leem_hu7b1031bcd7f556bee541df85c0c5375e_34750_3761f4b815fffe33ceb7dbc21c169f83.webp&#34;
               width=&#34;150&#34;
               height=&#34;150&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;Instala√ß√£o&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&amp;quot;devtools&amp;quot;)
devtools::install_github(&amp;quot;bendeivide/leem&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Anexando e carregando&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(leem)
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2&gt; Fun√ß√µes &lt;/h2&gt;
&lt;!-- | Fun√ß√£o     | Finalidade                  | --&gt;
&lt;!-- |:-----------|:----------------------------| --&gt;
&lt;!-- | new_leem() | Construtor da classe *leem* | --&gt;
&lt;!-- | tabfreq()  | Disatribui√ß√£o de frequ√™ncia | --&gt;
&lt;!-- | hist()     | Hitograma de frequ√™ncia     | --&gt;
&lt;!-- | ogive()    | Ogivas                      | --&gt;
&lt;!-- | polyfreq() | Pol√≠gono de frequ√™ncias     | --&gt;
&lt;style type=&#34;text/css&#34;&gt;
.tg  {border-collapse:collapse;border-color:#93a1a1;border-spacing:0;}
.tg td{background-color:#fdf6e3;border-bottom-width:1px;border-color:#93a1a1;border-style:solid;border-top-width:1px;
  border-width:0px;color:#002b36;font-family:Arial, sans-serif;font-size:14px;overflow:hidden;padding:10px 5px;
  word-break:normal;}
.tg th{background-color:#657b83;border-bottom-width:1px;border-color:#93a1a1;border-style:solid;border-top-width:1px;
  border-width:0px;color:#fdf6e3;font-family:Arial, sans-serif;font-size:14px;font-weight:normal;overflow:hidden;
  padding:10px 5px;word-break:normal;}
.tg .tg-5lw0{background-color:#eee8d5;border-color:#ffffff;
  font-family:&#34;Lucida Sans Unicode&#34;, &#34;Lucida Grande&#34;, sans-serif !important;font-size:28px;text-align:left;
  vertical-align:middle}
.tg .tg-xzvq{border-color:#ffffff;font-family:&#34;Lucida Sans Unicode&#34;, &#34;Lucida Grande&#34;, sans-serif !important;font-size:28px;
  text-align:left;vertical-align:middle}
.tg .tg-vqs5{border-color:#ffffff;font-family:&#34;Lucida Sans Unicode&#34;, &#34;Lucida Grande&#34;, sans-serif !important;font-size:28px;
  font-weight:bold;text-align:left;vertical-align:middle}
&lt;/style&gt;
&lt;table class=&#34;tg&#34;&gt;
&lt;thead&gt;
  &lt;tr&gt;
    &lt;th class=&#34;tg-vqs5&#34;&gt;Fun√ß√£o&lt;/th&gt;
    &lt;th class=&#34;tg-vqs5&#34;&gt;Finalidade&lt;/th&gt;
  &lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
  &lt;tr&gt;
    &lt;td class=&#34;tg-5lw0&#34;&gt; &lt;code&gt;base::sort()&lt;/code&gt;  &lt;/td&gt;
    &lt;td class=&#34;tg-5lw0&#34;&gt;Dados em rol &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class=&#34;tg-5lw0&#34;&gt; &lt;code&gt;new_leem()&lt;/code&gt;  &lt;/td&gt;
    &lt;td class=&#34;tg-5lw0&#34;&gt;Construtor da classe &lt;i&gt;leem&lt;/i&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class=&#34;tg-xzvq&#34;&gt; &lt;code&gt;tabfreq()&lt;/code&gt;  &lt;/td&gt;
    &lt;td class=&#34;tg-xzvq&#34;&gt;Distribui√ß√£o de frequ√™ncia&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class=&#34;tg-5lw0&#34;&gt; &lt;code&gt;hist()&lt;/code&gt; &lt;/td&gt;
    &lt;td class=&#34;tg-5lw0&#34;&gt;Hitograma de frequ√™ncia&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class=&#34;tg-xzvq&#34;&gt; &lt;code&gt;ogive()&lt;/code&gt; &lt;/td&gt;
    &lt;td class=&#34;tg-xzvq&#34;&gt;Ogivas&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class=&#34;tg-5lw0&#34;&gt; &lt;code&gt;polyfreq()&lt;/code&gt; &lt;/td&gt;
    &lt;td class=&#34;tg-5lw0&#34;&gt;Pol√≠gono de frequ√™ncias&lt;/td&gt;
  &lt;/tr&gt;
   &lt;tr&gt;
    &lt;td class=&#34;tg-5lw0&#34;&gt; &lt;code&gt;stickchart()&lt;/code&gt; &lt;/td&gt;
    &lt;td class=&#34;tg-5lw0&#34;&gt;Gr√°fico de hastes ou bast√£o&lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2&gt; Exemplo &lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Considere a distribui√ß√£o de frequ√™ncia do n√∫mero de erros encontrados em 20 conjunto de carac-  teres monitorado em um canal de comunica√ß√£o&lt;/li&gt;
&lt;/ol&gt;
&lt;style type=&#34;text/css&#34;&gt;
.tg  {border-collapse:collapse;border-color:#93a1a1;border-spacing:0;}
.tg td{background-color:#fdf6e3;border-bottom-width:1px;border-color:#93a1a1;border-style:solid;border-top-width:1px;
  border-width:0px;color:#002b36;font-family:Arial, sans-serif;font-size:14px;overflow:hidden;padding:10px 5px;
  word-break:normal;}
.tg th{background-color:#657b83;border-bottom-width:1px;border-color:#93a1a1;border-style:solid;border-top-width:1px;
  border-width:0px;color:#fdf6e3;font-family:Arial, sans-serif;font-size:14px;font-weight:normal;overflow:hidden;
  padding:10px 5px;word-break:normal;}
.tg .tg-j4p1{background-color:#eee8d5;color:#191919;font-family:&#34;Lucida Sans Unicode&#34;, &#34;Lucida Grande&#34;, sans-serif !important;
  font-size:28px;font-style:italic;font-weight:bold;text-align:right;vertical-align:middle}
.tg .tg-1bo1{background-color:#ffffff;border-color:#fdf6e3;
  font-family:&#34;Lucida Sans Unicode&#34;, &#34;Lucida Grande&#34;, sans-serif !important;font-size:28px;font-style:italic;
  font-weight:bold;text-align:right;vertical-align:middle}
&lt;/style&gt;
&lt;table class=&#34;tg&#34;&gt;
&lt;thead&gt;
  &lt;tr&gt;
    &lt;th class=&#34;tg-j4p1&#34;&gt;&lt;span style=&#34;font-weight:700&#34;&gt;3&lt;/span&gt;&lt;/th&gt;
    &lt;th class=&#34;tg-j4p1&#34;&gt;&lt;span style=&#34;font-weight:700&#34;&gt;0&lt;/span&gt;&lt;/th&gt;
    &lt;th class=&#34;tg-j4p1&#34;&gt;&lt;span style=&#34;font-weight:700&#34;&gt;3&lt;/span&gt;&lt;/th&gt;
    &lt;th class=&#34;tg-j4p1&#34;&gt;&lt;span style=&#34;font-weight:700&#34;&gt;4&lt;/span&gt;&lt;/th&gt;
    &lt;th class=&#34;tg-j4p1&#34;&gt;&lt;span style=&#34;font-weight:700&#34;&gt;3&lt;/span&gt;&lt;/th&gt;
    &lt;th class=&#34;tg-j4p1&#34;&gt;&lt;span style=&#34;font-weight:700&#34;&gt;1&lt;/span&gt;&lt;/th&gt;
    &lt;th class=&#34;tg-j4p1&#34;&gt;&lt;span style=&#34;font-weight:700&#34;&gt;2&lt;/span&gt;&lt;/th&gt;
    &lt;th class=&#34;tg-j4p1&#34;&gt;&lt;span style=&#34;font-weight:700&#34;&gt;3&lt;/span&gt;&lt;/th&gt;
    &lt;th class=&#34;tg-j4p1&#34;&gt;&lt;span style=&#34;font-weight:700&#34;&gt;0&lt;/span&gt;&lt;/th&gt;
    &lt;th class=&#34;tg-j4p1&#34;&gt;&lt;span style=&#34;font-weight:700&#34;&gt;0&lt;/span&gt;&lt;/th&gt;
  &lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
  &lt;tr&gt;
    &lt;td class=&#34;tg-1bo1&#34;&gt;1&lt;/td&gt;
    &lt;td class=&#34;tg-1bo1&#34;&gt;1&lt;/td&gt;
    &lt;td class=&#34;tg-1bo1&#34;&gt;2&lt;/td&gt;
    &lt;td class=&#34;tg-1bo1&#34;&gt;1&lt;/td&gt;
    &lt;td class=&#34;tg-1bo1&#34;&gt;1&lt;/td&gt;
    &lt;td class=&#34;tg-1bo1&#34;&gt;1&lt;/td&gt;
    &lt;td class=&#34;tg-1bo1&#34;&gt;3&lt;/td&gt;
    &lt;td class=&#34;tg-1bo1&#34;&gt;2&lt;/td&gt;
    &lt;td class=&#34;tg-1bo1&#34;&gt;2&lt;/td&gt;
    &lt;td class=&#34;tg-1bo1&#34;&gt;1&lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2&gt;Exemplo&lt;/h2&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Os dados representam a temperatura (¬∞F) do anel de veda√ß√£o de cada teste de acionamento ou lan√ßamento real do motor do foguete Challenger.&lt;/li&gt;
&lt;/ol&gt;
&lt;style type=&#34;text/css&#34;&gt;
.tg  {border-collapse:collapse;border-color:#93a1a1;border-spacing:0;}
.tg td{background-color:#fdf6e3;border-bottom-width:1px;border-color:#93a1a1;border-style:solid;border-top-width:1px;
  border-width:0px;color:#002b36;font-family:Arial, sans-serif;font-size:14px;overflow:hidden;padding:10px 5px;
  word-break:normal;}
.tg th{background-color:#657b83;border-bottom-width:1px;border-color:#93a1a1;border-style:solid;border-top-width:1px;
  border-width:0px;color:#fdf6e3;font-family:Arial, sans-serif;font-size:14px;font-weight:normal;overflow:hidden;
  padding:10px 5px;word-break:normal;}
.tg .tg-61io{background-color:#eee8d5;color:#191919;font-size:28px;font-style:italic;font-weight:bold;text-align:left;
  vertical-align:middle}
.tg .tg-8svn{background-color:#fdf6e3;color:#191919;font-size:28px;font-style:italic;font-weight:bold;text-align:left;
  vertical-align:middle}
.tg .tg-aete{background-color:#fdf6e3;color:#191919;font-family:&#34;Lucida Sans Unicode&#34;, &#34;Lucida Grande&#34;, sans-serif !important;
  font-size:28px;font-style:italic;font-weight:bold;text-align:left;vertical-align:middle}
.tg .tg-4ynv{background-color:#eee8d5;color:#191919;font-family:&#34;Lucida Sans Unicode&#34;, &#34;Lucida Grande&#34;, sans-serif !important;
  font-size:28px;font-style:italic;font-weight:bold;text-align:left;vertical-align:middle}
.tg .tg-uika{color:#191919;font-size:28px;font-style:italic;font-weight:bold;text-align:left;vertical-align:middle}
&lt;/style&gt;
&lt;table class=&#34;tg&#34;&gt;
&lt;thead&gt;
  &lt;tr&gt;
    &lt;th class=&#34;tg-aete&#34;&gt;84&lt;/th&gt;
    &lt;th class=&#34;tg-aete&#34;&gt;49&lt;/th&gt;
    &lt;th class=&#34;tg-aete&#34;&gt;61&lt;/th&gt;
    &lt;th class=&#34;tg-aete&#34;&gt;40&lt;/th&gt;
    &lt;th class=&#34;tg-aete&#34;&gt;83&lt;/th&gt;
    &lt;th class=&#34;tg-aete&#34;&gt;67&lt;/th&gt;
    &lt;th class=&#34;tg-aete&#34;&gt;45&lt;/th&gt;
    &lt;th class=&#34;tg-aete&#34;&gt;66&lt;/th&gt;
    &lt;th class=&#34;tg-aete&#34;&gt;70&lt;/th&gt;
    &lt;th class=&#34;tg-aete&#34;&gt;69&lt;/th&gt;
    &lt;th class=&#34;tg-8svn&#34;&gt;80&lt;/th&gt;
    &lt;th class=&#34;tg-8svn&#34;&gt;58&lt;/th&gt;
  &lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
  &lt;tr&gt;
    &lt;td class=&#34;tg-4ynv&#34;&gt;68&lt;/td&gt;
    &lt;td class=&#34;tg-4ynv&#34;&gt;60&lt;/td&gt;
    &lt;td class=&#34;tg-4ynv&#34;&gt;67&lt;/td&gt;
    &lt;td class=&#34;tg-4ynv&#34;&gt;72&lt;/td&gt;
    &lt;td class=&#34;tg-4ynv&#34;&gt;73&lt;/td&gt;
    &lt;td class=&#34;tg-4ynv&#34;&gt;70&lt;/td&gt;
    &lt;td class=&#34;tg-4ynv&#34;&gt;57&lt;/td&gt;
    &lt;td class=&#34;tg-4ynv&#34;&gt;63&lt;/td&gt;
    &lt;td class=&#34;tg-4ynv&#34;&gt;70&lt;/td&gt;
    &lt;td class=&#34;tg-4ynv&#34;&gt;78&lt;/td&gt;
    &lt;td class=&#34;tg-61io&#34;&gt;52&lt;/td&gt;
    &lt;td class=&#34;tg-61io&#34;&gt;67&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class=&#34;tg-uika&#34;&gt;53&lt;/td&gt;
    &lt;td class=&#34;tg-uika&#34;&gt;67&lt;/td&gt;
    &lt;td class=&#34;tg-uika&#34;&gt;75&lt;/td&gt;
    &lt;td class=&#34;tg-uika&#34;&gt;61&lt;/td&gt;
    &lt;td class=&#34;tg-uika&#34;&gt;70&lt;/td&gt;
    &lt;td class=&#34;tg-uika&#34;&gt;81&lt;/td&gt;
    &lt;td class=&#34;tg-uika&#34;&gt;76&lt;/td&gt;
    &lt;td class=&#34;tg-uika&#34;&gt;79&lt;/td&gt;
    &lt;td class=&#34;tg-uika&#34;&gt;75&lt;/td&gt;
    &lt;td class=&#34;tg-uika&#34;&gt;76&lt;/td&gt;
    &lt;td class=&#34;tg-uika&#34;&gt;58&lt;/td&gt;
    &lt;td class=&#34;tg-uika&#34;&gt;31&lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;style&gt;
.container{
  display: grid;
  text-align: center;
  grid-auto-flow: column;
}
.col {
  width: 500px;
  height: 400px;
  border: 3px solid #0094ff;
}
.col2 {
  width: 500px;
  height: 500px;
  border: 3px solid #0094ff;
}
.col3 {
  width: 500px;
  height: 450px;
  border: 3px solid #0094ff;
}

&lt;/style&gt;
&lt;section&gt;
&lt;h1&gt; &lt;code&gt;leem&lt;/code&gt; em a√ß√£o &lt;/h1&gt;
&lt;hr&gt;
&lt;h2&gt; Importando os dados &lt;/h2&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Numero de erros
d1 &amp;lt;- read.table(&amp;quot;https://raw.githubusercontent.com/bendeivide/book-epaec/master/dados/cap02/nerros.txt&amp;quot;, h = TRUE)
(d1 &amp;lt;- d1$erros)

# Temperatura do foguete Challenger
d2 &amp;lt;- read.table(&amp;quot;https://raw.githubusercontent.com/bendeivide/book-epaec/master/dados/cap02/challenger.txt&amp;quot;, h = TRUE)
(d2 &amp;lt;- d2$chal)

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;pre&gt;&lt;code&gt;##  [1] 3 1 0 1 3 2 4 1 3 1 1 1 2 3 3 2 0 2 0 1
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] 84 49 61 40 83 67 45 66 70 69 80 58 68 60 67 72 73 70 57 63 70 78 52 67 53
## [26] 67 75 61 70 81 76 79 75 76 58 31
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt; Dados em rol &lt;/h2&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;sort(d1)
sort(d2)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;pre&gt;&lt;code&gt;##  [1] 0 0 0 1 1 1 1 1 1 1 2 2 2 2 3 3 3 3 3 4
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] 31 40 45 49 52 53 57 58 58 60 61 61 63 66 67 67 67 67 68 69 70 70 70 70 72
## [26] 73 75 75 76 76 78 79 80 81 83 84
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt; Distribui√ß√£o de frequ√™ncias &lt;/h2&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col2&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;## Forma convencional:
aux &amp;lt;- new_leem(d1, 1)
tabd1 &amp;lt;- tabfreq(aux); tabd1
#-----
aux &amp;lt;- new_leem(d2, 2)
tabd2 &amp;lt;- tabfreq(aux); tabd2
## Usando o operador &#39;pipe&#39; nativo
d1 |&amp;gt; new_leem(variable = 1) |&amp;gt; tabfreq()
d2 |&amp;gt; new_leem(variable = 2) |&amp;gt; tabfreq()
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col2&#34;&gt;
&lt;pre&gt;&lt;code&gt;## 
## Tabela de frequ√™ncia 
## Tipo de vari√°vel: discrete
## 
##   Groups Fi   Fr Fac1 Fac2 Fp Fac1p Fac2p
## 1      0  3 0.15    3   20 15    15   100
## 2      1  7 0.35   10   17 35    50    85
## 3      2  4 0.20   14   10 20    70    50
## 4      3  5 0.25   19    6 25    95    30
## 5      4  1 0.05   20    1  5   100     5
## ============================================== 
## Groups: Agrupamento discretizado 
## Fi: Frequ√™ncia absoluta 
## Fr: Frequ√™ncia relativa 
## Fac1: Frequ√™ncia acumulada (abaixo de) 
## Fac2: Frequ√™ncia acumulada (acima de) 
## Fp: Frequ√™ncia percentual 
## Fac1p: Frequ√™ncia acumulada percentual (abaixo de) 
## Fac2p: Frequ√™ncia acumulada percentual (acima de)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Tabela de frequ√™ncia 
## Tipo de vari√°vel: continuous
## 
##           Classes Fi   PM   Fr Fac1 Fac2 Fp  Fac1p  Fac2p
## 1 25.7 |---  36.3  1 31.0 0.03    1   36  3   2.78 100.00
## 2 36.3 |---  46.9  2 41.6 0.06    3   35  6   8.33  97.22
## 3 46.9 |---  57.5  4 52.2 0.11    7   33 11  19.44  91.67
## 4 57.5 |---  68.1 12 62.8 0.33   19   29 33  52.78  80.56
## 5 68.1 |---  78.7 12 73.4 0.33   31   17 33  86.11  47.22
## 6 78.7 |---  89.3  5 84.0 0.14   36    5 14 100.00  13.89
## 
##  ============================================== 
## Classes: Agrupamento de classes 
## Fi: Frequ√™ncia absoluta 
## PM: Ponto m√©dio 
## Fr: Frequ√™ncia relativa 
## Fac1: Frequ√™ncia acumulada (abaixo de) 
## Fac2: Frequ√™ncia acumulada (acima de) 
## Fp: Frequ√™ncia percentual 
## Fac1p: Frequ√™ncia acumulada percentual (abaixo de) 
## Fac2p: Frequ√™ncia acumulada percentual (acima de)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt; Apresenta√ß√£o gr√°fica &lt;/h2&gt;
&lt;h3&gt;Gr√°fico de hastes ou bast√£o&lt;/h3&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Forma convencional:
aux1 &amp;lt;- new_leem(d1, variable = &amp;quot;discrete&amp;quot;)
aux2 &amp;lt;- tabfreq(aux1)
stickchart(aux2,
          lwd=3, # largura da linha
          pcol = &amp;quot;red&amp;quot;, # cor da linha
          bgcol = &amp;quot;lightgray&amp;quot;, # cor do fundo
          panel.first = grid(col = &amp;quot;white&amp;quot;) # inserindo grid e sua cor
         )
# Usando o pipe
d1 |&amp;gt;
  new_leem(variable = &amp;quot;discrete&amp;quot;) |&amp;gt;
  tabfreq() |&amp;gt;
  stickchart(lwd=3, # largura da linha
            pcol = &amp;quot;red&amp;quot;, # cor da linha
            bgcol = &amp;quot;lightgray&amp;quot;, # cor do fundo
            panel.first = grid(col = &amp;quot;white&amp;quot;) # inserindo grid e sua cor
            )
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s03/index_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;Gr√°fico de barras&lt;/h3&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Forma convencional:
aux1 &amp;lt;- new_leem(d1, variable = 1)
aux2 &amp;lt;- tabfreq(aux1)
barplot(aux2, barcol = heat.colors(5))
# Usando o pipe
d1 |&amp;gt;
  new_leem(variable = 1) |&amp;gt;
    tabfreq() |&amp;gt;
      barplot(barcol = heat.colors(5))
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s03/index_files/figure-html/unnamed-chunk-12-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;Histograma de frequ√™ncias&lt;/h3&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Usando o pipe:
d2 |&amp;gt;
  new_leem(variable = 2) |&amp;gt;
    tabfreq() |&amp;gt;
      hist(barcol = heat.colors(6))
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s03/index_files/figure-html/unnamed-chunk-13-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;Pol√≠gono&lt;/h3&gt;
&lt;h4&gt;Dados discretos&lt;/h4&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Usando o pipe:
d1 |&amp;gt;
  new_leem(variable = 1) |&amp;gt;
    tabfreq() |&amp;gt;
      polyfreq(barcol = heat.colors(5),
           main = &amp;quot;Pol√≠gono de frequ√™ncias e
Histograma de frequ√™ncias&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s03/index_files/figure-html/unnamed-chunk-14-1.png&#34; width=&#34;672&#34; /&gt;
&lt;pre&gt;&lt;code&gt;## 
##  Note: The polygon graph has interpretation problems for the discrete quantitative variable
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;Pol√≠gono&lt;/h3&gt;
&lt;h4&gt;Dados cont√≠nuos&lt;/h4&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Usando o pipe:
d2 |&amp;gt;
  new_leem(variable = 2) |&amp;gt;
    tabfreq() |&amp;gt;
      polyfreq(barcol = heat.colors(5),
           main = &amp;quot;Pol√≠gono de frequ√™ncias e
Histograma de frequ√™ncias&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s03/index_files/figure-html/unnamed-chunk-15-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;Pol√≠gono&lt;/h3&gt;
&lt;h4&gt;Sem as barras&lt;/h4&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Usando o pipe:
d2 |&amp;gt;
  new_leem(variable = 2) |&amp;gt;
    tabfreq() |&amp;gt;
      polyfreq(bars = FALSE)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s03/index_files/figure-html/unnamed-chunk-16-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;Ogivas&lt;/h3&gt;
&lt;h4&gt;Dados discretos (Crescente)&lt;/h4&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Usando o pipe:
d1 |&amp;gt;
  new_leem(variable = 1) |&amp;gt;
    tabfreq() |&amp;gt;
      ogive(bars = TRUE, barcol = &amp;quot;red&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s03/index_files/figure-html/unnamed-chunk-17-1.png&#34; width=&#34;672&#34; /&gt;
&lt;pre&gt;&lt;code&gt;## 
##  Note: The ogive graph has interpretation problems for the discrete quantitative variable
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;Ogivas&lt;/h3&gt;
&lt;h4&gt;Dados discretos (Decrescente)&lt;/h4&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;d1 |&amp;gt;
  new_leem(variable = 1) |&amp;gt;
   tabfreq() |&amp;gt;
    ogive(decreasing = TRUE,
        bars = TRUE, barcol = &amp;quot;yellow&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s03/index_files/figure-html/unnamed-chunk-18-1.png&#34; width=&#34;672&#34; /&gt;
&lt;pre&gt;&lt;code&gt;## 
##  Note: The ogive graph has interpretation problems for the discrete quantitative variable
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;Ogivas&lt;/h3&gt;
&lt;h4&gt;Dados discretos (Ambos)&lt;/h4&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;d1 |&amp;gt;
  new_leem(variable = 1) |&amp;gt;
  tabfreq() |&amp;gt;
  ogive(both = TRUE, # ambas ogivas
        bars = TRUE, # barras
        barcol = c(&amp;quot;red&amp;quot;, &amp;quot;yellow&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s03/index_files/figure-html/unnamed-chunk-19-1.png&#34; width=&#34;672&#34; /&gt;
&lt;pre&gt;&lt;code&gt;## 
##  Note: The ogive graph has interpretation problems for the discrete quantitative variable
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;Ogivas&lt;/h3&gt;
&lt;h4&gt;Dados cont√≠nuos (Crescente)&lt;/h4&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;d2 |&amp;gt;
  new_leem(variable = 2) |&amp;gt;
  tabfreq() |&amp;gt;
  ogive(bars = TRUE, barcol = &amp;quot;red&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s03/index_files/figure-html/unnamed-chunk-20-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;Ogivas&lt;/h3&gt;
&lt;h4&gt;Dados cont√≠nuos (Decrescente)&lt;/h4&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;d2 |&amp;gt;
  new_leem(variable = 2) |&amp;gt;
  tabfreq() |&amp;gt;
  ogive(decreasing = TRUE,
        bars = TRUE, barcol = &amp;quot;yellow&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s03/index_files/figure-html/unnamed-chunk-21-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;Ogivas&lt;/h3&gt;
&lt;h4&gt;Dados cont√≠nuos (Ambos)&lt;/h4&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;d2 |&amp;gt;
  new_leem(variable = 2) |&amp;gt;
  tabfreq() |&amp;gt;
  ogive(both = TRUE, # ambas ogivas
        bars = TRUE, # barras
        barcol = c(&amp;quot;red&amp;quot;, &amp;quot;yellow&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s03/index_files/figure-html/unnamed-chunk-22-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;Ogivas&lt;/h3&gt;
&lt;h4&gt;Dados cont√≠nuos (Ambos + Histograma)&lt;/h4&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;d2 |&amp;gt;
  new_leem(variable = 2) |&amp;gt;
  tabfreq() |&amp;gt;
  ogive(both = TRUE, # ambas ogivas
        bars = TRUE, # barras
        barcol = c(&amp;quot;red&amp;quot;, &amp;quot;yellow&amp;quot;), # cor da barra das duas ogivas
        histogram = TRUE, # incluindo o histograma
        histcol = gray.colors(6), # cor do histograma
        bgcol = &amp;quot;purple&amp;quot;) # cor do fundo
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s03/index_files/figure-html/unnamed-chunk-23-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h1 id=&#34;quest√µes&#34;&gt;Quest√µes?&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;D√∫vidas e Sugest√µes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/#contact&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Contato&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;!-- https://revealjs.com/transitions/ --&gt;
&lt;section data-transition=&#34;zoom&#34;&gt;
  &lt;h1&gt;Pr√≥ximas aulas...&lt;/h1&gt;
&lt;/section&gt;
&lt;section data-transition-speed=&#34;fast&#34;&gt;
&lt;a href=&#34;http://bendeivide.github.io/courses/epaec&#34; target=&#34;_blank&#34;&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/profmat-est/s03/ben_hu087225affb9399e037f09661c4d0adbd_219224_5c10d459c8ddc0416f506a4ad838a085.webp 400w,
               /slides/profmat-est/s03/ben_hu087225affb9399e037f09661c4d0adbd_219224_29ebba9a3e515b23ea411bffea18d2f1.webp 760w,
               /slides/profmat-est/s03/ben_hu087225affb9399e037f09661c4d0adbd_219224_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/profmat-est/s03/ben_hu087225affb9399e037f09661c4d0adbd_219224_5c10d459c8ddc0416f506a4ad838a085.webp&#34;
               width=&#34;630&#34;
               height=&#34;480&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;
&lt;p&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec&#34; target=&#34;_blank&#34;&gt;bendeivide.github.io/courses/epaec&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;!-- &lt;section&gt; --&gt;
&lt;!--   &lt;h2&gt;Some Slide&lt;/h2&gt; --&gt;
&lt;!--   &lt;aside class=&#34;notes&#34;&gt; --&gt;
&lt;!--     Anota√ß√µes no Visualizador (Clique em S) üìù --&gt;
&lt;!--   &lt;/aside&gt; --&gt;
&lt;!-- &lt;/section&gt; --&gt;
&lt;!-- ## Anima√ß√£o --&gt;
&lt;!-- &lt;section data-auto-animate&gt; --&gt;
&lt;!--   &lt;h1&gt;Auto-Animate&lt;/h1&gt; --&gt;
&lt;!-- &lt;/section&gt; --&gt;
&lt;!-- &lt;section data-auto-animate&gt; --&gt;
&lt;!--   &lt;h1 style=&#34;margin-top: 100px; color: red;&#34;&gt;Auto-Animate&lt;/h1&gt; --&gt;
&lt;!-- &lt;/section&gt; --&gt;
</description>
    </item>
    
    <item>
      <title>Estat√≠stica e Probabilidade</title>
      <link>http://bendeivide.github.io/slides/profmat-est/s04/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/profmat-est/s04/</guid>
      <description>
&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap.png&#34;
  &gt;

&lt;h1 id=&#34;estat√≠stica-e-probabilidade&#34;&gt;Estat√≠stica e Probabilidade&lt;/h1&gt;
&lt;p&gt;Aula 04 - Coleta, organiza√ß√£o e apresenta√ß√£o de dados
&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-user-tie  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ben D√™ivide&lt;/a&gt; | 
  &lt;i class=&#34;fas fa-school  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://www.ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;
&lt;/br&gt;

  &lt;i class=&#34;fas fa-book  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/courses/epaec/&#34;&gt;Estat√≠stica e Probabilidade&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;selo-dc&#34;&gt;Selo DC&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/dc/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/profmat-est/s04/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_57f4d021c573f1cdb22f5303fccfacd9.webp 400w,
               /slides/profmat-est/s04/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_e3124639f3c96b16d12396d9954194c3.webp 760w,
               /slides/profmat-est/s04/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/profmat-est/s04/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_57f4d021c573f1cdb22f5303fccfacd9.webp&#34;
               width=&#34;385&#34;
               height=&#34;406&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;section&gt;
  &lt;h2&gt;Motiva√ß√£o inicial&lt;/h2&gt;
  &lt;h3&gt; Dados (Primeiro tipo) &lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;##    [1] 100.93730855  90.78737290  31.43347250  70.04161421 114.72725633
##    [6] 119.48971504  39.59619123  81.81619913  18.66636591  87.17608029
##   [11] 155.08897515 137.78907540  88.08832220 149.37223517 137.06950642
##   [16] 104.46736332  52.25280719  90.24248077 146.27606310 124.14892624
##   [21]  70.18446816  -9.26434191  66.25670311  -5.95305960  36.74009892
##   [26]  81.31692224  65.62222848  56.39205866  94.91194969  87.31097349
##   [31]   7.31297728  96.10269670 148.42831703 109.24629800  31.00282108
##   [36]  28.22428188 118.10436143  12.04566231  83.77279952  67.42185057
##   [41] 154.32756997  61.87275600  58.56687325 141.72369515  51.61740066
##   [46]  98.55923323 111.62625763  84.93956592  66.11927084 132.76138181
##   [51]  79.96812265  83.27217175 168.39769766 206.88835518 125.29096323
##   [56] 139.31711921  54.88940279 126.64484962  67.70528732 114.54937442
##   [61]  38.12027656  77.19118624  58.48386726 117.00578218 153.31881978
##   [66] 160.80629190 136.78453288  75.93956913 128.13723814  37.68401441
##   [71] 119.04611063  28.47863736  47.57772476  89.07482247  25.50318816
##   [76] 158.63531406  26.00864892  78.48060920  47.41806790 176.12931720
##   [81] 129.64140273  88.86692455 135.64471381 135.83004169 122.01209322
##   [86] 107.94153107 132.98820692 211.02598315  40.80274630  96.30220828
##   [91]  79.18226626  90.42588281 103.47723907 157.76741590 129.74786735
##   [96]  29.01774458  19.66613773 144.64629498 107.40839776 161.35141951
##  [101]  61.90978304 120.96877029  48.00283177 135.57869830  68.33934925
##  [106] 128.15873322 133.04933429  17.09745713 151.40839885 156.39768070
##  [111]  35.99226983 156.44341137  76.79327364  84.21198952 146.21465734
##  [116] 103.85723620 151.99618026 137.09431034 162.77724291 147.54594832
##  [121]  75.93171964 110.14408890  98.41301281  40.22098498 131.18406184
##  [126]  54.25977582 112.43790039  46.86886034  81.80088764  39.65025733
##  [131] 171.46063907 131.67179455   0.15921912  65.90839135  76.99722603
##  [136]  50.84654029 124.76658564 136.29087501 133.36493659 147.73932182
##  [141]  16.23339104  39.74073038   1.83737554 173.53761549 118.62361693
##  [146] 153.29396670 126.53249342 105.09917229 166.88912329 104.36173842
##  [151]  80.44478963  87.50662577 157.75523729  56.76363801  56.66608288
##  [156] -16.05085152 130.44150845 157.50030241  40.02011641  20.99996227
##  [161] 132.65830968  72.52957574 126.05272627  65.02984668  78.05453426
##  [166]  66.13403519 147.95705974  26.59133353 109.18819463  28.24264087
##  [171]  43.13000509  79.26773366 107.19671441 153.10121653  71.46030486
##  [176] 163.85906882 111.41446603  84.55934677 147.99145653 127.44111874
##  [181] 121.27565469 132.17500176  31.98469282  90.07469468 130.96513384
##  [186] 203.41048025  84.73576229 114.06228061 134.56586684 102.31807191
##  [191] 105.65146808 149.76659371  65.94243193  36.14713767  26.56511251
##  [196]  84.32629667  14.81702537  32.47426719  44.89531614  45.02284927
##  [201] 160.77568881 116.54382426 169.51375596 143.60234925  45.95914887
##  [206] 124.79107957 152.63137781  36.26750249  90.31666358  35.24581787
##  [211] 107.09401423 163.08575260  78.42498360   8.86437052 117.62719794
##  [216]  32.57742793 135.38441590  79.45545316  77.69774100  47.94218492
##  [221]  83.53876419  85.85891879 121.62145627  84.61964525  97.16818461
##  [226] 136.67577101 104.86558098 181.54458683 128.03053495 166.47823822
##  [231]  86.05882522  36.66342279  87.54258030 100.89942073 118.85363636
##  [236] 139.80042788  57.96612915 -10.27358754  43.59720045  32.93450206
##  [241] 180.25570214 137.22118642 143.10411030 119.75779077 125.45593482
##  [246]  93.87249371 104.62923236  82.10600428  82.01723878 151.42853604
##  [251] 153.89462962 146.58906076  26.96030665  54.69622119  65.98260843
##  [256] 153.15830184  65.37934239  43.31858674  45.26922831  49.35481906
##  [261] 120.51386629 123.88702210 -16.49397725 100.81277326 149.01767616
##  [266] 140.31741324 105.98004444 -21.83078022 101.55112381  83.21266510
##  [271]  86.81119190  82.20737696  75.94226009 111.13677339 221.49551593
##  [276] 174.81490594  64.13958986  76.64730499 133.14617264 215.00884455
##  [281] 116.37550706 103.19317408  43.02195300 159.02051018 102.06942385
##  [286]  39.32032183 103.65978883  87.13377028 113.34032055 169.38621629
##  [291] 109.65398175 129.61583113  58.50127365 119.62866408 119.24338053
##  [296] 152.55223329 157.78987423  48.27810205  87.27659671 163.68421330
##  [301] 175.12723195 129.52047336  68.46572743 139.61747686 106.26922851
##  [306] 116.13774856  77.72083953 138.34219672  29.82484891  41.19766102
##  [311] 125.57982346 165.83826319 219.64564735  96.61152958  89.81074668
##  [316] 199.82172261 177.16088972  38.58311869 232.22439961 137.85068541
##  [321] 152.76725961 147.89724477 141.69395288  91.53622150  79.77831785
##  [326] 114.78007869  88.40627464  77.59608842 101.11553983 102.22336486
##  [331] 124.03605826 131.78099276  -0.03711965  65.46722481  93.46774053
##  [336]  82.78741085  97.37935880 104.80619603 113.32035266 127.73967376
##  [341] 161.77229393 114.25666907  77.06035361 131.17390109  63.80024542
##  [346] 180.97093517  69.16632949 119.22705287 205.72606564  48.57163169
##  [351]  55.66060172 163.55730007  19.74572794 156.11366915 207.92193209
##  [356] 121.41233065 160.05893452 151.58450581 132.69371264 200.60408866
##  [361] 154.73149209 136.32046770  30.01714317  35.61024184  51.57922612
##  [366]  13.16571211 141.58486790  62.05234457 207.75385005  78.83705599
##  [371]  99.71750317 120.01808643  81.71610990  78.54280824 112.23485634
##  [376] 210.98881244 115.71349040  71.81074627  25.71519208 120.76492965
##  [381]  73.59681587  82.47646913 136.53109686  72.16879175  27.51197319
##  [386]  47.40017859  65.85806906  69.35294107 194.53900175  92.72947332
##  [391]  68.02881397  79.44119774 117.13959392  43.33766227 103.30351513
##  [396] 101.89998830 146.05323738 206.74828192  70.00865342 162.22232293
##  [401]  96.02714914 159.08757749 209.30720313 120.30874654  63.08204477
##  [406]   2.17566485   2.49771492  52.95010922 159.88933843  68.78803048
##  [411]  93.35651724  99.13895389  77.01853589 173.64683953 208.46598063
##  [416] -50.07156532  11.40072085  81.75803886 118.72668903  38.29610367
##  [421] 123.74467110 161.65287285  70.34356716 137.61312197 130.60227534
##  [426]  88.56713174  64.75803251 161.47580236 175.92575649 167.25470902
##  [431]  93.81542355 146.69512268 100.97484228 141.54260549  84.77526660
##  [436]  97.03593614 150.36983487  31.11024570  49.78986365  98.83598475
##  [441] 177.33736369  62.03183745 150.33963287 113.71074582  95.98088177
##  [446]  54.82237523 123.65725515 169.42444890 101.73730469  35.37074860
##  [451] 158.19837525  23.83077015 -25.91675268  64.62353847  85.62835586
##  [456]  78.23458443  82.84606146  98.03445580 144.34829939  82.00257996
##  [461]  63.55228647 187.58728096  95.69807049 155.31815079  99.04110814
##  [466]  25.32699108 235.03183115  62.81527889 153.25974905  98.39591342
##  [471]  73.00201553   3.71782162 150.39156881  86.03826016  37.52170724
##  [476] 162.42455639  90.38933117 145.59881155  -7.91348400 164.48052662
##  [481]  78.59450172  87.24985535 166.35791194 141.93450603  26.74996614
##  [486]  69.18736511 105.30529197   7.79916211  19.17885731 111.38383521
##  [491] 146.06083510  83.43982803 164.36170155 102.86304012 -10.19665626
##  [496]  73.85448259 154.03926551  87.84293312  54.52767189  56.58502463
##  [501] 143.47375225  65.99952011 108.66072694  92.02809805 139.67497163
##  [506] 184.71752457 161.99843432 101.47183716 182.86072495 156.56115701
##  [511]  29.87946839 107.83852306 143.37542982  98.33824214 147.70322782
##  [516] 156.50483626 119.68486560 118.84041640  87.41285465 125.20474454
##  [521]  33.50982643  94.08502737  68.33757667 133.88456724  85.10591176
##  [526] 131.39611236 183.92153640 -20.00012703  32.50785575 160.10039479
##  [531] 164.69213597  97.02028269  65.74688274  27.32803478 164.70632806
##  [536] 158.80845447 143.20225391 -14.83662617  30.40949940  30.70616275
##  [541]  46.34765780  52.92872484  70.67828451 151.73606100 122.94811033
##  [546]  40.32774640 139.59446358  11.38475446  70.61387890  35.88148437
##  [551]  84.39326695  65.06123497 -32.19248839 141.25111884 115.34631566
##  [556]  97.09802709 146.32847054  89.06540697 149.65667487   3.83328288
##  [561]  47.36424078 144.51988810 277.05701388 137.07553713  89.62643730
##  [566] 108.99692271 171.31824247  77.84166053 118.35949933 134.79108481
##  [571] 146.67223643 174.59445413 157.97614951 111.33979785  35.22674076
##  [576]  96.86106542 149.66414684  49.70345300  62.45075262 187.20081912
##  [581]  40.61999543  79.15147911  21.50899203  85.97629824  70.73365181
##  [586] 133.01595988  68.12437255  73.04891834 147.57601168  94.72100771
##  [591]  81.29653636  91.18837096 113.82416540 111.81662963 203.08370797
##  [596]  35.49700071 128.55947237 189.26951134 110.64701215 144.23460730
##  [601]  54.90148678  97.26250210  32.16226445 115.86152886 169.78595597
##  [606]  39.43880916  89.79291696  22.37743370 125.90248343  79.05798484
##  [611]  14.52733922 224.15813357 124.90168675  66.30658974  55.65093022
##  [616]  13.43113246 130.22745607  56.43624609 136.26708232  98.46340099
##  [621]  94.13888128 104.91114693  66.15713891  97.53768225  71.96401200
##  [626] 219.95774326  95.50639492  58.91757911  85.65191192 106.56394370
##  [631]  46.89580248 136.67905179 116.13460992  82.55101143 164.17628321
##  [636]  49.27559756  74.49678629  91.64151269  84.86661072 201.32352362
##  [641] 145.04528192 106.77145202  89.93555229  59.65816295 132.20620619
##  [646]  83.16704397  13.41482444 113.09603313  54.16512009  71.57177624
##  [651]  56.70897791 141.27469559  59.99338579 148.79150434 235.00377654
##  [656]  93.23052016  94.69844180  32.79680974 122.15609143 148.05588708
##  [661]  87.92820917 104.14774456  81.91376211 116.69300999 113.28047105
##  [666] 250.64528733  82.76349312 153.12787266  63.51574630 102.82738605
##  [671] 123.39148560  81.36773747 110.50808438 164.48041528  18.65802251
##  [676]  60.82317452 125.54565517 160.88130280 115.25546238 110.51468167
##  [681] 123.44329828   4.78287139 161.92011423 119.54994457  98.44005416
##  [686]  19.05997391 122.56331391  65.45783182 170.27228110  14.93286561
##  [691] 109.61227986  64.85216193  59.57220683  68.09006292 186.86727140
##  [696] -13.02391316  19.37639531 132.68700994 145.14403643 137.73042439
##  [701]  88.65946156  65.20156862 125.33236787 130.81171468  16.65603627
##  [706]  83.18728871 125.35899284  15.13046492  89.65363880  80.07014859
##  [711]  40.56900863 122.62827021 110.37948520  39.49388119 138.37075271
##  [716]  70.04861544  21.95136136  50.21679785 154.66255042 145.85714430
##  [721]  61.34753224  76.20820912  43.46484080  78.55822842  58.02081751
##  [726]  69.95066635  61.30546109  55.37538244  98.21340765  84.79109488
##  [731] -50.60818918  -0.42615289  97.68142953  82.02314677  90.24891691
##  [736]  24.27649323  55.39834764  56.86467543 127.59770740  90.58830433
##  [741]  83.74266282  73.15307754  81.42612936 136.14035118 160.28459417
##  [746] 159.20765628 133.55952177 158.77510367 109.42632364 124.95317984
##  [751]   2.61908443 121.03686231 158.67381249  27.68842215  81.66243970
##  [756]  69.61018826 115.99356887 154.99238361  79.69816862 220.53732134
##  [761] 157.94499424 116.91947958 122.80886720  84.29776668 170.21720101
##  [766]  79.48650255  95.59487419 116.24377974 159.25499001  87.22457133
##  [771] 144.22239604  75.57194652  63.63119134  40.58723635  73.10287920
##  [776] 105.96756087 165.90890477 172.15402788 112.45131058 140.78511634
##  [781]  63.26960968 112.90766390  57.35696156 110.78243793  64.53948940
##  [786] 135.54327616  77.63140706  83.08508479 125.86167111 104.93517972
##  [791] 137.18428079  86.07249293 126.95358403  95.58302652  62.71212459
##  [796]  21.99607744 154.14782627 -17.05280013 110.31526330 138.23712856
##  [801]  -6.25342905 126.05893332  97.67885500  42.52641395 131.46691539
##  [806]  63.67642620  80.67913388  66.41428051 145.01930952 144.34208453
##  [811] 119.51390559  53.62442549 137.29196144 124.74120783  98.90342691
##  [816] 129.40111631 137.82455370  75.29868637  63.33421857  99.94898030
##  [821] 140.29128484 155.46546909  84.51602589  54.57108759 113.15130638
##  [826]  98.95410962  89.38287462  48.44480401 106.97553698 108.31089923
##  [831]  50.76701755 101.13170354 139.26650163  41.04052379 195.53953888
##  [836]  73.09992525 144.21382145 107.36548184  49.57863186 141.90944961
##  [841]  41.58804313 122.71590665 110.62864338  72.34568263 101.17150126
##  [846] 132.40894452  12.86026324 129.75813305  56.07354935 132.22187856
##  [851]  68.54507487  95.08999052 134.21088496  30.76569845 177.74727930
##  [856]  59.28293291  57.81844571 151.24637129 105.78516882 112.07470199
##  [861]  30.45919292 176.30304223 102.32581184 161.99911798 115.42863177
##  [866] 139.28138023 155.87393524  99.75088638  91.07908949 134.81145345
##  [871] 126.08986042  77.60867049 120.27003020  63.15177877 112.78740072
##  [876]  85.75332475  98.44393375  75.70705565  93.24559579  25.96406386
##  [881] 162.81845628 110.45208250 115.65783948 153.75741193  85.66874127
##  [886]  98.40112863  62.86333017 204.26100961 142.74452052 150.02229981
##  [891]  40.79410450  22.94487224  89.41334996 108.51762850  65.46113128
##  [896] 184.88603695  96.36550187  64.11955719  79.17427808 209.67933805
##  [901] 127.11739129 151.18338045 140.64130544 165.05135387 128.39782055
##  [906]  93.99642789  75.39986469 110.03859877 108.23996494 134.68288481
##  [911] 106.66621267  63.02684207  80.12405924 112.85793197  85.99130404
##  [916] 150.39837961 157.76098120  89.86025254  83.92952265  18.94730415
##  [921] 128.40526295 133.56401236 173.01297609  18.11403129 164.92505411
##  [926]  92.31500856 178.95744228 202.76175928 164.22433254 120.87016586
##  [931] 157.99268036 124.57951279 155.10043589 128.42852151  81.80414574
##  [936] 106.84781854 136.21377136 176.99908030 149.34961674  52.69890010
##  [941]  69.36596579 164.34432952  72.16749200  98.85111389 166.23705613
##  [946] 113.19488345 142.06695095  86.79312555 144.33846460 111.27428778
##  [951] 127.24163623 158.81253634  84.32123791 125.26883443 176.98506493
##  [956] 174.55013553 112.18447423  79.23428368  -1.75863811  67.83210511
##  [961] 102.69107405  80.52190580 193.89127767  27.11966366 136.19276892
##  [966]  39.09618692  84.71205651 101.21988583 117.61330506 141.18948778
##  [971] 129.88932805 164.78187322  71.09669104 108.64874902  70.94018770
##  [976]  60.87047018  16.65853979  64.32633758  74.66620861  65.24080279
##  [981] 127.08039056  70.94613518 121.54160255 133.58505948  78.32463472
##  [986]  60.95082856 120.81490912  58.91897002 110.55379452 137.74115849
##  [991] 189.00548763 133.29738410  99.46330902  39.94726968  67.83011078
##  [996] 139.86461552 126.41241372 114.18348694  99.39303476  90.40431113
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h3&gt; Dados (Segundo tipo) &lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;##    [1] -50.60818918 -50.07156532 -32.19248839 -25.91675268 -21.83078022
##    [6] -20.00012703 -17.05280013 -16.49397725 -16.05085152 -14.83662617
##   [11] -13.02391316 -10.27358754 -10.19665626  -9.26434191  -7.91348400
##   [16]  -6.25342905  -5.95305960  -1.75863811  -0.42615289  -0.03711965
##   [21]   0.15921912   1.83737554   2.17566485   2.49771492   2.61908443
##   [26]   3.71782162   3.83328288   4.78287139   7.31297728   7.79916211
##   [31]   8.86437052  11.38475446  11.40072085  12.04566231  12.86026324
##   [36]  13.16571211  13.41482444  13.43113246  14.52733922  14.81702537
##   [41]  14.93286561  15.13046492  16.23339104  16.65603627  16.65853979
##   [46]  17.09745713  18.11403129  18.65802251  18.66636591  18.94730415
##   [51]  19.05997391  19.17885731  19.37639531  19.66613773  19.74572794
##   [56]  20.99996227  21.50899203  21.95136136  21.99607744  22.37743370
##   [61]  22.94487224  23.83077015  24.27649323  25.32699108  25.50318816
##   [66]  25.71519208  25.96406386  26.00864892  26.56511251  26.59133353
##   [71]  26.74996614  26.96030665  27.11966366  27.32803478  27.51197319
##   [76]  27.68842215  28.22428188  28.24264087  28.47863736  29.01774458
##   [81]  29.82484891  29.87946839  30.01714317  30.40949940  30.45919292
##   [86]  30.70616275  30.76569845  31.00282108  31.11024570  31.43347250
##   [91]  31.98469282  32.16226445  32.47426719  32.50785575  32.57742793
##   [96]  32.79680974  32.93450206  33.50982643  35.22674076  35.24581787
##  [101]  35.37074860  35.49700071  35.61024184  35.88148437  35.99226983
##  [106]  36.14713767  36.26750249  36.66342279  36.74009892  37.52170724
##  [111]  37.68401441  38.12027656  38.29610367  38.58311869  39.09618692
##  [116]  39.32032183  39.43880916  39.49388119  39.59619123  39.65025733
##  [121]  39.74073038  39.94726968  40.02011641  40.22098498  40.32774640
##  [126]  40.56900863  40.58723635  40.61999543  40.79410450  40.80274630
##  [131]  41.04052379  41.19766102  41.58804313  42.52641395  43.02195300
##  [136]  43.13000509  43.31858674  43.33766227  43.46484080  43.59720045
##  [141]  44.89531614  45.02284927  45.26922831  45.95914887  46.34765780
##  [146]  46.86886034  46.89580248  47.36424078  47.40017859  47.41806790
##  [151]  47.57772476  47.94218492  48.00283177  48.27810205  48.44480401
##  [156]  48.57163169  49.27559756  49.35481906  49.57863186  49.70345300
##  [161]  49.78986365  50.21679785  50.76701755  50.84654029  51.57922612
##  [166]  51.61740066  52.25280719  52.69890010  52.92872484  52.95010922
##  [171]  53.62442549  54.16512009  54.25977582  54.52767189  54.57108759
##  [176]  54.69622119  54.82237523  54.88940279  54.90148678  55.37538244
##  [181]  55.39834764  55.65093022  55.66060172  56.07354935  56.39205866
##  [186]  56.43624609  56.58502463  56.66608288  56.70897791  56.76363801
##  [191]  56.86467543  57.35696156  57.81844571  57.96612915  58.02081751
##  [196]  58.48386726  58.50127365  58.56687325  58.91757911  58.91897002
##  [201]  59.28293291  59.57220683  59.65816295  59.99338579  60.82317452
##  [206]  60.87047018  60.95082856  61.30546109  61.34753224  61.87275600
##  [211]  61.90978304  62.03183745  62.05234457  62.45075262  62.71212459
##  [216]  62.81527889  62.86333017  63.02684207  63.08204477  63.15177877
##  [221]  63.26960968  63.33421857  63.51574630  63.55228647  63.63119134
##  [226]  63.67642620  63.80024542  64.11955719  64.13958986  64.32633758
##  [231]  64.53948940  64.62353847  64.75803251  64.85216193  65.02984668
##  [236]  65.06123497  65.20156862  65.24080279  65.37934239  65.45783182
##  [241]  65.46113128  65.46722481  65.62222848  65.74688274  65.85806906
##  [246]  65.90839135  65.94243193  65.98260843  65.99952011  66.11927084
##  [251]  66.13403519  66.15713891  66.25670311  66.30658974  66.41428051
##  [256]  67.42185057  67.70528732  67.83011078  67.83210511  68.02881397
##  [261]  68.09006292  68.12437255  68.33757667  68.33934925  68.46572743
##  [266]  68.54507487  68.78803048  69.16632949  69.18736511  69.35294107
##  [271]  69.36596579  69.61018826  69.95066635  70.00865342  70.04161421
##  [276]  70.04861544  70.18446816  70.34356716  70.61387890  70.67828451
##  [281]  70.73365181  70.94018770  70.94613518  71.09669104  71.46030486
##  [286]  71.57177624  71.81074627  71.96401200  72.16749200  72.16879175
##  [291]  72.34568263  72.52957574  73.00201553  73.04891834  73.09992525
##  [296]  73.10287920  73.15307754  73.59681587  73.85448259  74.49678629
##  [301]  74.66620861  75.29868637  75.39986469  75.57194652  75.70705565
##  [306]  75.93171964  75.93956913  75.94226009  76.20820912  76.64730499
##  [311]  76.79327364  76.99722603  77.01853589  77.06035361  77.19118624
##  [316]  77.59608842  77.60867049  77.63140706  77.69774100  77.72083953
##  [321]  77.84166053  78.05453426  78.23458443  78.32463472  78.42498360
##  [326]  78.48060920  78.54280824  78.55822842  78.59450172  78.83705599
##  [331]  79.05798484  79.15147911  79.17427808  79.18226626  79.23428368
##  [336]  79.26773366  79.44119774  79.45545316  79.48650255  79.69816862
##  [341]  79.77831785  79.96812265  80.07014859  80.12405924  80.44478963
##  [346]  80.52190580  80.67913388  81.29653636  81.31692224  81.36773747
##  [351]  81.42612936  81.66243970  81.71610990  81.75803886  81.80088764
##  [356]  81.80414574  81.81619913  81.91376211  82.00257996  82.01723878
##  [361]  82.02314677  82.10600428  82.20737696  82.47646913  82.55101143
##  [366]  82.76349312  82.78741085  82.84606146  83.08508479  83.16704397
##  [371]  83.18728871  83.21266510  83.27217175  83.43982803  83.53876419
##  [376]  83.74266282  83.77279952  83.92952265  84.21198952  84.29776668
##  [381]  84.32123791  84.32629667  84.39326695  84.51602589  84.55934677
##  [386]  84.61964525  84.71205651  84.73576229  84.77526660  84.79109488
##  [391]  84.86661072  84.93956592  85.10591176  85.62835586  85.65191192
##  [396]  85.66874127  85.75332475  85.85891879  85.97629824  85.99130404
##  [401]  86.03826016  86.05882522  86.07249293  86.79312555  86.81119190
##  [406]  87.13377028  87.17608029  87.22457133  87.24985535  87.27659671
##  [411]  87.31097349  87.41285465  87.50662577  87.54258030  87.84293312
##  [416]  87.92820917  88.08832220  88.40627464  88.56713174  88.65946156
##  [421]  88.86692455  89.06540697  89.07482247  89.38287462  89.41334996
##  [426]  89.62643730  89.65363880  89.79291696  89.81074668  89.86025254
##  [431]  89.93555229  90.07469468  90.24248077  90.24891691  90.31666358
##  [436]  90.38933117  90.40431113  90.42588281  90.58830433  90.78737290
##  [441]  91.07908949  91.18837096  91.53622150  91.64151269  92.02809805
##  [446]  92.31500856  92.72947332  93.23052016  93.24559579  93.35651724
##  [451]  93.46774053  93.81542355  93.87249371  93.99642789  94.08502737
##  [456]  94.13888128  94.69844180  94.72100771  94.91194969  95.08999052
##  [461]  95.50639492  95.58302652  95.59487419  95.69807049  95.98088177
##  [466]  96.02714914  96.10269670  96.30220828  96.36550187  96.61152958
##  [471]  96.86106542  97.02028269  97.03593614  97.09802709  97.16818461
##  [476]  97.26250210  97.37935880  97.53768225  97.67885500  97.68142953
##  [481]  98.03445580  98.21340765  98.33824214  98.39591342  98.40112863
##  [486]  98.41301281  98.44005416  98.44393375  98.46340099  98.55923323
##  [491]  98.83598475  98.85111389  98.90342691  98.95410962  99.04110814
##  [496]  99.13895389  99.39303476  99.46330902  99.71750317  99.75088638
##  [501]  99.94898030 100.81277326 100.89942073 100.93730855 100.97484228
##  [506] 101.11553983 101.13170354 101.17150126 101.21988583 101.47183716
##  [511] 101.55112381 101.73730469 101.89998830 102.06942385 102.22336486
##  [516] 102.31807191 102.32581184 102.69107405 102.82738605 102.86304012
##  [521] 103.19317408 103.30351513 103.47723907 103.65978883 103.85723620
##  [526] 104.14774456 104.36173842 104.46736332 104.62923236 104.80619603
##  [531] 104.86558098 104.91114693 104.93517972 105.09917229 105.30529197
##  [536] 105.65146808 105.78516882 105.96756087 105.98004444 106.26922851
##  [541] 106.56394370 106.66621267 106.77145202 106.84781854 106.97553698
##  [546] 107.09401423 107.19671441 107.36548184 107.40839776 107.83852306
##  [551] 107.94153107 108.23996494 108.31089923 108.51762850 108.64874902
##  [556] 108.66072694 108.99692271 109.18819463 109.24629800 109.42632364
##  [561] 109.61227986 109.65398175 110.03859877 110.14408890 110.31526330
##  [566] 110.37948520 110.45208250 110.50808438 110.51468167 110.55379452
##  [571] 110.62864338 110.64701215 110.78243793 111.13677339 111.27428778
##  [576] 111.33979785 111.38383521 111.41446603 111.62625763 111.81662963
##  [581] 112.07470199 112.18447423 112.23485634 112.43790039 112.45131058
##  [586] 112.78740072 112.85793197 112.90766390 113.09603313 113.15130638
##  [591] 113.19488345 113.28047105 113.32035266 113.34032055 113.71074582
##  [596] 113.82416540 114.06228061 114.18348694 114.25666907 114.54937442
##  [601] 114.72725633 114.78007869 115.25546238 115.34631566 115.42863177
##  [606] 115.65783948 115.71349040 115.86152886 115.99356887 116.13460992
##  [611] 116.13774856 116.24377974 116.37550706 116.54382426 116.69300999
##  [616] 116.91947958 117.00578218 117.13959392 117.61330506 117.62719794
##  [621] 118.10436143 118.35949933 118.62361693 118.72668903 118.84041640
##  [626] 118.85363636 119.04611063 119.22705287 119.24338053 119.48971504
##  [631] 119.51390559 119.54994457 119.62866408 119.68486560 119.75779077
##  [636] 120.01808643 120.27003020 120.30874654 120.51386629 120.76492965
##  [641] 120.81490912 120.87016586 120.96877029 121.03686231 121.27565469
##  [646] 121.41233065 121.54160255 121.62145627 122.01209322 122.15609143
##  [651] 122.56331391 122.62827021 122.71590665 122.80886720 122.94811033
##  [656] 123.39148560 123.44329828 123.65725515 123.74467110 123.88702210
##  [661] 124.03605826 124.14892624 124.57951279 124.74120783 124.76658564
##  [666] 124.79107957 124.90168675 124.95317984 125.20474454 125.26883443
##  [671] 125.29096323 125.33236787 125.35899284 125.45593482 125.54565517
##  [676] 125.57982346 125.86167111 125.90248343 126.05272627 126.05893332
##  [681] 126.08986042 126.41241372 126.53249342 126.64484962 126.95358403
##  [686] 127.08039056 127.11739129 127.24163623 127.44111874 127.59770740
##  [691] 127.73967376 128.03053495 128.13723814 128.15873322 128.39782055
##  [696] 128.40526295 128.42852151 128.55947237 129.40111631 129.52047336
##  [701] 129.61583113 129.64140273 129.74786735 129.75813305 129.88932805
##  [706] 130.22745607 130.44150845 130.60227534 130.81171468 130.96513384
##  [711] 131.17390109 131.18406184 131.39611236 131.46691539 131.67179455
##  [716] 131.78099276 132.17500176 132.20620619 132.22187856 132.40894452
##  [721] 132.65830968 132.68700994 132.69371264 132.76138181 132.98820692
##  [726] 133.01595988 133.04933429 133.14617264 133.29738410 133.36493659
##  [731] 133.55952177 133.56401236 133.58505948 133.88456724 134.21088496
##  [736] 134.56586684 134.68288481 134.79108481 134.81145345 135.38441590
##  [741] 135.54327616 135.57869830 135.64471381 135.83004169 136.14035118
##  [746] 136.19276892 136.21377136 136.26708232 136.29087501 136.32046770
##  [751] 136.53109686 136.67577101 136.67905179 136.78453288 137.06950642
##  [756] 137.07553713 137.09431034 137.18428079 137.22118642 137.29196144
##  [761] 137.61312197 137.73042439 137.74115849 137.78907540 137.82455370
##  [766] 137.85068541 138.23712856 138.34219672 138.37075271 139.26650163
##  [771] 139.28138023 139.31711921 139.59446358 139.61747686 139.67497163
##  [776] 139.80042788 139.86461552 140.29128484 140.31741324 140.64130544
##  [781] 140.78511634 141.18948778 141.25111884 141.27469559 141.54260549
##  [786] 141.58486790 141.69395288 141.72369515 141.90944961 141.93450603
##  [791] 142.06695095 142.74452052 143.10411030 143.20225391 143.37542982
##  [796] 143.47375225 143.60234925 144.21382145 144.22239604 144.23460730
##  [801] 144.33846460 144.34208453 144.34829939 144.51988810 144.64629498
##  [806] 145.01930952 145.04528192 145.14403643 145.59881155 145.85714430
##  [811] 146.05323738 146.06083510 146.21465734 146.27606310 146.32847054
##  [816] 146.58906076 146.67223643 146.69512268 147.54594832 147.57601168
##  [821] 147.70322782 147.73932182 147.89724477 147.95705974 147.99145653
##  [826] 148.05588708 148.42831703 148.79150434 149.01767616 149.34961674
##  [831] 149.37223517 149.65667487 149.66414684 149.76659371 150.02229981
##  [836] 150.33963287 150.36983487 150.39156881 150.39837961 151.18338045
##  [841] 151.24637129 151.40839885 151.42853604 151.58450581 151.73606100
##  [846] 151.99618026 152.55223329 152.63137781 152.76725961 153.10121653
##  [851] 153.12787266 153.15830184 153.25974905 153.29396670 153.31881978
##  [856] 153.75741193 153.89462962 154.03926551 154.14782627 154.32756997
##  [861] 154.66255042 154.73149209 154.99238361 155.08897515 155.10043589
##  [866] 155.31815079 155.46546909 155.87393524 156.11366915 156.39768070
##  [871] 156.44341137 156.50483626 156.56115701 157.50030241 157.75523729
##  [876] 157.76098120 157.76741590 157.78987423 157.94499424 157.97614951
##  [881] 157.99268036 158.19837525 158.63531406 158.67381249 158.77510367
##  [886] 158.80845447 158.81253634 159.02051018 159.08757749 159.20765628
##  [891] 159.25499001 159.88933843 160.05893452 160.10039479 160.28459417
##  [896] 160.77568881 160.80629190 160.88130280 161.35141951 161.47580236
##  [901] 161.65287285 161.77229393 161.92011423 161.99843432 161.99911798
##  [906] 162.22232293 162.42455639 162.77724291 162.81845628 163.08575260
##  [911] 163.55730007 163.68421330 163.85906882 164.17628321 164.22433254
##  [916] 164.34432952 164.36170155 164.48041528 164.48052662 164.69213597
##  [921] 164.70632806 164.78187322 164.92505411 165.05135387 165.83826319
##  [926] 165.90890477 166.23705613 166.35791194 166.47823822 166.88912329
##  [931] 167.25470902 168.39769766 169.38621629 169.42444890 169.51375596
##  [936] 169.78595597 170.21720101 170.27228110 171.31824247 171.46063907
##  [941] 172.15402788 173.01297609 173.53761549 173.64683953 174.55013553
##  [946] 174.59445413 174.81490594 175.12723195 175.92575649 176.12931720
##  [951] 176.30304223 176.98506493 176.99908030 177.16088972 177.33736369
##  [956] 177.74727930 178.95744228 180.25570214 180.97093517 181.54458683
##  [961] 182.86072495 183.92153640 184.71752457 184.88603695 186.86727140
##  [966] 187.20081912 187.58728096 189.00548763 189.26951134 193.89127767
##  [971] 194.53900175 195.53953888 199.82172261 200.60408866 201.32352362
##  [976] 202.76175928 203.08370797 203.41048025 204.26100961 205.72606564
##  [981] 206.74828192 206.88835518 207.75385005 207.92193209 208.46598063
##  [986] 209.30720313 209.67933805 210.98881244 211.02598315 215.00884455
##  [991] 219.64564735 219.95774326 220.53732134 221.49551593 224.15813357
##  [996] 232.22439961 235.00377654 235.03183115 250.64528733 277.05701388
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h3&gt; Dados (Terceiro tipo) &lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;##                 Classe  Fi     PM   Fr Fac1 Fac2 Fp Fac1p Fac2p
## 1  -62.31 |---  -38.91   2 -50.61 0.00    2 1000  0   0.2 100.0
## 2  -38.91 |---  -15.51   7 -27.21 0.01    9  998  1   0.9  99.8
## 3    -15.51 |---  7.89  21  -3.81 0.02   30  991  2   3.0  99.1
## 4     7.89 |---  31.29  59  19.59 0.06   89  970  6   8.9  97.0
## 5    31.29 |---  54.69  86  42.99 0.09  175  911  9  17.5  91.1
## 6    54.69 |---  78.09 147  66.39 0.15  322  825 15  32.2  82.5
## 7   78.09 |---  101.49 188  89.79 0.19  510  678 19  51.0  67.8
## 8  101.49 |---  124.89 156 113.19 0.16  666  490 16  66.6  49.0
## 9  124.89 |---  148.29 160 136.59 0.16  826  334 16  82.6  33.4
## 10 148.29 |---  171.69 114 159.99 0.11  940  174 11  94.0  17.4
## 11 171.69 |---  195.09  31 183.39 0.03  971   60  3  97.1   6.0
## 12 195.09 |---  218.49  19 206.79 0.02  990   29  2  99.0   2.9
## 13 218.49 |---  241.89   8 230.19 0.01  998   10  1  99.8   1.0
## 14 241.89 |---  265.29   1 253.59 0.00  999    2  0  99.9   0.2
## 15 265.29 |---  288.69   1 276.99 0.00 1000    1  0 100.0   0.1
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h3&gt; Dados (Quarto tipo) &lt;/h3&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s04/index_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;coleta-dados-brutos&#34;&gt;Coleta (Dados brutos)&lt;/h2&gt;
&lt;p&gt;Dados elaborados sobre o n√∫mero de erros encontrados em 20 conjunto de caracteres monitorado em um canal de comunica√ß√£o&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;4&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;dados-em-rol-ou-elaborados&#34;&gt;Dados em rol ou elaborados&lt;/h2&gt;
&lt;p&gt;Dados elaborados sobre o n√∫mero de erros encontrados em 20 conjunto de caracteres monitorado em um canal de comunica√ß√£o&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;section&gt;
&lt;h2&gt; Distribui√ß√£o de frequ√™ncia &lt;/h2&gt;
&lt;h3&gt;Frequ√™ncia absoluta&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;N√∫mero de erros &lt;code&gt;\((x_i)\)&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Frequ√™ncia simples ($f_i$)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;4&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Total&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h3&gt;Frequ√™ncia relativa&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;N√∫mero de erros &lt;code&gt;\((x_i)\)&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(f_i\)&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(f_{r_i}\)&lt;/code&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(3\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(3 / 20 = 0,15\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(1\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(7\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(7 / 20 = 0,35\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(2\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(4\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(4 / 20 = 0,20\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(3\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(5\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(5 / 20 = 0,25\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(4\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(1\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(1 / 20 = 0,05\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h3&gt;Frequ√™ncia percentual&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;N√∫mero de erros &lt;code&gt;\((x_i)\)&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(f_i\)&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(f_{r_i}\)&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(f_{\%_i}\)&lt;/code&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(3\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,15\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,15 \times 100 = 15\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(1\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(7\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,35\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,35 \times 100 = 35\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(2\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(4\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,20\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,20 \times 100 = 20\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(3\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(5\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,25\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,25 \times 100 = 25\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(4\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(1\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,05\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,05 \times 100 = 5\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Total&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(20\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(1\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(100\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h3&gt;Tabela completa&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;N√∫mero de erros &lt;code&gt;\((x_i)\)&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(f_i\)&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(f_{r_i}\)&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(f_{\%_i}\)&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(f_{ac\downarrow_i}\)&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(f_{ac\uparrow_i}\)&lt;/code&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(3\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,15\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(15\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(3\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(20\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(1\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(7\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,35\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(35\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(10\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(17\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(2\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(4\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,20\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(35\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(14\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(10\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(3\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(5\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,25\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(25\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(19\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(6\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(4\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(1\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,05\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(5\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(20\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(1\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Total&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(20\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(1\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(100\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;-&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;section&gt;
&lt;h2&gt;Tabela para V. cont√≠nua (Algoritmo) &lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Classe&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;$ F_i $&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$ Li_{1a} \vdash  Ls_{1a} $&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$ f_1 $&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$ Li_{2a} \vdash  Ls_{2a} $&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$ f_2 $&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$ \vdots $&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$ \vdots $&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$ Li_{ka}  \vdash Ls_{ka} $&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$ f_k $&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;pre&gt; 1¬∫ Passo - N√∫mero de classes &lt;/pre&gt;
&lt;p&gt;&lt;code&gt;\begin{align} k &amp;amp; \approx \left\{\begin{array}{ll} \sqrt{\textrm{n√∫mero de elementos}}, &amp;amp; n \leq 100 \\ 5log_{10}(\textrm{n√∫mero de elementos}), &amp;amp; n &amp;gt; 100 \end{array}\right.  \end{align}&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt; 2¬∫ Passo - Amplitude total &lt;/pre&gt;
&lt;p&gt;&lt;code&gt;\begin{align} A_t &amp;amp; = \max_i(X_i) - \min_i(X_i),  \end{align}&lt;/code&gt;
para &lt;code&gt;\(i \in \mathbb{N}^{+}\)&lt;/code&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;pre&gt; 3¬∫ Passo - Amplitude de classe &lt;/pre&gt;
&lt;p&gt;&lt;code&gt;\begin{align} c &amp;amp; = \left\{\begin{array}{ll} \frac{A_t}{k - 1}, &amp;amp; \textrm{Amostra} \\ \frac{A_t}{k}, &amp;amp; \textrm{Popula√ß√£o}. \end{array}\right.  \end{align}&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt; 4¬∫ Passo - LI da primeira classe &lt;/pre&gt;
&lt;p&gt;&lt;code&gt;\begin{align} Li_{1a} &amp;amp; = \left\{\begin{array}{ll} X_{(1)} - c / 2, &amp;amp; \textrm{Amostra} \\ X_{(1)}, &amp;amp; \textrm{Popula√ß√£o}. \end{array}\right.  \end{align}&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt; Em resumo... &lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Calcular &lt;code&gt;\(k\)&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;Calcular &lt;code&gt;\(A_t\)&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;Calcular &lt;code&gt;\(c\)&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;Calcular &lt;code&gt;\(Li_{1a}\)&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;Determinar as classes,&lt;/li&gt;
&lt;li&gt;Calcular o ponto m√©dio, e&lt;/li&gt;
&lt;li&gt;Calcular as frequ√™ncias como apresentadas no in√≠cio dessa se√ß√£o.&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;gr√°ficos&#34;&gt;Gr√°ficos&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Gr√°fico de Haste ou bast√£o&lt;/li&gt;
&lt;li&gt;Gr√°fico de barras&lt;/li&gt;
&lt;li&gt;Gr√°fico de Pizza&lt;/li&gt;
&lt;li&gt;Histograma de frequ√™ncias&lt;/li&gt;
&lt;li&gt;Ogivas&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;section&gt; 
&lt;h2&gt; Uso do pacote &lt;code&gt;leem&lt;/code&gt; &lt;/h2&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/profmat-est/s04/leem_hu7b1031bcd7f556bee541df85c0c5375e_34750_3761f4b815fffe33ceb7dbc21c169f83.webp 400w,
               /slides/profmat-est/s04/leem_hu7b1031bcd7f556bee541df85c0c5375e_34750_3705f9ee693abc73a6049df605c75df5.webp 760w,
               /slides/profmat-est/s04/leem_hu7b1031bcd7f556bee541df85c0c5375e_34750_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/profmat-est/s04/leem_hu7b1031bcd7f556bee541df85c0c5375e_34750_3761f4b815fffe33ceb7dbc21c169f83.webp&#34;
               width=&#34;150&#34;
               height=&#34;150&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;Instala√ß√£o&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&amp;quot;devtools&amp;quot;)
devtools::install_github(&amp;quot;bendeivide/leem&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Anexando e carregando&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(leem)
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2&gt; Fun√ß√µes &lt;/h2&gt;
&lt;!-- | Fun√ß√£o     | Finalidade                  | --&gt;
&lt;!-- |:-----------|:----------------------------| --&gt;
&lt;!-- | new_leem() | Construtor da classe *leem* | --&gt;
&lt;!-- | tabfreq()  | Disatribui√ß√£o de frequ√™ncia | --&gt;
&lt;!-- | hist()     | Hitograma de frequ√™ncia     | --&gt;
&lt;!-- | ogive()    | Ogivas                      | --&gt;
&lt;!-- | polyfreq() | Pol√≠gono de frequ√™ncias     | --&gt;
&lt;style type=&#34;text/css&#34;&gt;
.tg  {border-collapse:collapse;border-color:#93a1a1;border-spacing:0;}
.tg td{background-color:#fdf6e3;border-bottom-width:1px;border-color:#93a1a1;border-style:solid;border-top-width:1px;
  border-width:0px;color:#002b36;font-family:Arial, sans-serif;font-size:14px;overflow:hidden;padding:10px 5px;
  word-break:normal;}
.tg th{background-color:#657b83;border-bottom-width:1px;border-color:#93a1a1;border-style:solid;border-top-width:1px;
  border-width:0px;color:#fdf6e3;font-family:Arial, sans-serif;font-size:14px;font-weight:normal;overflow:hidden;
  padding:10px 5px;word-break:normal;}
.tg .tg-5lw0{background-color:#eee8d5;border-color:#ffffff;
  font-family:&#34;Lucida Sans Unicode&#34;, &#34;Lucida Grande&#34;, sans-serif !important;font-size:28px;text-align:left;
  vertical-align:middle}
.tg .tg-xzvq{border-color:#ffffff;font-family:&#34;Lucida Sans Unicode&#34;, &#34;Lucida Grande&#34;, sans-serif !important;font-size:28px;
  text-align:left;vertical-align:middle}
.tg .tg-vqs5{border-color:#ffffff;font-family:&#34;Lucida Sans Unicode&#34;, &#34;Lucida Grande&#34;, sans-serif !important;font-size:28px;
  font-weight:bold;text-align:left;vertical-align:middle}
&lt;/style&gt;
&lt;table class=&#34;tg&#34;&gt;
&lt;thead&gt;
  &lt;tr&gt;
    &lt;th class=&#34;tg-vqs5&#34;&gt;Fun√ß√£o&lt;/th&gt;
    &lt;th class=&#34;tg-vqs5&#34;&gt;Finalidade&lt;/th&gt;
  &lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
  &lt;tr&gt;
    &lt;td class=&#34;tg-5lw0&#34;&gt; &lt;code&gt;base::sort()&lt;/code&gt;  &lt;/td&gt;
    &lt;td class=&#34;tg-5lw0&#34;&gt;Dados em rol &lt;/td&gt;
  &lt;/tr&gt;                               
  &lt;tr&gt;
    &lt;td class=&#34;tg-5lw0&#34;&gt; &lt;code&gt;new_leem()&lt;/code&gt;  &lt;/td&gt;
    &lt;td class=&#34;tg-5lw0&#34;&gt;Construtor da classe &lt;i&gt;leem&lt;/i&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class=&#34;tg-xzvq&#34;&gt; &lt;code&gt;tabfreq()&lt;/code&gt;  &lt;/td&gt;
    &lt;td class=&#34;tg-xzvq&#34;&gt;Distribui√ß√£o de frequ√™ncia&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class=&#34;tg-5lw0&#34;&gt; &lt;code&gt;hist()&lt;/code&gt; &lt;/td&gt;
    &lt;td class=&#34;tg-5lw0&#34;&gt;Hitograma de frequ√™ncia&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class=&#34;tg-xzvq&#34;&gt; &lt;code&gt;ogive()&lt;/code&gt; &lt;/td&gt;
    &lt;td class=&#34;tg-xzvq&#34;&gt;Ogivas&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class=&#34;tg-5lw0&#34;&gt; &lt;code&gt;polyfreq()&lt;/code&gt; &lt;/td&gt;
    &lt;td class=&#34;tg-5lw0&#34;&gt;Pol√≠gono de frequ√™ncias&lt;/td&gt;
  &lt;/tr&gt;
   &lt;tr&gt;
    &lt;td class=&#34;tg-5lw0&#34;&gt; &lt;code&gt;stickplot()&lt;/code&gt; &lt;/td&gt;
    &lt;td class=&#34;tg-5lw0&#34;&gt;Gr√°fico de hastes ou bast√£o&lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2&gt; Exemplo &lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Considere a distribui√ß√£o de frequ√™ncia do n√∫mero de erros encontrados em 20 conjunto de carac-  teres monitorado em um canal de comunica√ß√£o&lt;/li&gt;
&lt;/ol&gt;
&lt;style type=&#34;text/css&#34;&gt;
.tg  {border-collapse:collapse;border-color:#93a1a1;border-spacing:0;}
.tg td{background-color:#fdf6e3;border-bottom-width:1px;border-color:#93a1a1;border-style:solid;border-top-width:1px;
  border-width:0px;color:#002b36;font-family:Arial, sans-serif;font-size:14px;overflow:hidden;padding:10px 5px;
  word-break:normal;}
.tg th{background-color:#657b83;border-bottom-width:1px;border-color:#93a1a1;border-style:solid;border-top-width:1px;
  border-width:0px;color:#fdf6e3;font-family:Arial, sans-serif;font-size:14px;font-weight:normal;overflow:hidden;
  padding:10px 5px;word-break:normal;}
.tg .tg-j4p1{background-color:#eee8d5;color:#191919;font-family:&#34;Lucida Sans Unicode&#34;, &#34;Lucida Grande&#34;, sans-serif !important;
  font-size:28px;font-style:italic;font-weight:bold;text-align:right;vertical-align:middle}
.tg .tg-1bo1{background-color:#ffffff;border-color:#fdf6e3;
  font-family:&#34;Lucida Sans Unicode&#34;, &#34;Lucida Grande&#34;, sans-serif !important;font-size:28px;font-style:italic;
  font-weight:bold;text-align:right;vertical-align:middle}
&lt;/style&gt;
&lt;table class=&#34;tg&#34;&gt;
&lt;thead&gt;
  &lt;tr&gt;
    &lt;th class=&#34;tg-j4p1&#34;&gt;&lt;span style=&#34;font-weight:700&#34;&gt;3&lt;/span&gt;&lt;/th&gt;
    &lt;th class=&#34;tg-j4p1&#34;&gt;&lt;span style=&#34;font-weight:700&#34;&gt;0&lt;/span&gt;&lt;/th&gt;
    &lt;th class=&#34;tg-j4p1&#34;&gt;&lt;span style=&#34;font-weight:700&#34;&gt;3&lt;/span&gt;&lt;/th&gt;
    &lt;th class=&#34;tg-j4p1&#34;&gt;&lt;span style=&#34;font-weight:700&#34;&gt;4&lt;/span&gt;&lt;/th&gt;
    &lt;th class=&#34;tg-j4p1&#34;&gt;&lt;span style=&#34;font-weight:700&#34;&gt;3&lt;/span&gt;&lt;/th&gt;
    &lt;th class=&#34;tg-j4p1&#34;&gt;&lt;span style=&#34;font-weight:700&#34;&gt;1&lt;/span&gt;&lt;/th&gt;
    &lt;th class=&#34;tg-j4p1&#34;&gt;&lt;span style=&#34;font-weight:700&#34;&gt;2&lt;/span&gt;&lt;/th&gt;
    &lt;th class=&#34;tg-j4p1&#34;&gt;&lt;span style=&#34;font-weight:700&#34;&gt;3&lt;/span&gt;&lt;/th&gt;
    &lt;th class=&#34;tg-j4p1&#34;&gt;&lt;span style=&#34;font-weight:700&#34;&gt;0&lt;/span&gt;&lt;/th&gt;
    &lt;th class=&#34;tg-j4p1&#34;&gt;&lt;span style=&#34;font-weight:700&#34;&gt;0&lt;/span&gt;&lt;/th&gt;
  &lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
  &lt;tr&gt;
    &lt;td class=&#34;tg-1bo1&#34;&gt;1&lt;/td&gt;
    &lt;td class=&#34;tg-1bo1&#34;&gt;1&lt;/td&gt;
    &lt;td class=&#34;tg-1bo1&#34;&gt;2&lt;/td&gt;
    &lt;td class=&#34;tg-1bo1&#34;&gt;1&lt;/td&gt;
    &lt;td class=&#34;tg-1bo1&#34;&gt;1&lt;/td&gt;
    &lt;td class=&#34;tg-1bo1&#34;&gt;1&lt;/td&gt;
    &lt;td class=&#34;tg-1bo1&#34;&gt;3&lt;/td&gt;
    &lt;td class=&#34;tg-1bo1&#34;&gt;2&lt;/td&gt;
    &lt;td class=&#34;tg-1bo1&#34;&gt;2&lt;/td&gt;
    &lt;td class=&#34;tg-1bo1&#34;&gt;1&lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2&gt;Exemplo&lt;/h2&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Os dados representam a temperatura (¬∞F) do anel de veda√ß√£o de cada teste de acionamento ou lan√ßamento real do motor do foguete Challenger.&lt;/li&gt;
&lt;/ol&gt;
&lt;style type=&#34;text/css&#34;&gt;
.tg  {border-collapse:collapse;border-color:#93a1a1;border-spacing:0;}
.tg td{background-color:#fdf6e3;border-bottom-width:1px;border-color:#93a1a1;border-style:solid;border-top-width:1px;
  border-width:0px;color:#002b36;font-family:Arial, sans-serif;font-size:14px;overflow:hidden;padding:10px 5px;
  word-break:normal;}
.tg th{background-color:#657b83;border-bottom-width:1px;border-color:#93a1a1;border-style:solid;border-top-width:1px;
  border-width:0px;color:#fdf6e3;font-family:Arial, sans-serif;font-size:14px;font-weight:normal;overflow:hidden;
  padding:10px 5px;word-break:normal;}
.tg .tg-61io{background-color:#eee8d5;color:#191919;font-size:28px;font-style:italic;font-weight:bold;text-align:left;
  vertical-align:middle}
.tg .tg-8svn{background-color:#fdf6e3;color:#191919;font-size:28px;font-style:italic;font-weight:bold;text-align:left;
  vertical-align:middle}
.tg .tg-aete{background-color:#fdf6e3;color:#191919;font-family:&#34;Lucida Sans Unicode&#34;, &#34;Lucida Grande&#34;, sans-serif !important;
  font-size:28px;font-style:italic;font-weight:bold;text-align:left;vertical-align:middle}
.tg .tg-4ynv{background-color:#eee8d5;color:#191919;font-family:&#34;Lucida Sans Unicode&#34;, &#34;Lucida Grande&#34;, sans-serif !important;
  font-size:28px;font-style:italic;font-weight:bold;text-align:left;vertical-align:middle}
.tg .tg-uika{color:#191919;font-size:28px;font-style:italic;font-weight:bold;text-align:left;vertical-align:middle}
&lt;/style&gt;
&lt;table class=&#34;tg&#34;&gt;
&lt;thead&gt;
  &lt;tr&gt;
    &lt;th class=&#34;tg-aete&#34;&gt;84&lt;/th&gt;
    &lt;th class=&#34;tg-aete&#34;&gt;49&lt;/th&gt;
    &lt;th class=&#34;tg-aete&#34;&gt;61&lt;/th&gt;
    &lt;th class=&#34;tg-aete&#34;&gt;40&lt;/th&gt;
    &lt;th class=&#34;tg-aete&#34;&gt;83&lt;/th&gt;
    &lt;th class=&#34;tg-aete&#34;&gt;67&lt;/th&gt;
    &lt;th class=&#34;tg-aete&#34;&gt;45&lt;/th&gt;
    &lt;th class=&#34;tg-aete&#34;&gt;66&lt;/th&gt;
    &lt;th class=&#34;tg-aete&#34;&gt;70&lt;/th&gt;
    &lt;th class=&#34;tg-aete&#34;&gt;69&lt;/th&gt;
    &lt;th class=&#34;tg-8svn&#34;&gt;80&lt;/th&gt;
    &lt;th class=&#34;tg-8svn&#34;&gt;58&lt;/th&gt;
  &lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
  &lt;tr&gt;
    &lt;td class=&#34;tg-4ynv&#34;&gt;68&lt;/td&gt;
    &lt;td class=&#34;tg-4ynv&#34;&gt;60&lt;/td&gt;
    &lt;td class=&#34;tg-4ynv&#34;&gt;67&lt;/td&gt;
    &lt;td class=&#34;tg-4ynv&#34;&gt;72&lt;/td&gt;
    &lt;td class=&#34;tg-4ynv&#34;&gt;73&lt;/td&gt;
    &lt;td class=&#34;tg-4ynv&#34;&gt;70&lt;/td&gt;
    &lt;td class=&#34;tg-4ynv&#34;&gt;57&lt;/td&gt;
    &lt;td class=&#34;tg-4ynv&#34;&gt;63&lt;/td&gt;
    &lt;td class=&#34;tg-4ynv&#34;&gt;70&lt;/td&gt;
    &lt;td class=&#34;tg-4ynv&#34;&gt;78&lt;/td&gt;
    &lt;td class=&#34;tg-61io&#34;&gt;52&lt;/td&gt;
    &lt;td class=&#34;tg-61io&#34;&gt;67&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class=&#34;tg-uika&#34;&gt;53&lt;/td&gt;
    &lt;td class=&#34;tg-uika&#34;&gt;67&lt;/td&gt;
    &lt;td class=&#34;tg-uika&#34;&gt;75&lt;/td&gt;
    &lt;td class=&#34;tg-uika&#34;&gt;61&lt;/td&gt;
    &lt;td class=&#34;tg-uika&#34;&gt;70&lt;/td&gt;
    &lt;td class=&#34;tg-uika&#34;&gt;81&lt;/td&gt;
    &lt;td class=&#34;tg-uika&#34;&gt;76&lt;/td&gt;
    &lt;td class=&#34;tg-uika&#34;&gt;79&lt;/td&gt;
    &lt;td class=&#34;tg-uika&#34;&gt;75&lt;/td&gt;
    &lt;td class=&#34;tg-uika&#34;&gt;76&lt;/td&gt;
    &lt;td class=&#34;tg-uika&#34;&gt;58&lt;/td&gt;
    &lt;td class=&#34;tg-uika&#34;&gt;31&lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;style&gt;
.container{
  display: grid;
  text-align: left;
  grid-auto-flow: column;
}
.col {
  width: 500px;
  height: 300px;
  border: 3px solid #0094ff;
}
.col2 {
  width: 500px;
  height: 500px;
  border: 3px solid #0094ff;
}
.col3 {
  width: 500px;
  height: 400px;
  border: 3px solid #0094ff;
}

&lt;/style&gt;
&lt;section&gt;
&lt;h1&gt; &lt;code&gt;leem&lt;/code&gt; em a√ß√£o &lt;/h1&gt;
&lt;hr&gt;
&lt;h2&gt; Importando os dados &lt;/h2&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Numero de erros
d1 &amp;lt;- read.table(&amp;quot;https://raw.githubusercontent.com/bendeivide/book-epaec/master/dados/cap02/nerros.txt&amp;quot;, h = TRUE)
(d1 &amp;lt;- d1$erros)

# Temperatura do foguete Challenger
d2 &amp;lt;- read.table(&amp;quot;https://raw.githubusercontent.com/bendeivide/book-epaec/master/dados/cap02/challenger.txt&amp;quot;, h = TRUE)
(d2 &amp;lt;- d2$chal)

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;pre&gt;&lt;code&gt;##  [1] 3 1 0 1 3 2 4 1 3 1 1 1 2 3 3 2 0 2 0 1
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] 84 49 61 40 83 67 45 66 70 69 80 58 68 60 67 72 73 70 57 63 70 78 52 67 53
## [26] 67 75 61 70 81 76 79 75 76 58 31
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt; Dados em rol &lt;/h2&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;sort(d1)
sort(d2)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;pre&gt;&lt;code&gt;##  [1] 0 0 0 1 1 1 1 1 1 1 2 2 2 2 3 3 3 3 3 4
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] 31 40 45 49 52 53 57 58 58 60 61 61 63 66 67 67 67 67 68 69 70 70 70 70 72
## [26] 73 75 75 76 76 78 79 80 81 83 84
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt; Distribui√ß√£o de frequ√™ncias &lt;/h2&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col2&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;## Forma convencional:
aux &amp;lt;- new_leem(d1, 1)
tabd1 &amp;lt;- tabfreq(aux); tabd1
#-----
aux &amp;lt;- new_leem(d2, 2)
tabd2 &amp;lt;- tabfreq(aux); tabd2 
## Usando o operador &#39;pipe&#39; nativo
d1 |&amp;gt; new_leem(variable = 1) |&amp;gt; tabfreq() 
d2 |&amp;gt; new_leem(variable = 2) |&amp;gt; tabfreq() 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col2&#34;&gt;
&lt;pre&gt;&lt;code&gt;##   Groups Fi   Fr Fac1 Fac2 Fp Fac1p Fac2p
## 1      0  3 0.15    3   20 15    15   100
## 2      1  7 0.35   10   17 35    50    85
## 3      2  4 0.20   14   10 20    70    50
## 4      3  5 0.25   19    6 25    95    30
## 5      4  1 0.05   20    1  5   100     5
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##            Classe Fi   PM   Fr Fac1 Fac2 Fp  Fac1p  Fac2p
## 1 25.7 |---  36.3  1 31.0 0.03    1   36  3   2.78 100.00
## 2 36.3 |---  46.9  2 41.6 0.06    3   35  6   8.33  97.22
## 3 46.9 |---  57.5  4 52.2 0.11    7   33 11  19.44  91.67
## 4 57.5 |---  68.1 12 62.8 0.33   19   29 33  52.78  80.56
## 5 68.1 |---  78.7 12 73.4 0.33   31   17 33  86.11  47.22
## 6 78.7 |---  89.3  5 84.0 0.14   36    5 14 100.00  13.89
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt; Apresenta√ß√£o gr√°fica &lt;/h2&gt;
&lt;h3&gt;Gr√°fico de hastes ou bast√£o&lt;/h3&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col2&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Forma convencional:
aux1 &amp;lt;- new_leem(d1, variable = &amp;quot;discrete&amp;quot;)
aux2 &amp;lt;- tabfreq(aux1)
stickplot(aux2, 
          lwd=3, # largura da linha
          pcol = &amp;quot;red&amp;quot;, # cor da linha
          bgcol = &amp;quot;lightgray&amp;quot;, # cor do fundo
          panel.first = grid(col = &amp;quot;white&amp;quot;) # inserindo grid e sua cor
)
# Usando o pipe
d1 |&amp;gt; 
  new_leem(variable = &amp;quot;discrete&amp;quot;) |&amp;gt; 
  tabfreq() |&amp;gt; 
  stickplot(lwd=3, # largura da linha
            pcol = &amp;quot;red&amp;quot;, # cor da linha
            bgcol = &amp;quot;lightgray&amp;quot;, # cor do fundo
            panel.first = grid(col = &amp;quot;white&amp;quot;) # inserindo grid e sua cor
            )
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col2&#34;&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s04/index_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;Gr√°fico de barras&lt;/h3&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col2&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Forma convencional:
aux1 &amp;lt;- new_leem(d1, variable = 1)
aux2 &amp;lt;- tabfreq(aux1)
barplot(aux2, barcol = heat.colors(5))
# Usando o pipe
d1 |&amp;gt; 
  new_leem(variable = 1) |&amp;gt; 
    tabfreq() |&amp;gt; 
      barplot(barcol = heat.colors(5))
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col2&#34;&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s04/index_files/figure-html/unnamed-chunk-12-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;Histograma de frequ√™ncias&lt;/h3&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Usando o pipe:
d2 |&amp;gt; 
  new_leem(variable = 2) |&amp;gt; 
    tabfreq() |&amp;gt; 
      hist(barcol = heat.colors(6))
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s04/index_files/figure-html/unnamed-chunk-13-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;Pol√≠gono&lt;/h3&gt;
&lt;h4&gt;Dados discretos&lt;/h4&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Usando o pipe:
d1 |&amp;gt; 
  new_leem(variable = 1) |&amp;gt; 
    tabfreq() |&amp;gt; 
      polyfreq(barcol = heat.colors(5),
           main = &amp;quot;Pol√≠gono de frequ√™ncias e
Histograma de frequ√™ncias&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s04/index_files/figure-html/unnamed-chunk-14-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;Pol√≠gono&lt;/h3&gt;
&lt;h4&gt;Dados cont√≠nuos&lt;/h4&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Usando o pipe:
d2 |&amp;gt; 
  new_leem(variable = 2) |&amp;gt; 
    tabfreq() |&amp;gt; 
      polyfreq(barcol = heat.colors(5),
           main = &amp;quot;Pol√≠gono de frequ√™ncias e
Histograma de frequ√™ncias&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s04/index_files/figure-html/unnamed-chunk-15-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;Pol√≠gono&lt;/h3&gt;
&lt;h4&gt;Sem as barras&lt;/h4&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Usando o pipe:
d2 |&amp;gt; 
  new_leem(variable = 2) |&amp;gt; 
    tabfreq() |&amp;gt; 
      polyfreq(bars = FALSE)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s04/index_files/figure-html/unnamed-chunk-16-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;Ogivas&lt;/h3&gt;
&lt;h4&gt;Dados discretos (Crescente)&lt;/h4&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Usando o pipe:
d1 |&amp;gt; 
  new_leem(variable = 1) |&amp;gt; 
    tabfreq() |&amp;gt; 
      ogive(bars = TRUE, barcol = &amp;quot;red&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s04/index_files/figure-html/unnamed-chunk-17-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;Ogivas&lt;/h3&gt;
&lt;h4&gt;Dados discretos (Decrescente)&lt;/h4&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;d1 |&amp;gt; 
  new_leem(variable = 1) |&amp;gt; 
   tabfreq() |&amp;gt; 
    ogive(decreasing = TRUE, 
        bars = TRUE, barcol = &amp;quot;yellow&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s04/index_files/figure-html/unnamed-chunk-18-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;Ogivas&lt;/h3&gt;
&lt;h4&gt;Dados discretos (Ambos)&lt;/h4&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;d1 |&amp;gt; 
  new_leem(variable = 1) |&amp;gt; 
  tabfreq() |&amp;gt; 
  ogive(both = TRUE, # ambas ogivas 
        bars = TRUE, # barras
        barcol = c(&amp;quot;red&amp;quot;, &amp;quot;yellow&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s04/index_files/figure-html/unnamed-chunk-19-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;Ogivas&lt;/h3&gt;
&lt;h4&gt;Dados cont√≠nuos (Crescente)&lt;/h4&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;d2 |&amp;gt; 
  new_leem(variable = 2) |&amp;gt; 
  tabfreq() |&amp;gt; 
  ogive(bars = TRUE, barcol = &amp;quot;red&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s04/index_files/figure-html/unnamed-chunk-20-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;Ogivas&lt;/h3&gt;
&lt;h4&gt;Dados cont√≠nuos (Decrescente)&lt;/h4&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;d2 |&amp;gt; 
  new_leem(variable = 2) |&amp;gt; 
  tabfreq() |&amp;gt; 
  ogive(decreasing = TRUE, 
        bars = TRUE, barcol = &amp;quot;yellow&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s04/index_files/figure-html/unnamed-chunk-21-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;Ogivas&lt;/h3&gt;
&lt;h4&gt;Dados cont√≠nuos (Ambos)&lt;/h4&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;d2 |&amp;gt; 
  new_leem(variable = 2) |&amp;gt; 
  tabfreq() |&amp;gt; 
  ogive(both = TRUE, # ambas ogivas 
        bars = TRUE, # barras
        barcol = c(&amp;quot;red&amp;quot;, &amp;quot;yellow&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s04/index_files/figure-html/unnamed-chunk-22-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;Ogivas&lt;/h3&gt;
&lt;h4&gt;Dados cont√≠nuos (Ambos + Histograma)&lt;/h4&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;d2 |&amp;gt; 
  new_leem(variable = 2) |&amp;gt; 
  tabfreq() |&amp;gt; 
  ogive(both = TRUE, # ambas ogivas 
        bars = TRUE, # barras
        barcol = c(&amp;quot;red&amp;quot;, &amp;quot;yellow&amp;quot;), # cor da barra das duas ogivas
        histogram = TRUE, # incluindo o histograma
        histcol = gray.colors(6), # cor do histograma
        bgcol = &amp;quot;purple&amp;quot;) # cor do fundo
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s04/index_files/figure-html/unnamed-chunk-23-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;fundo02.png&#34;
  &gt;

&lt;h1 id=&#34;quest√µes&#34;&gt;Quest√µes?&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;D√∫vidas e Sugest√µes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/#contact&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Contato&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Estat√≠stica e Probabilidade</title>
      <link>http://bendeivide.github.io/slides/profmat-est/s11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/profmat-est/s11/</guid>
      <description>
&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap.png&#34;
  &gt;

&lt;h1 id=&#34;estat√≠stica-e-probabilidade&#34;&gt;Estat√≠stica e Probabilidade&lt;/h1&gt;
&lt;p&gt;Aula 11 - Probabilidades
&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-user-tie  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ben D√™ivide&lt;/a&gt; | 
  &lt;i class=&#34;fas fa-school  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://www.ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;
&lt;/br&gt;

  &lt;i class=&#34;fas fa-book  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/courses/epaec/&#34;&gt;Estat√≠stica e Probabilidade&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;selo-dc&#34;&gt;Selo DC&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/dc/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/profmat-est/s11/SeloDC-preto_hu7eace1d7dbb403f37b46437825b208a2_37049_1f8e03062ff2fd4b85b7997b55db9e55.webp 400w,
               /slides/profmat-est/s11/SeloDC-preto_hu7eace1d7dbb403f37b46437825b208a2_37049_28a718b08e0f1b8193cec5ac4d8216a2.webp 760w,
               /slides/profmat-est/s11/SeloDC-preto_hu7eace1d7dbb403f37b46437825b208a2_37049_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/profmat-est/s11/SeloDC-preto_hu7eace1d7dbb403f37b46437825b208a2_37049_1f8e03062ff2fd4b85b7997b55db9e55.webp&#34;
               width=&#34;384&#34;
               height=&#34;406&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;section&gt;
&lt;h2&gt;Teoria de conjuntos no contexto probabil√≠stico
&lt;/h2&gt;
&lt;div id=&#34;def:expaleatorio&#34; class=&#34;definicao&#34; cap=5 titulo=&#34;(Experimento Aleat√≥rio)&#34;&gt;
&lt;p&gt;Todo experimento cujo resultado n√£o pode ser previsto antes de sua execu√ß√£o, √© chamado de experimento aleat√≥rio.&lt;/p&gt;
&lt;/br&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Exemplos&lt;/h2&gt;
&lt;div id=&#34;exem:espamos1&#34; class=&#34;exemplo&#34; cap=5 titulo=&#34;Espa√ßo amostral&#34;&gt;
&lt;p&gt;Lan√ßar um dado equilibrado e observar o resultado obtido na face superior do dado.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;exem:espamos2&#34; class=&#34;exemplo&#34; cap=5 titulo=&#34;Espa√ßo amostral&#34;&gt;
&lt;p&gt;Observar o n√∫mero de chamadas telef√¥nicas que chegam a uma central telef√¥nica em um determinado intervalo de tempo.&lt;/p&gt;
&lt;/div&gt;
&lt;div &lt;div id=&#34;exem:espamos2&#34; class=&#34;exemplo&#34; cap=5 titulo=&#34;Espa√ßo amostral&#34;&gt;
&lt;p&gt;Para a escolha ao acaso de uma l√¢mpada que acabou de sair do processo de fabrica√ß√£o, verificar o tempo de dura√ß√£o da l√¢mpada em funcionamento.&lt;/p&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Experimento aleat√≥rio&lt;/h2&gt;
&lt;p&gt;Em um contexto aplicado, podemos estar interessados em estudar a resist√™ncia de um fio de cobre a uma determinada corrente&lt;/p&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/profmat-est/s11/expaleatorio_hu5a0b4df49306a6ef742584dc0fd72a48_101457_689ca7e4b39dd65b6cfdf93a7cced401.webp 400w,
               /slides/profmat-est/s11/expaleatorio_hu5a0b4df49306a6ef742584dc0fd72a48_101457_93c7f3ea0b91359b2e0af9511a60874d.webp 760w,
               /slides/profmat-est/s11/expaleatorio_hu5a0b4df49306a6ef742584dc0fd72a48_101457_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/profmat-est/s11/expaleatorio_hu5a0b4df49306a6ef742584dc0fd72a48_101457_689ca7e4b39dd65b6cfdf93a7cced401.webp&#34;
               width=&#34;630&#34;
               height=&#34;220&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Espa√ßo amostral&lt;/h2&gt;
&lt;div id=&#34;def:espamostral&#34; class=&#34;definicao&#34; cap=5 titulo=&#34;(Espa√ßo amostral)&#34;&gt;
&lt;p&gt;O conjunto de todos os resultados poss√≠veis de um experimento, denotado por $ \Omega $, √© chamado de espa√ßo amostral.&lt;/p&gt;
&lt;/br&gt;
&lt;/div&gt;
&lt;/br&gt;
&lt;ul&gt;
&lt;li&gt;Cada um dos elementos do espa√ßo amostral √© representado por &lt;code&gt;\(\omega\)&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;Rela√ß√µes:
&lt;ul&gt;
&lt;li&gt;Pertin√™ncia: &lt;code&gt;\(\omega \in \Omega\)&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;Contin√™ncia: &lt;code&gt;\(A \subset B \Leftrightarrow \omega \in A \Rightarrow \omega \in B\)&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;Equival√™ncia: &lt;code&gt;\(A = B \Leftrightarrow A \subset B \textrm{ e } B \subset A\)&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Espa√ßos amostrais discretos e cont√≠nuos&lt;/h2&gt;
&lt;div id=&#34;def:espdisccont&#34; class=&#34;definicao&#34; cap=5 titulo=&#34;(Espa√ßos amostrais discretos e cont√≠nuos)&#34;&gt;
&lt;p&gt;Um espa√ßo amostral √© discreto se o conjunto dos poss√≠veis resultados s√£o finito ou infinito cont√°vel (ou enumer√°vel). Um espa√ßo amostral √© dito cont√≠nuo se o conjunto dos poss√≠veis resultados s√£o infinitos n√£o cont√°vel (ou n√£o enumer√°vel). &lt;/p&gt;
&lt;/br&gt;
&lt;/div&gt;
&lt;/br&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Exemplo&lt;/h2&gt;
&lt;div id=&#34;exem:espdisccont&#34; class=&#34;exemplo&#34; font-size: &#34;12px&#34; cap=5 titulo=&#34;C√¢mera Flash&#34;&gt;
&lt;p&gt;Considere um experimento em que voc√™ seleciona uma c√¢mera de telefone celular e registra o tempo de recarga de um &lt;i&gt;flash&lt;/i&gt;. Os resultados poss√≠veis para o tempo dependem da resolu√ß√£o do temporizador e dos tempos m√°ximo e m√≠nimo de recarga. Entretanto, podemos definir inicialmente o espa√ßo amostral em termos da reta real positiva ($\mathbb{R}_+$), isto √©,&lt;/p&gt;
\begin{align*}
  \Omega = \mathbb{R}_+  &amp; = \{ x ~:~ x &gt; 0\}.
\end{align*}
&lt;p&gt;Se soubermos que os tempos de recarga est√£o entre $ 1,5 $ e $ 5 $ segundos, podemos definir o espa√ßo amostral da seguinte forma:&lt;/p&gt;
\begin{align*}
  \Omega  &amp; = \{ x ~:~ 1,5 \leq x \leq 5\}.
\end{align*}
&lt;p&gt;Caso, consideremos o tempo de recarga como &#34;baixo&#34;, &#34;m√©dio&#34; ou &#34;alto&#34;, reescrevemos o espa√ßo amostral como:&lt;/p&gt;
\begin{align*}
  \Omega &amp; =  \{ \textrm{baixo}, \textrm{m√©dio}, \textrm{alto} \}.
\end{align*}
&lt;/br&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Exemplo (continua√ß√£o...)&lt;/h2&gt;
&lt;div id=&#34;exem:espdisccont&#34; class=&#34;exemplo&#34; cap=5 titulo=&#34;C√¢mera Flash&#34;&gt;
&lt;p&gt;Por fim, podemos considerar apenas o fato da c√¢mera satisfazer ou n√£o as especifica√ß√µes do tempo de recarga m√≠nimo, e assim, podemos assumir como resultados para esse espa√ßo amostral: &#34;sim&#34; ou n√£o&#34;, isto √©,&lt;/p&gt;
\begin{align*}
  \Omega &amp; =  \{\textrm{sim},~\textrm{n√£o}\}.
\end{align*}
&lt;p&gt;Para as duas primeiras situa√ß√µes, temos exemplos de espa√ßos amostrais cont√≠nuos, e nos dois √∫ltimos, exemplos de espa√ßos amostrais discretos.&lt;/p&gt;
&lt;/br&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Subconjunto&lt;/h2&gt;
&lt;div id=&#34;def:subcj&#34; class=&#34;definicao&#34; cap=5 titulo=&#34;(Subconjunto)&#34;&gt;
&lt;p&gt;Se todo elemento do conjunto A √© tamb√©m elemento do conjunto B, ent√£o A √© definido como um subconjunto de B, sendo representado $ A\subset B $ ou $ B\supset A $ (A est√° contido em B ou B cont√©m A), em nota√ß√£o dizemos que:&lt;/p&gt;
\begin{align*}
  A \subset B \Leftrightarrow A \subseteq B \textrm{ e } A \neq B.
\end{align*}
&lt;/br&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Essa defini√ß√£o pode ser aplicada tamb√©m a subconjuntos de $ \Omega $, como apresentado no Exemplo sobre subconjuntos, a seguir.&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Exemplo&lt;/h2&gt;
&lt;div id=&#34;exem:subconjunto&#34; class=&#34;exemplo&#34; cap=5 titulo=&#34;&#34;&gt;
&lt;p&gt;Sejam os subconjuntos de $ \Omega $ do experimento aleat√≥rio apresentado no Exemplo sobre espa√ßos amostrais, dos quais temos:&lt;/p&gt;
\begin{align*}
B=\{ 1,2,3,4 \} \ \mbox{ e } \ A= \{ 1,2,3 \},
\end{align*}
&lt;p&gt;ent√£o A √© um subconjunto de B, pois, os elementos que cont√©m em A, tamb√©m cont√©m em B.&lt;/p&gt;
&lt;/br&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Evento&lt;/h2&gt;
&lt;div id=&#34;def:subcj&#34; class=&#34;definicao&#34; cap=5 titulo=&#34;(Evento)&#34;&gt;
&lt;/br&gt;
&lt;p&gt;Todo subconjunto do espa√ßo amostral ($ \Omega $), representado por letras latinas em mai√∫sculo, A, B, $ \ldots $, √© chamado de evento.&lt;/p&gt;
&lt;/br&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Exemplo&lt;/h2&gt;
&lt;div id=&#34;exem:subcj2&#34; class=&#34;exemplo&#34; cap=5 titulo=&#34;&#34;&gt;
&lt;p&gt;Um experimento lan√ßa tr√™s moedas honestas, e deseja-se verificar a face superior dessas moedas. Sabe-se que cada moeda apresenta duas faces: cara (H) e coroa (T). Dessa forma, o espa√ßo amostral √© dado por:&lt;/p&gt;
\begin{align*}
\Omega = &amp;\{(H,H,H),(H,H,T),(H,T,H),(H,T,T),\\
       &amp; (T,H,H),(T,H,T),(T,T,H),(T,T,T)\}.
\end{align*}
&lt;p&gt;Um evento retirado desse espa√ßo amostral seria $ A=\{(H,H,H) $, $ (H,H,T) $, $ (H,T,T) \} $, ou seja, o evento em que dos tr√™s arremessos de moedas, tenha sa√≠do &#34;cara&#34; na primeira moeda.&lt;/p&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Evento certo, imposs√≠vel e elementar&lt;/h2&gt;
&lt;div id=&#34;def:eventosbasicos&#34; class=&#34;definicao&#34; cap=5 titulo=&#34;(Evento certo, imposs√≠vel e elementar)&#34;&gt;
&lt;p&gt;Seja $ \Omega $ o espa√ßo amostral do experimento. Ent√£o dizemos que $ \Omega $ √© o evento certo, e $ \emptyset $ √© o evento imposs√≠vel, e o evento $ \{\omega\} $ √© dito elementar.&lt;/p&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Conjunto vazio&lt;/h2&gt;
&lt;div id=&#34;def:conjvazio&#34; class=&#34;definicao&#34; cap=5 titulo=&#34;(Conjunto vazio)&#34;&gt;
&lt;p&gt;Se o conjunto A n√£o cont√©m nenhum elemento, ent√£o A √© chamado de conjunto nulo ou conjunto vazio, ou seja, $ A=\varnothing $ ou $ A=\{ \ \} $, isto √©,&lt;/p&gt;
\begin{align*}
  A &amp; = \{\omega \in \Omega: \omega \neq \omega \}.
\end{align*}
&lt;/br&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Uni√£o de dois eventos&lt;/h2&gt;
&lt;div id=&#34;def:udoisevt&#34; class=&#34;definicao&#34; cap=5 titulo=&#34;(Uni√£o de dois eventos)&#34;&gt;
&lt;p&gt;Sejam A e B, dois eventos quaisquer de $ \Omega $, ent√£o o conjunto de todos os elementos que est√£o em A ou B ou em ambos, √© definido como o conjunto uni√£o de A e B, denotado por $ A\cup B $, tal que,&lt;/p&gt;
\begin{align*}
  A\cup B &amp; = \{\omega \in \Omega: ~\omega \in A \textrm{ ou } \omega \in B\}.
\end{align*}
&lt;/br&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Exemplo&lt;/h2&gt;
&lt;div id=&#34;exem:udoisevt&#34; class=&#34;exemplo&#34; cap=5 titulo=&#34;&#34;&gt;
&lt;p&gt;Sejam os conjuntos:&lt;/p&gt;
\begin{align*}
  A &amp; =\{1,2,3\} \ \mbox{e} \ B=\{3,4,5,6\},
\end{align*}
&lt;p&gt;ent√£o&lt;/p&gt;
\begin{align*}
  A\cup B &amp; =\{1,2,3,4,5,6\}.
\end{align*}
&lt;/br&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Interse√ß√£o de dois eventos&lt;/h2&gt;
&lt;div id=&#34;def_inteventos&#34; class=&#34;definicao&#34; cap=5 titulo=&#34;(Interse√ß√£o de dois eventos)&#34;&gt;
&lt;p&gt;Sejam A e B, dois eventos quaisquer de $ \Omega $, ent√£o o conjunto que cont√©m todos os elementos que est√£o em A e B, √© definido como a interse√ß√£o de A e B, denotado por $ A\cap B $ ou $ AB $, tal que,&lt;/p&gt;
\begin{align*}
  A \cap B &amp; = \{\omega \in \Omega: ~\omega \in A \textrm{ e } \omega \in B\}.
\end{align*}
&lt;/br&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;ul&gt;
&lt;li&gt;Do Exemplo sobre uni√£o de eventos, temos que a intersec√ß√£o de $ AB = {3} $.&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Eventos Disjuntos ou multuamente exclusivos&lt;/h2&gt;
&lt;div id=&#34;def:disjeventos&#34; class=&#34;definicao&#34; cap=5 titulo=&#34;(Eventos Disjuntos ou multuamente exclusivos)&#34;&gt;
&lt;p&gt;Sejam A e B, dois eventos quaisquer de $ \Omega $, ent√£o estes s√£o disjuntos ou mutuamente exclusivos quando n√£o existir elementos em comum entre A e B, isto √©, $ A\cap B = \emptyset $.&lt;/p&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Exemplo&lt;/h2&gt;
&lt;div id=&#34;exem:disjeventos&#34; class=&#34;exemplo&#34; cap=5 titulo=&#34;&#34;&gt;
&lt;p&gt;Sejam os eventos $ A=\{1,2,3,4\} $ e $ B=\{5,6\} $, ent√£o $ A\cap B=\varnothing $.&lt;/p&gt;
&lt;/br&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Eventos equivalentes&lt;/h2&gt;
&lt;div id=&#34;def:equieventos&#34; class=&#34;definicao&#34; cap=5 titulo=&#34;(Eventos equivalentes)&#34;&gt;
&lt;p&gt;Dois eventos $ A $ e $ B $ s√£o definidos equivalentes, ou iguais, se $ A\subseteq B $ e $ B \subseteq A $.&lt;/p&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Exemplo&lt;/h2&gt;
&lt;div id=&#34;exem:equieventos&#34; class=&#34;exemplo&#34; cap=5 titulo=&#34;&#34;&gt;
&lt;p&gt;Sejam os eventos $ A=\{1,2,3,4\} $ e $ B=\{5,6\} $, ent√£o $ A\cap B=\varnothing $.&lt;/p&gt;
&lt;/br&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Evento complementar&lt;/h2&gt;
&lt;div id=&#34;def:compevento&#34; class=&#34;definicao&#34; cap=5 titulo=&#34;(Evento Complementar)&#34;&gt;
&lt;p&gt;Seja $ A $ um evento de $ \Omega $. Ent√£o o complemento do evento A com respeito a $ \Omega $, denotado por $ \overline{A} $, $ A^c $, ou $ \Omega-A $, √© o subconjunto dos elementos de $ \Omega $ exceto os elementos do evento A, isto √©,&lt;/p&gt;
\begin{align*}\label{compeventos}
  A^c &amp; = \{\omega \in \Omega: ~ \omega \notin A\}.
\end{align*}
&lt;/br&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Exemplo&lt;/h2&gt;
&lt;div id=&#34;exem:compevento&#34; class=&#34;exemplo&#34; cap=5 titulo=&#34;&#34;&gt;
&lt;p&gt;Seja o espa√ßo amostral  $ \Omega $ do experimento que consiste em arremessar tr√™s moedas honestas. Diremos que $ H $ consiste na face superior da moeda ser cara, e $ T $ coroa. Assim,&lt;/p&gt;
\begin{align*}
\Omega = &amp;\{(H,H,H),(H,H,T),(H,T,H),(H,T,T),\\
&amp; (T,H,H),(T,H,T),(T,T,H),(T,T,T)\}.
\end{align*}
&lt;p&gt;e um subconjunto de $ \Omega $, cujo evento ser√° aparecer cara na primeira moeda, dado por&lt;/p&gt;
$$ A=\{(H,H,H),(H,H,T),(H,T,H), (H,T,T)\}. $$
&lt;p&gt;Ent√£o o complemento de A ser√°:&lt;/p&gt;
$$ \overline{A}=\{(T,H,H),(T,H,T), (T,T,H), (T,T,T)\}. $$
&lt;/br&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Diferen√ßa de dois eventos&lt;/h2&gt;
&lt;div id=&#34;def:difeventos&#34; class=&#34;definicao&#34; cap=5 titulo=&#34;(Diferen√ßa de dois eventos)&#34;&gt;
&lt;p&gt;Sejam A e B dois eventos de $ \Omega $. O conjunto de todos os elementos de $ A $ que n√£o est√£o em $ B $, ser√£o denotados por $ A-B $ ou $ A\setminus B $, sendo definido por conjunto diferen√ßa, isto √©,&lt;/p&gt;
\begin{align*}
  A - B &amp; = \{\omega \in \Omega: ~\omega \in A \textrm{ e } \omega \notin B\}.
\end{align*}
&lt;/br&gt;
&lt;/div&gt;
&lt;aside class=&#34;notes&#34;&gt;
  üìù A Defini√ß√£o  de diferen√ßa de conjuntos pode ser confundida com a Defini√ß√£o evento complementar, por√©m esta √∫ltima se remete ao espa√ßo amostral, e a diferen√ßa entre dois eventos se refere apenas a exist√™ncia dos elementos de um evento que n√£o est√£o em outro evento. Vejamos o Exemplo diferen√ßa de evendos, e depois compare com o Exemplo de evento complementar, para elucidar essas duas defini√ß√µes.
&lt;/aside&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Exemplo&lt;/h2&gt;
&lt;div id=&#34;exem:compevento&#34; class=&#34;exemplo&#34; cap=5 titulo=&#34;&#34;&gt;
&lt;p&gt; Sejam os conjuntos $ A=\{1,2,3,4\} $ e $ B =\{3,4\} $, ent√£o $ A-B=\{1,2\} $. &lt;/p&gt;
&lt;/br&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Parti√ß√£o&lt;/h2&gt;
&lt;div id=&#34;def:particao&#34; class=&#34;definicao&#34; cap=5 titulo=&#34;(Parti√ß√£o)&#34;&gt;
&lt;p&gt;Considerando uma sequ√™ncia de eventos $ A_1 $, $ A_2 $, $ \ldots $, $ A_n $, n√£o vazios, √© uma parti√ß√£o do evento $ A $, se e somente se,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$ A = \bigcup_{i = 1}^{n}A_i $;&lt;/li&gt;
&lt;li&gt;$ A_1 $, $ A_2 $, $ \ldots $, $ A_n $ s√£o multuamente disjuntos, tais que $ A_i \cap A_j, ~\forall i \neq j $.
&lt;/br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Leis na teoria de conjuntos&lt;/h2&gt;
&lt;div id=&#34;def:leiconj&#34; class=&#34;definicao&#34; cap=5 titulo=&#34;(Leis na teoria de conjuntos)&#34;&gt;
&lt;p&gt;Considere tr√™s eventos $ A $, $ B $, e $ C $ definidos em $ \Omega $, ent√£o segue que:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Lei comutativa: $ A\cup B = B \cup A$ e  $A\cap B = B \cap A $;&lt;/li&gt;
&lt;li&gt;Lei associativa: $ A \cup (B\cup C)=(A\cup B)\cup C $;&lt;/li&gt;
&lt;li&gt;Lei distributiva: $ A \cup (B \cap C)=(A\cup B)\cap (A\cup C) $ e $ A \cap (B \cup C)=(A\cap B)\cup (A\cap C) $;&lt;/li&gt;
&lt;li&gt;Lei DeMorgan: $ (A \cup B)^c = A^c \cap B^c $ e $( A \cap B)^c = A^c \cup B^c $.
&lt;/br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/br&gt;
&lt;div id=&#34;prova:leiconj&#34; class=&#34;prova&#34; cap=5 titulo=&#34;&#34;&gt;
&lt;p&gt;Ver livro &lt;a href=&#34;https://bendeivide.github.io/book-epaec/&#34;&gt;EPAEC&lt;/a&gt;!. &lt;/p&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Identidades em conjuntos&lt;/h2&gt;
&lt;div id=&#34;def:identconj&#34; class=&#34;definicao&#34; cap=5 titulo=&#34;(Identidade em conjuntos)&#34;&gt;
&lt;p&gt;Sejam os eventos $ A $ e $ B $ definidos no espa√ßo amostral  $ \Omega $, n√£o vazio. Ent√£o, apresentamos as seguintes identidades:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$ A\cap A^c = \emptyset $;&lt;/li&gt;
&lt;li&gt;$ A \cup A^c = \Omega $;&lt;/li&gt;
&lt;li&gt;$ \Omega^c = \emptyset $;&lt;/li&gt;
&lt;li&gt;$ \emptyset^c = \Omega $;&lt;/li&gt;
&lt;li&gt;$ (A^C)^C=\overline{(\overline{A})}=A $, em outras palavras, o complemento de $ \overline{A} $ √© igual a $ A $;&lt;/li&gt;
&lt;li&gt;$ A\Omega=A $ (Elemento neutro);&lt;/li&gt;
&lt;li&gt;$ A\cup \Omega=\Omega $;&lt;/li&gt;
&lt;li&gt;$ A \cap A = A $ (Idempot√™ncia);&lt;/li&gt;
&lt;li&gt;$ A\varnothing=\varnothing $ (Elemento absorvente);&lt;/li&gt;
&lt;li&gt;$ A\cup \varnothing = A $;&lt;/li&gt;
&lt;li&gt;$ A - B = A - (A \cap B) = A \cap B^c $;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\(B = (B \cap A) \cup (B \cap A^c)\)&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\(B - A = B \cap A^c\)&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\(A \cup B = A \cup (B \cap A^c)\)&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\(A \cup B = (A^c \cap B)\cup (A \cap B) \cup (A \cap B^c)\)&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/br&gt;
&lt;/div&gt;
&lt;/br&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h1 id=&#34;quest√µes&#34;&gt;Quest√µes?&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;D√∫vidas e Sugest√µes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/#contact&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Contato&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Estat√≠stica e Probabilidade</title>
      <link>http://bendeivide.github.io/slides/profmat-est/s12/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/profmat-est/s12/</guid>
      <description>
&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap.png&#34;
  &gt;

&lt;h1 id=&#34;estat√≠stica-e-probabilidade&#34;&gt;Estat√≠stica e Probabilidade&lt;/h1&gt;
&lt;p&gt;Aula 12 - Probabilidades (Parte II)
&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-user-tie  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ben D√™ivide&lt;/a&gt; | 
  &lt;i class=&#34;fas fa-school  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://www.ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;
&lt;/br&gt;

  &lt;i class=&#34;fas fa-book  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/courses/epaec/&#34;&gt;Estat√≠stica e Probabilidade&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;selo-dc&#34;&gt;Selo DC&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/dc/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/profmat-est/s12/SeloDC-preto_hu7eace1d7dbb403f37b46437825b208a2_37049_1f8e03062ff2fd4b85b7997b55db9e55.webp 400w,
               /slides/profmat-est/s12/SeloDC-preto_hu7eace1d7dbb403f37b46437825b208a2_37049_28a718b08e0f1b8193cec5ac4d8216a2.webp 760w,
               /slides/profmat-est/s12/SeloDC-preto_hu7eace1d7dbb403f37b46437825b208a2_37049_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/profmat-est/s12/SeloDC-preto_hu7eace1d7dbb403f37b46437825b208a2_37049_1f8e03062ff2fd4b85b7997b55db9e55.webp&#34;
               width=&#34;384&#34;
               height=&#34;406&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;motiva√ß√£o&#34;&gt;Motiva√ß√£o&lt;/h2&gt;
&lt;p&gt; Na &lt;a href=&#34;https://bendeivide.github.io/slides/estprob/s02/&#34; target=&#34;_blank&#34;&gt;Aula 02&lt;/a&gt; vimos como uma das motiva√ß√µes...&lt;/p&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/profmat-est/s12/epaec_exerc5.19_huf42f90654072e146aede07d81ef72130_118873_d2eb6c328bbca59128eb008a44841e3c.webp 400w,
               /slides/profmat-est/s12/epaec_exerc5.19_huf42f90654072e146aede07d81ef72130_118873_2422affad744e4d2bee6a7971f41e9ec.webp 760w,
               /slides/profmat-est/s12/epaec_exerc5.19_huf42f90654072e146aede07d81ef72130_118873_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/profmat-est/s12/epaec_exerc5.19_huf42f90654072e146aede07d81ef72130_118873_d2eb6c328bbca59128eb008a44841e3c.webp&#34;
               width=&#34;830&#34;
               height=&#34;420&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;motiva√ß√£o-1&#34;&gt;Motiva√ß√£o&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Veremos que por meio de algumas &lt;strong&gt;propriedades da probabilidade&lt;/strong&gt;, poderemos chegar a algumas solu√ß√µes para esse problema&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;defini√ß√µes-de-probabilidades&#34;&gt;Defini√ß√µes de probabilidades&lt;/h2&gt;
&lt;div id=&#34;&#34; class=&#34;exemplo&#34; cap=5 titulo=&#34;&#34;&gt;
&lt;p&gt;Lan√ßar um dado equilibrado e observar o resultado obtido na face superior do dado.considerando que esse dado √© equilibrado, e o evento $ A\subset \Omega $, ent√£o podemos calcular a chance de $ A $ ocorrer pela la medida de probabilidade, da seguinte forma:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\begin{align*} P(A) &amp;amp; = \frac{\#A}{6} = \frac{\textrm{n√∫mero de resultados favor√°veis a A}}{\textrm{n√∫mero de resultados poss√≠veis}}. \end{align*}&lt;/code&gt;
&lt;/br&gt;&lt;/p&gt;
&lt;p class=&#34;fragment&#34;&gt; Essa √© a conhecida a probabilidade cl√°ssica!&lt;/p&gt;
&lt;/div&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;evento-aleat√≥rio&#34;&gt;Evento aleat√≥rio&lt;/h2&gt;
&lt;div id=&#34;def:aleateventos&#34; class=&#34;definicao&#34; cap=5 titulo=&#34;(Evento aleat√≥rio)&#34;&gt;
&lt;p&gt; Todo evento de $ \Omega $ que podemos atribuir uma probabilidade, chamamos de evento aleat√≥rio. &lt;/p&gt;
&lt;/br&gt;
&lt;/div&gt;
&lt;/br&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;medida-de-probabilidade&#34;&gt;Medida de probabilidade&lt;/h2&gt;
&lt;div id=&#34;def:medprob&#34; class=&#34;definicao&#34; cap=5 titulo=&#34;(Medida de probabilidade)&#34;&gt;
&lt;p&gt;Seja $ \Omega $ o espa√ßo amostral, ent√£o uma fun√ß√£o $ P $, tal que $ P:\Omega \to \mathbb{R} $, √© chamada de medida de probabilidade ou probabilidade, aos eventos do espa√ßo amostral satisfazendo os seguintes axiomas de Kolmogorov:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;$ P(\Omega) = 1 $;&lt;/li&gt;
&lt;li&gt;$ 0\leq  P(A) \leq 1$, $ \forall \ A \subset \Omega $;&lt;/li&gt;
&lt;li&gt;$ P(A_1 \cup A_2) = P(A_1) + P(A_2)$, com $A_1 \cap A_2 = \emptyset $, para $ A_1, ~A_2 \subset \Omega $.&lt;/li&gt;
&lt;/ol&gt;
&lt;/br&gt;
&lt;/div&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;exemplo&#34;&gt;Exemplo&lt;/h2&gt;
&lt;div id=&#34;&#34; class=&#34;exemplo&#34; cap=5 titulo=&#34;&#34;&gt;
&lt;p&gt;Uma pe√ßa moldada de inje√ß√£o √© igualmente prov√°vel de ser obtida, a partir de qualquer  uma das oito cavidades de um molde.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Qual √© o espa√ßo amostral?&lt;/li&gt;
&lt;li&gt;Qual √© a probabilidade de a pe√ßa ser proveniente da cavidade 1 ou 2?&lt;/li&gt;
&lt;li&gt;Qual √© a probabilidade de a pe√ßa n√£o ser proveniente nem da cavidade 3 nem da 4?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nesse caso, (a) o espa√ßo amostral √© $ \Omega = \{1, 2, 3, 4, 5, 6, 7, 8\} $. Como a pe√ßa moldada de inje√ß√£o √© igualmente prov√°vel, ent√£o (b) a probabilidade de a pe√ßa ser proveniente da cavidade 1 ou 2, √© dada por:&lt;/p&gt;
\[\begin{aligned}
  P(\{1\} \cup \{2\}) &amp;amp; = P(\{1\}) + P(\{2\}), \quad \textrm{(Eventos disjuntos)}\\
                      &amp;amp; = 1 / 8 + 1 / 8\\
                      &amp;amp; = 2 / 8.
\end{aligned}\]
&lt;/div&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;exemplo-continua√ß√£o&#34;&gt;Exemplo (continua√ß√£o&amp;hellip;)&lt;/h2&gt;
&lt;div id=&#34;&#34; class=&#34;exemplo&#34; cap=5 titulo=&#34;&#34;&gt;
&lt;p&gt;Por fim, (c) a probabilidade de a pe√ßa n√£o ser proveniente nem da cavidade 3 nem da 4, √© dada por:&lt;/p&gt;
\[\begin{aligned}
  P(\{3\}^c \cap \{4\}^c) &amp;amp; = P[(\{3\} \cup \{4\})^c], \quad \textrm{(Lei DeMorgan)}\\
                          &amp;amp; = 1 - P(\{3\} \cup \{4\}), \quad \textrm{(Evento complementar)}\\
                          &amp;amp; = 1 - [P(\{3\}) + P( \{4\})], \quad \textrm{(Eventos disjuntos)}\\
                          &amp;amp; = 1 - [1 / 8 + 1 /8]\\
                          &amp;amp; = 1 - 2 /8\\
                          &amp;amp; = 6 / 8.
\end{aligned}\]
&lt;/div&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap2.png&#34;
  &gt;

&lt;h2 id=&#34;propriedades-da-medida-de-probabilidade&#34;&gt;Propriedades da medida de probabilidade&lt;/h2&gt;
&lt;div id=&#34;teo:propadicao&#34; class=&#34;teorema&#34; cap=5 titulo=&#34;(Regra da adi√ß√£o de probabilidades)&#34;&gt;
Considere um espa√ßo amostral e dois eventos n√£o vazios $ A $ e $ B $, ent√£o a probabilidade de ocorr√™ncia do evento $ A $ ou do evento $ B $ √© igual a:
\[\begin{aligned}
P(A\cup B) &amp;amp;  = P(A)+P(B)-P(A\cap B).
\end{aligned}\]
Caso os eventos $ A $ e $ B $ sejam mutuamente exclusivos, isto √©, $ P(A\cap B)=0 $, ent√£o:
\[\begin{aligned}
P(A\cup B) &amp;amp; = P(A)+P(B).
\end{aligned}\]
Essa regra pode ser estendida para $ n $ eventos mutuamente exclusivos:
$ A_1 $, $ A_2 $, $ \ldots $, $ A_n $, isto √©,
\[\begin{aligned}
P(A_1\cup A_2\cup \ldots \cup A_n)= P(A_1)+P(A_2)+\ldots+P(A_n).
\end{aligned}\]
&lt;/br&gt;
&lt;/div&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;style&gt;
    ol.alphaList {list-style-type: lower-alpha;}
&lt;/style&gt;
&lt;h2 id=&#34;exemplo-1&#34;&gt;Exemplo&lt;/h2&gt;
&lt;div id=&#34;&#34; class=&#34;exemplo&#34; cap=5 titulo=&#34;&#34;&gt;
&lt;p&gt;
Uma empresa de eletricidade oferece uma taxa vital√≠cia de energia a qualquer lar cuja utiliza√ß√£o de energia esteja abaixo de $ 240 $ kWh durante um determinado m√™s. Represente por $ A $ o evento de um lar selecionado aleatoriamente em um comunidade que n√£o excede a utiliza√ß√£o da taxa vital√≠cia em janeiro e por $ B $ o evento an√°logo para o m√™s de julho ($ A $ e $ B $ se referem ao mesmo lar). Suponha que $ P(A) = 0,8 $, $ P(B) = 0,7 $ e $ P(A \cup B) = 0,9 $. Calcule:
&lt;ol type=&#34;a&#34; class=&#34;alphaList&#34;&gt;
  &lt;li&gt;$ P(A \cap B) $;&lt;/li&gt;
  &lt;li&gt;A probabilidade de a quantia da taxa vital√≠cia ser excedida em exatamente um dos dois meses. Descreva esse evento em termos de $ A $ e $ B $. &lt;/li&gt;
&lt;/ol&gt;
Considere,
\[\begin{aligned}
  A &amp;amp; = \{\omega \in \Omega: \omega = \textrm{``lar X que n√£o excede 240kWh em janeiro&#39;&#39;}\}, \\
  B &amp;amp; = \{\omega \in \Omega: \omega = \textrm{``lar X que n√£o excede 240kWh em julho&#39;&#39;}\}.\\
\end{aligned}\]
Ent√£o, para o primeiro √≠tem (a), temos que:
\[\begin{aligned}
  P(A\cup B) &amp;amp; = P(A) + P(B) - P(A \cap B).
\end{aligned}\]
&lt;/p&gt;
&lt;/div&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;exemplo-continua√ß√£o-1&#34;&gt;Exemplo (continua√ß√£o&amp;hellip;)&lt;/h2&gt;
&lt;div id=&#34;&#34; class=&#34;exemplo&#34; cap=5 titulo=&#34;&#34;&gt;
&lt;p&gt;
Isso ocorre porque os eventos n√£o s√£o disjuntos, uma vez que os dois eventos consistem no mesmo &lt;i&gt;lar X&lt;/i&gt;, em ser selecionado. Assim, podemos obter $ P(A \cap B) $, dado por:
\[\begin{aligned}
  P(A\cap B) &amp;amp; = P(A) + P(B) - P(A \cup B) \\
             &amp;amp; =  0,8 + 0,7 - 0,9 \\
             &amp;amp; = 0,6.
\end{aligned}\]
No caso do √≠tem (b), o evento que representa o &lt;i&gt;lar X de a quantia vital√≠cia ser excedida em exatamente um dos dois meses&lt;/i&gt; por ser representado por: $ (A^c \cap B) \cup (A \cap B^c) $, uma vez que,&lt;/p&gt;
\[\begin{aligned}
  A^c  = \{\omega \in \Omega: \omega = \textrm{``lar X que exceder 240kWh em janeiro&#39;&#39;}\}, \\
  B^c  = \{\omega \in \Omega: \omega = \textrm{``lar X que exceder 240kWh em julho&#39;&#39;}\}.\\
\end{aligned}\]
&lt;p&gt;Podemos ainda observar que $ A \cup B = (A^c \cap B)\cup (A \cap B) \cup (A \cap B^c) $, e que cada um dos eventos dentro do par√™ntese s√£o disjuntos dois a dois, logo,&lt;/p&gt;
\[\begin{aligned}
  P(A \cup B) &amp;amp; = P[(A^c \cap B)\cup (A \cap B) \cup (A \cap B^c)]\\
              &amp;amp; = P[(A^c \cap B) \cup (A \cap B^c)] + P(A \cap B).
\end{aligned}\]
&lt;/div&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;exemplo-continua√ß√£o-&#34;&gt;Exemplo (continua√ß√£o&amp;hellip; )&lt;/h2&gt;
&lt;div id=&#34;&#34; class=&#34;exemplo&#34; cap=5 titulo=&#34;&#34;&gt;
Desse modo, percebemos que $ P[(A^c \cap B) \cup (A \cap B^c)] = P(A \cup B) - P(A \cap B) $, logo,
\[\begin{aligned}
  P[(A^c \cap B) \cup (A \cap B^c)] &amp;amp; = 0,9 - 0,6 = 0,3.
\end{aligned}\]
&lt;/div&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap2.png&#34;
  &gt;

&lt;h2 id=&#34;probabilidade-de-um-evento-complementar&#34;&gt;Probabilidade de um evento complementar&lt;/h2&gt;
&lt;div id=&#34;teo:propcomplementar&#34; class=&#34;teorema&#34; cap=5 titulo=&#34;(Probabilidade de um evento complementar)&#34;&gt;
&lt;p&gt;
Considere um espa√ßo amostral e o evento, n√£o vazio, $ A $, ent√£o a probabilidade do evento complementar $ A^c $ ocorrer, √© dado por:
\[\begin{aligned}
P(A^C)=1-P(A).
\end{aligned}\]
Essa situa√ß√£o √© consequ√™ncia da regra da adi√ß√£o para $ A\subset\Omega $, e substituindo $ B $ por $ A^C $, temos
\[\begin{aligned}
P(A\cup A^C) &amp;amp; = P(A)+P(A^C)-P(A\cap A^C),\\
P(\Omega)    &amp;amp; = P(A)+P(A^C)-0,\\
1            &amp;amp; = P(A)+P(A^C),
\end{aligned}\]
logo segue a express√£o anterior.
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;exemplo-2&#34;&gt;Exemplo&lt;/h2&gt;
&lt;div id=&#34;&#34; class=&#34;exemplo&#34; cap=5 titulo=&#34;&#34;&gt;
Usando os resultados do Exemplo anterior, podemos calcular a probabilidade de $ A^c $, como:
\[\begin{aligned}
  P(A^c) &amp;amp = 1 - 0,8 = 0,2.
\end{aligned}\]
Isso representa a chance do &lt;i&gt;lar X&lt;/i&gt; exceder a energia acima de 240kWh, em janeiro.
&lt;/div&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap2.png&#34;
  &gt;

&lt;h2 id=&#34;probabilidade-condicional&#34;&gt;Probabilidade condicional&lt;/h2&gt;
&lt;div id=&#34;def:probcond&#34; class=&#34;definicao&#34; cap=5 titulo=&#34;(Probabilidade condicional)&#34;&gt;
&lt;p&gt;
Dados dois eventos $ A $ e $ B $ definidos em  $ \Omega $, ent√£o a probabilidade condicional do evento $ A $ dado que ocorreu o evento $ B $, denotado por $ P(A|B) $, √© definida por:
\[\begin{aligned}
	P(A|B) = \frac{P(A \cap B)}{P(B)},
\end{aligned}\]
para $ P(B) &gt; 0 $.
&lt;/p&gt;
&lt;/br&gt;
&lt;/div&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;exemplo-motiva√ß√£o&#34;&gt;Exemplo (Motiva√ß√£o)&lt;/h2&gt;
&lt;div id=&#34;&#34; class=&#34;exemplo&#34; cap=5 titulo=&#34;&#34;&gt;
&lt;p&gt;Baseado no problema de Paulo, denotaremos os eventos:
&lt;ul&gt;
  &lt;li&gt;evento $ D $ as sand√°lias produzidas com defeitos pela empresa;&lt;/li&gt;
  &lt;li&gt;$ M_1 $ o evento que representa as sand√°lias produzidas pela m√°quina $ M_1 $;&lt;/li&gt;
  &lt;li&gt;$ M_2 $ o evento que representa as sand√°lias produzidas pela m√°quina $ M_2 $, e;&lt;/li&gt;
  &lt;li&gt;$ M_3 $ o evento que representa as sand√°lias produzidas pela m√°quina $ M_3 $.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Desse modo podemos representar, a probabilidade desses defeitos da seguinte forma: $ P(D|M_1) = 0,01 $, $ P(D|M_2) = 0,02 $, e $ P(D|M_3) = 0,03 $. Assim, percebemos que a probabilidade do evento $ D $ n√£o pode ser observada facilmente, pois o defeito dos produtos produzidos pelas m√°quinas est√° condicionado a cada m√°quina.&lt;/p&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&#34;notes&#34;&gt;
üìù Enfatizar:
&lt;ul&gt;
&lt;li&gt;Essas probabilidades apresentam uma altera√ß√£o no espa√ßo amostral para cada evento, porque esses resultados mostram a chance de defeito do produto, dado o conhecimento de que m√°quina foi produzido, √© o que chamamos de restri√ß√£o do espa√ßo amostral.&lt;/li&gt;
&lt;li&gt;$ P(A|B) $ √© uma medida de probabilidade?&lt;/li&gt;
&lt;/ul&gt;
&lt;/aside&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap2.png&#34;
  &gt;

&lt;h2 id=&#34;regra-do-produto-de-probabilidade&#34;&gt;Regra do produto de probabilidade&lt;/h2&gt;
&lt;div id=&#34;teo:regprodprob&#34; class=&#34;teorema&#34; cap=5 titulo=&#34;(Regra do produto de probabilidade)&#34;&gt;
&lt;p&gt;
Seja os eventos n√£o vazios $ A_1,A_2,\ldots,A_n $ em $ \Omega $, com $ P(\bigcap^{n}_{i=1}A_i)&gt;0 $, ent√£o a probabilidade do produto desses eventos √© dado por
&lt;p&gt;$$ P(A_1\cap A_2\cap \ldots \cap A_n)=P(A_1)P(A_2|A_1)\ldots P(A_n|A_1\cap A_2 \cap \ldots \cap A_{n-1}). $$&lt;/p&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap2.png&#34;
  &gt;

&lt;h2 id=&#34;parti√ß√£o-de--omega-&#34;&gt;Parti√ß√£o de $ \Omega $&lt;/h2&gt;
&lt;div id=&#34;def:partomega&#34; class=&#34;definicao&#34; cap=5 titulo=&#34;(Parti√ß√£o do espa√ßo amostral)&#34;&gt;
&lt;p&gt;
Se a sequ√™ncia $ A_1, A_2, \ldots, $ s√£o disjuntos dois a dois, n√£o vazios, e $ \bigcup^{\infty}_{i=1}A_i=\Omega $, ent√£o dizemos que essa sequ√™ncia forma uma parti√ß√£o de $ \Omega $.
&lt;/p&gt;
&lt;/br&gt;
&lt;/div&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;teorema-da-probabilidade-total&#34;&gt;Teorema da probabilidade total&lt;/h2&gt;
&lt;div id=&#34;teo:probtotal&#34; class=&#34;teorema&#34; cap=5 titulo=&#34;(Teorema da probabilidade total)&#34;&gt;
&lt;p&gt;
Seja uma sequ√™ncia de eventos $ A_1, A_2, \ldots, A_n $ de $ \Omega $, disjuntos, tal que $ \bigcup^{n}_{i = 1}A_i = \Omega $, e $ B $ um evento de $ \Omega $, n√£o vazio, ent√£o a probabilidade de $ B $ √© dada por:
\[\begin{aligned}
	P(B) = \sum_{i = 1}^{n}P(B|A_i)P(A_i),
\end{aligned}\]
para $ P(A_i) &gt; 0 $, sendo $ i = 1, 2, \ldots, n $.
&lt;/p&gt;
&lt;/div&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;exemplo-motiva√ß√£o-1&#34;&gt;Exemplo (Motiva√ß√£o)&lt;/h2&gt;
&lt;div id=&#34;&#34; class=&#34;exemplo&#34; cap=5 titulo=&#34;&#34;&gt;
&lt;p&gt;Voltando ao problema de Paulo, como $ P(M_1) = 0,50 $, $ P(M_2) = 0,40) $ e $ P(M_3) = 0,10 $, ent√£o a probabilidade de uma sand√°lia ter defeito √©
\[\begin{aligned}
	P(D) = &amp; \sum_{i = 1}^{3}P(D|M_i)P(M_i)\\
	= &amp; P(D|M_1)P(M_1) + P(D|M_2)P(M_2) + P(D|M_3)P(M_3)\\
	= &amp; 0,01 \times 0,50 + 0,02 \times 0,40 + 0,03 \times 0,10\\
	= &amp; 0,016.
\end{aligned}\]
&lt;/p&gt;
&lt;/div&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap2.png&#34;
  &gt;

&lt;h2 id=&#34;independ√™ncia-de-dois-eventos&#34;&gt;Independ√™ncia de dois eventos&lt;/h2&gt;
&lt;div id=&#34;def:partomega&#34; class=&#34;definicao&#34; cap=5 titulo=&#34;(Independ√™ncia de dois eventos)&#34;&gt;
&lt;p&gt;
Considere o espa√ßo amostral $ \Omega $. Dois eventos $ A $ e $ B $ de $ \Omega $ s√£o independentes se satisfaz ao menos uma das seguintes condi√ß√µes:
&lt;ol type=&#34;a&#34; class=&#34;alphaList&#34;&gt;
  &lt;li&gt;$ P(A \cap B) = P(A)P(B) $;&lt;/li&gt;
  &lt;li&gt;$ P(A|B) = P(A) $, para $ P(B) &gt; 0 $; &lt;/li&gt;
  &lt;li&gt;$ P(B|A) = P(B) $, para $ P(A) &gt; 0 $. &lt;/li&gt;
&lt;/ol&gt;
&lt;/p&gt;
&lt;/br&gt;
&lt;/div&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;continua√ß√£o&#34;&gt;continua√ß√£o&amp;hellip;&lt;/h2&gt;
&lt;div id=&#34;&#34; class=&#34;exemplo&#34; cap=5 titulo=&#34;&#34;&gt;
√â f√°cil mostrar que (I) implica em (II), (II) implica em (III), e (III) implica em (I).
&lt;ul&gt;
&lt;li&gt;$ (i) \to (ii) $: Se $ P(AB) = P(A)P(B) $, ent√£o:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$$ P(A|B) = \frac{P(AB)}{P(A)} = \frac{P(A)P(B)}{P(B)} = P(A), \quad \textrm{para } P(B) &amp;gt; 0; $$&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$ (ii) \to (iii) $: Se $ P(A|B) = P(A) $, ent√£o:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$$  P(B|A) = \frac{P(BA)}{P(A)} = \frac{P(A|B)P(B)}{P(A)} = P(B), \quad \textrm{para } P(A) &amp;gt; 0; $$&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$ (iii) \to (i) $: Se $ P(B|A) = P(B) $, ent√£o:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$$ P(AB) = P(B|A)P(A) = P(B)P(A), \textrm{para } P(A) &amp;gt; 0. $$&lt;/p&gt;
&lt;/div&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;continua√ß√£o-1&#34;&gt;continua√ß√£o&amp;hellip;&lt;/h2&gt;
&lt;div id=&#34;&#34; class=&#34;exemplo&#34; cap=5 titulo=&#34;&#34;&gt;
A intui√ß√£o para independ√™ncia fica justificada pelo fato de que $ A $ √© independente de $ B $ tanto na ocorr√™ncia quanto a n√£o ocorr√™ncia de $ B $ e isso n√£o muda em nada a probabilidade da ocorr√™ncia de $ A $, isto √©, $ P(A|B) = P(A) $ e  $ P(A|B^c) = P( A) $. Essas duas express√µes significam que
\[\begin{aligned}
  P(A\cap B) &amp; = P(B)P(A|B) = P(B)P(A)\\
  P(A\cap B^c) &amp; = P(B^c)P(A|B^c) = P(B^c)P(A).
\end{aligned}\]
&lt;/div&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;teorema-de-independ√™ncia-de-dois-eventos&#34;&gt;Teorema de independ√™ncia de dois eventos&lt;/h2&gt;
&lt;div id=&#34;teo:probtotal&#34; class=&#34;teorema&#34; cap=5 titulo=&#34;(Teorema de independ√™ncia de dois eventos)&#34;&gt;
&lt;p&gt;Se A e B s√£o eventos independentes, n√£o vazio, definidos em $ \Omega $, ent√£o&lt;/p&gt;
&lt;ul &gt;
  &lt;li&gt;$ A $ e $ B^c $ tamb√©m s√£o independentes;&lt;/li&gt;
  &lt;li&gt;$ A^c $ e $ B $ tamb√©m s√£o independentes; &lt;/li&gt;
  &lt;li&gt;$ A^c $ e $ B^c $ tamb√©m s√£o independentes. &lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;exemplo-3&#34;&gt;Exemplo&lt;/h2&gt;
&lt;div id=&#34;&#34; class=&#34;exemplo&#34; cap=5 titulo=&#34;&#34;&gt;
Sejam os resultados poss√≠veis de um dado honesto, cujo espa√ßo amostral √© $ \Omega = \{1, 2, 3, 4, 5, 6\} $. Considere um evento que representa o conjunto dos n√∫meros √≠mpares desse espa√ßo amostral, $ A = \{1, 3, 5\} $, e outro evento que consite nos m√∫ltiplos de 3, $ B = \{3, 6\} $. A probabilidade de $ A $ √© $ P(A) = 1/2 $, a probabilidade de B √© $ P(B) = 1/3 $, e a probabilidade da interse√ß√£o entre A e B √© $ P(A \cap B) = 1/6 $. Veja que dado que o evento B ocorra, ou n√£o ocorra $ B^c = \{1, 2, 4, 5\} $, a probabilidade do evento A √© a mesma, veja:
&lt;p&gt;&lt;code&gt;\begin{align*} P(A|B) &amp;amp; = \frac{1/6}{1/3} = 1/2\\ P(A|B^c) &amp;amp; = \frac{2/6}{4/6} = 1/2. \end{align*}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Que √© o mesmo que entender que $ P(A) \times P(B) = 1/6 = P(A\cap B) $. Logo, $ A $ e $ B $ s√£o eventos independentes.&lt;/p&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;exemplo-4&#34;&gt;Exemplo&lt;/h2&gt;
&lt;div id=&#34;&#34; class=&#34;exemplo&#34; cap=5 titulo=&#34;&#34;&gt;
Seja um experimento cujo objetivo √© verificar a face superior de um tetraedro, isto √©, $ \Omega = \{1, 2, 3, 4\} $. Sejam os eventos em $ \Omega $, $ A = \{1, 4\} $, $ B = \{2, 4\} $ e $ C = \{3, 4\} $. Considerando o tetraedro honesto e que cada valor √© equiprov√°vel, assim $ P(A) = P(B) = P(C) = 1/2 $. Observamos que estes eventos s√£o independentes dois a dois, isto √©, $ P(A\cap B) = 1/4 = P(A)P(B) $, $ P(A\cap C) = 1/4 = P(A)P(C) $ e $ P(B\cap C) = 1/4 = P(B)P(C) $. Por√©m, $ P(A\cap B \cap C) = 1/4 \neq P(A) P(B) P(C) $. Logo, os eventos A, B e C n√£o s√£o independentes tr√™s a tr√™s.
&lt;/div&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;independ√™ncia-de-uma-sequ√™ncia-de-eventos&#34;&gt;Independ√™ncia de uma sequ√™ncia de eventos&lt;/h2&gt;
&lt;div id=&#34;def:indseqeventos&#34; class=&#34;definicao&#34; cap=5 titulo=&#34;(Independ√™ncia de uma sequ√™ncia de eventos)&#34;&gt;
&lt;p&gt;Considere o espa√ßo amostral $ \Omega $. Uma sequ√™ncia de eventos $ A_1, A_2, \ldots, A_n $ de $ \Omega $ s√£o independentes se e somente se:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\begin{align*} P(A_i \cap A_j) &amp;amp; = P(A_i)P(A_j), \quad \textrm{para } i \neq j; \\ P(A_i \cap A_j \cap A_k) &amp;amp; = P(A_i)P(A_j)P(A_k), \quad \textrm{para } i \neq j \neq k; \\ \vdots &amp;amp;  \nonumber\\ P(\cap_{i = 1}^{n} A_i) &amp;amp; = \prod_{i = 1}^{n}P(A_i). \end{align*}&lt;/code&gt;
&lt;/br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;exemplo-motiva√ß√£o-2&#34;&gt;Exemplo (Motiva√ß√£o)&lt;/h2&gt;
&lt;div id=&#34;&#34; class=&#34;exemplo&#34; cap=5 titulo=&#34;&#34;&gt;
Paulo poderia indagar, se os eventos $ M_i $ e $ D $ s√£o independentes ou dependentes. Contudo, pela Defini√ß√£o de independ√™ncia, temos que
&lt;p&gt;&lt;code&gt;\begin{align*} P(D|M_i) &amp;amp; \neq P(D) = 0,016 \Rightarrow D \textrm{ e } M_i \textrm{, para } i = 1, 2, 3, \end{align*}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;logo, n√£o s√£o independentes.&lt;/p&gt;
&lt;/div&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;teorema-de-bayes&#34;&gt;Teorema de Bayes&lt;/h2&gt;
&lt;div id=&#34;teo:teobayes&#34; class=&#34;teorema&#34; cap=5 titulo=&#34;(Teorema de Bayes)&#34;&gt;
Considere o espa√ßo amostral $ \Omega $. Considere uma sequ√™ncia de eventos $ A_1, A_2, \ldots, A_n $ de $ \Omega $, disjuntos, tal que $ \bigcup^{n}_{i = 1}A_i = \Omega $, e $ B $ um evento de $ \Omega $, ent√£o a probabilidade de $ A_k $, para $ k = 1, 2, \ldots, n $, dado que ocorreu o evento $ B $,  denotado por $ P(A_k|B) $, √© dado por:
&lt;p&gt;&lt;code&gt;\begin{aligned} P(A_k|B) = \frac{P(B|A_k)P(A_k)}{\sum_{i = 1}^{n}P(B|A_i)P(A_i)}, \qquad k = 1, 2, \ldots, n, \end{aligned}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;para $ P(A_k) &amp;gt; 0 $ e $ P(A_i) &amp;gt; 0 $, sendo $ i = 1, 2, \ldots, n $.&lt;/p&gt;
&lt;/div&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;exemplo-motiva√ß√£o-3&#34;&gt;Exemplo (Motiva√ß√£o)&lt;/h2&gt;
&lt;div id=&#34;&#34; class=&#34;exemplo&#34; cap=5 titulo=&#34;&#34;&gt;
Com esse resultado, Paulo agora pode tomar uma decis√£o mais plaus√≠vel, isto √©, dado um defeito numa determinada sand√°lia produzida na f√°brica, qual a probabilidade desta ter sido produzida em cada uma das m√°quinas?
&lt;p&gt;&lt;code&gt;\begin{aligned} P(M_1|D) = \frac{0,01 \times 0,50}{0,016} = 0,3125\\ P(M_2|D) = \frac{0,02 \times 0,40}{0,016} = 0,5000\\ P(M_3|D) = \frac{0,03 \times 0,10}{0,016} = 0,1875\\ \end{aligned}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;A tomada de decis√£o ser√° substituir a m√°quina $ M_2 $. Poder√≠amos ter tomado uma decis√£o equivocada se n√£o fosse o teorema de Bayes.&lt;/p&gt;
&lt;/div&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h1 id=&#34;quest√µes&#34;&gt;Quest√µes?&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;D√∫vidas e Sugest√µes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/#contact&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Contato&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Estat√≠stica e Probabilidade</title>
      <link>http://bendeivide.github.io/slides/profmat-est/s14/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/profmat-est/s14/</guid>
      <description>
&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap.png&#34;
  &gt;

&lt;h1 id=&#34;estat√≠stica-e-probabilidade&#34;&gt;Estat√≠stica e Probabilidade&lt;/h1&gt;
&lt;p&gt;Aula 14 - Vari√°veis aleat√≥rias e Distribui√ß√µes de probabilidades discretas
&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-user-tie  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ben D√™ivide&lt;/a&gt; | 
  &lt;i class=&#34;fas fa-school  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://www.ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;
&lt;/br&gt;

  &lt;i class=&#34;fas fa-book  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/courses/epaec/&#34;&gt;Estat√≠stica e Probabilidade&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;selo-dc&#34;&gt;Selo DC&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/dc/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/profmat-est/s14/SeloDC-preto_hu7eace1d7dbb403f37b46437825b208a2_37049_1f8e03062ff2fd4b85b7997b55db9e55.webp 400w,
               /slides/profmat-est/s14/SeloDC-preto_hu7eace1d7dbb403f37b46437825b208a2_37049_28a718b08e0f1b8193cec5ac4d8216a2.webp 760w,
               /slides/profmat-est/s14/SeloDC-preto_hu7eace1d7dbb403f37b46437825b208a2_37049_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/profmat-est/s14/SeloDC-preto_hu7eace1d7dbb403f37b46437825b208a2_37049_1f8e03062ff2fd4b85b7997b55db9e55.webp&#34;
               width=&#34;384&#34;
               height=&#34;406&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;motiva√ß√£o&#34;&gt;Motiva√ß√£o&lt;/h2&gt;
&lt;div id=&#34;&#34; class=&#34;exemplo&#34; cap=5 titulo=&#34;&#34;&gt;
Para explicar a defini√ß√£o de uma vari√°vel aleat√≥ria ser√° considerado o exemplo, no qual duas variedades de uma esp√©cie $ A $ ( $ A_1 $, $ A_2 $ ) e tr√™s de outra esp√©cie $ E $ ( $ E_1 $, $ E_2 $ e $ E_3 $ ) s√£o disponibilizados para uma pesquisa. Uma amostra de duas variedades ($ n=2 $) √© extra√≠da. O espa√ßo amostral dos resultados desse experimento, segue,
&lt;p&gt;&lt;code&gt;\begin{aligned} \Omega =  \{(A_1,A_2), (A_1,E_1), (A_1,E_2), (A_1,E_3), (A_2,E_1), (A_2,E_2), (A_2,E_3), (E_1,E_2),  (E_1,E_3), (E_2,E_3) \} \end{aligned}&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;experimento-1&#34;&gt;Experimento 1&lt;/h2&gt;
&lt;div class=&#34;r-stack&#34;&gt;
  &lt;img class=&#34;fragment fade-in-then-out&#34; src=&#34;binom1.png&#34; data-fragment-index=&#34;1&#34; width=&#34;650&#34; height=&#34;500&#34;&gt;
  &lt;img class=&#34;fragment fade-in-then-out&#34; src=&#34;binom2.png&#34; data-fragment-index=&#34;2&#34; width=&#34;650&#34; height=&#34;500&#34;&gt;
  &lt;img class=&#34;fragment fade-in-then-out&#34; src=&#34;binom3.png&#34;  data-fragment-index=&#34;3&#34; width=&#34;650&#34; height=&#34;500&#34;&gt;
  &lt;img class=&#34;fragment fade-in-then-out&#34; src=&#34;binom4.png&#34; data-fragment-index=&#34;4&#34; width=&#34;650&#34; height=&#34;500&#34;&gt;
  &lt;img class=&#34;fragment fade-in-then-out&#34; src=&#34;binom5.png&#34; data-fragment-index=&#34;5&#34; width=&#34;650&#34; height=&#34;500&#34;&gt;
  &lt;img class=&#34;fragment fade-in-then-out&#34; src=&#34;binom6.png&#34;  data-fragment-index=&#34;6&#34; width=&#34;650&#34; height=&#34;500&#34;&gt;
  &lt;img class=&#34;fragment fade-in-then-out&#34; src=&#34;binom7.png&#34; data-fragment-index=&#34;7&#34; width=&#34;650&#34; height=&#34;500&#34;&gt;
  &lt;img class=&#34;fragment fade-in-then-out&#34; src=&#34;binom8.png&#34; data-fragment-index=&#34;8&#34; width=&#34;650&#34; height=&#34;500&#34;&gt;
  &lt;img class=&#34;fragment fade-in-then-out&#34; src=&#34;binom9.png&#34; data-fragment-index=&#34;9&#34; width=&#34;650&#34; height=&#34;500&#34;&gt;
  &lt;img class=&#34;fragment fade-in-then-out&#34; src=&#34;binom10.png&#34; data-fragment-index=&#34;10&#34; width=&#34;650&#34; height=&#34;500&#34;&gt;
  &lt;img class=&#34;fragment fade-in-then-out&#34; src=&#34;binom11.png&#34; data-fragment-index=&#34;11&#34; width=&#34;650&#34; height=&#34;500&#34;&gt;
  &lt;img class=&#34;fragment fade-in-then-out&#34; src=&#34;binom12.png&#34; data-fragment-index=&#34;12&#34; width=&#34;650&#34; height=&#34;500&#34;&gt;
  &lt;img class=&#34;fragment fade-in-then-out&#34; src=&#34;binom13.png&#34; data-fragment-index=&#34;13&#34; width=&#34;650&#34; height=&#34;500&#34;&gt;
  &lt;img class=&#34;fragment fade-in-then-out&#34; src=&#34;binom14.png&#34; data-fragment-index=&#34;14&#34; width=&#34;650&#34; height=&#34;500&#34;&gt;
  &lt;img class=&#34;fragment fade-in-then-out&#34; src=&#34;binom15.png&#34; data-fragment-index=&#34;15&#34; width=&#34;650&#34; height=&#34;500&#34;&gt;
  &lt;img class=&#34;fragment fade-in-then-out&#34; src=&#34;binom16.png&#34;  data-fragment-index=&#34;16&#34; width=&#34;650&#34; height=&#34;500&#34;&gt;
  &lt;img class=&#34;fragment current-visible&#34; src=&#34;binom17.png&#34; data-fragment-index=&#34;17&#34; width=&#34;650&#34; height=&#34;500&#34;&gt;
  &lt;img class=&#34;fragment&#34; src=&#34;binom18.png&#34; width=&#34;650&#34; height=&#34;500&#34;&gt;
&lt;/div&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h1 id=&#34;quest√µes&#34;&gt;Quest√µes?&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;D√∫vidas e Sugest√µes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/#contact&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Contato&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Lan√ßamento do livro R b√°sico</title>
      <link>http://bendeivide.github.io/slides/lancamentorbasico/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/lancamentorbasico/</guid>
      <description>
&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;hardcover.png&#34;
  &gt;

&lt;h1 id=&#34;r-b√°sico&#34;&gt;R B√°sico&lt;/h1&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-user-tie  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ben D√™ivide&lt;/a&gt; | 
  &lt;i class=&#34;fas fa-user-tie  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://digoarthur.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Diego Arthur&lt;/a&gt;&lt;br&gt;

  &lt;i class=&#34;fas fa-school  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://www.ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;hardcover.png&#34;
  &gt;

&lt;section&gt;
&lt;h2&gt;Como foi o in√≠cio?&lt;/h2&gt;
&lt;ul&gt;
&lt;li class=&#34;fragment&#34; data-fragment-index=&#34;1&#34;&gt;
&lt;p&gt;Pandemia (2020-2021)&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&#34;fragment&#34; data-fragment-index=&#34;2&#34;&gt;
&lt;p&gt;Catel/UFSJ&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&#34;fragment&#34; data-fragment-index=&#34;3&#34;&gt;
&lt;p&gt;Cursos sobre a &lt;a href=&#34;https://bendeivide.github.io/cursor/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;linguagem R&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&#34;fragment&#34; data-fragment-index=&#34;4&#34;&gt;
&lt;p&gt;Parceria com &lt;a href=&#34;https://digoarthur.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Diego&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&#34;fragment&#34; data-fragment-index=&#34;5&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/project/projape/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Projeto aprender por ensinar (PAPE)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;hardcover.png&#34;
  &gt;

&lt;h2 id=&#34;cole√ß√£o-ear&#34;&gt;Cole√ß√£o EAR&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;R b√°sico (Volume I) ‚úî&lt;/li&gt;
&lt;li&gt;R intermedi√°rio (Volume II)&lt;/li&gt;
&lt;li&gt;R avan√ßado (Volume III)&lt;/li&gt;
&lt;li&gt;Documenta√ß√µes em R (Volume IV)&lt;/li&gt;
&lt;li&gt;Desenvolvimento de pacotes R (Volume V)&lt;/li&gt;
&lt;li&gt;Gr√°ficos (Volume VI)&lt;/li&gt;
&lt;li&gt;Banco de dados (Volume VII)&lt;/li&gt;
&lt;li&gt;IGU (Volume VIII)&lt;/li&gt;
&lt;li&gt;POO no R (Volume IX)&lt;/li&gt;
&lt;li&gt;Fun√ß√µes do pacote &lt;code&gt;base&lt;/code&gt; (Volume X)&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;hardcover.png&#34;
  &gt;

&lt;section&gt;
&lt;h2&gt;Agradecimentos &lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rodrigo Ronchi Rossi Costa (UFSJ)&lt;/li&gt;
&lt;li&gt;Fernando Augusto Teixeira (UFSJ)&lt;/li&gt;
&lt;li&gt;S√©rgio de Oliveira (UFSJ)&lt;/li&gt;
&lt;li&gt;Jose Eloy Ottoni (UFSJ)&lt;/li&gt;
&lt;li&gt;Daniel Furtado Ferreira (UFLA)&lt;/li&gt;
&lt;li&gt;Janilson Pinheiro de Assis (UFERSA)&lt;/li&gt;
&lt;li&gt;Wesley de Oliveira Santos (UFERSA)&lt;/li&gt;
&lt;li&gt;Allanna Darlene  Vila√ßa (UNIFACVEST)&lt;/li&gt;
&lt;li&gt;Tiago Olivoto (UFSC)&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Agradecimentos &lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Felipe Andrade  Velozo (UNIFAL)&lt;/li&gt;
&lt;li&gt;Julio Cezar Gon√ßalves de Freitas (UFPA)&lt;/li&gt;
&lt;li&gt;Regina Albanese Pose (USCS)&lt;/li&gt;
&lt;li&gt;Dulc√≠dia Carlos Guezimane Ernesto (UFLA)&lt;/li&gt;
&lt;li&gt;Jos√© Edimar Vieira Costa J√∫nior (UFLA)&lt;/li&gt;
&lt;li&gt;Andr√© da Silva Pereira (UPF)&lt;/li&gt;
&lt;li&gt;Miguel Angel Acosta Chinchilla (&lt;em&gt;Alliance Bioversity&lt;/em&gt; - CIAT)&lt;/li&gt;
&lt;li&gt;Daniel Vicente Batista (Univesp)&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;hardcover.png&#34;
  &gt;

&lt;h2 id=&#34;curiosidades-do-r-b√°sico&#34;&gt;Curiosidades do R b√°sico&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Tempo: 1 ano&lt;/li&gt;
&lt;li&gt;Escrito em &lt;code&gt;\(\LaTeX\)&lt;/code&gt; (PDF)
&lt;ul&gt;
&lt;li&gt;classe &lt;em&gt;memoir&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Escrito com o pacote &lt;a href=&#34;https://bookdown.org/yihui/bookdown/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;bookdown&lt;/a&gt; (Vers√£o em HTML)
&lt;ul&gt;
&lt;li&gt;Ultrapassou as 2500 linhas de comando&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;124 exerc√≠cios propostos&lt;/li&gt;
&lt;li&gt;$&amp;gt;$120 C√≥digos R numerados, sem contabilizar os n√£o numerados&lt;/li&gt;
&lt;li&gt;339 p√°ginas e 321 numeradas&lt;/li&gt;
&lt;li&gt;Publicado em 28/08/2022&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;hardcover.png&#34;
  &gt;

&lt;section&gt;
&lt;h2&gt;Estrutura do R b√°sico&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Objetivo: Sintaxe e sem√¢ntica do R (Introdut√≥rio)&lt;/li&gt;
&lt;li&gt;11 cap√≠tulos
&lt;ul&gt;
&lt;li&gt;Cap√≠tulo 1: Entendendo a cole√ß√£o EAR&lt;/li&gt;
&lt;li&gt;Cap√≠tulo 2: Hist√≥ria e instala√ß√£o do R&lt;/li&gt;
&lt;li&gt;Cap√≠tulo 3: Como o R trabalha&lt;/li&gt;
&lt;li&gt;Cap√≠tulo 4: Objetos e estruturas de dados&lt;/li&gt;
&lt;li&gt;Cap√≠tulo 5: Importa√ß√£o e exporta√ß√£o de dados&lt;/li&gt;
&lt;li&gt;Cap√≠tulo 6: Fun√ß√µes no R&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Estrutura do R b√°sico&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;11 cap√≠tulos
&lt;ul&gt;
&lt;li&gt;Cap√≠tulo 7: Boas pr√°ticas de como escrever um c√≥digo&lt;/li&gt;
&lt;li&gt;Cap√≠tulo 8: Pacotes&lt;/li&gt;
&lt;li&gt;Cap√≠tulo 9: Ambientes e caminho de busca&lt;/li&gt;
&lt;li&gt;Cap√≠tulo 10: Interfaces com outras linguagens&lt;/li&gt;
&lt;li&gt;Cap√≠tulo 11: Considera√ß√µes e prepara√ß√£o para o Volume II&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Capa/lateral/fundo&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/lancamentorbasico/cover-back-front_hu3ce330fa360ba6e4db62da5bce0917e8_4645749_00da4cf45303c5812d852b1a6a7f785f.webp 400w,
               /slides/lancamentorbasico/cover-back-front_hu3ce330fa360ba6e4db62da5bce0917e8_4645749_2d3c75e90137881f78d6463e7dd9815d.webp 760w,
               /slides/lancamentorbasico/cover-back-front_hu3ce330fa360ba6e4db62da5bce0917e8_4645749_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/lancamentorbasico/cover-back-front_hu3ce330fa360ba6e4db62da5bce0917e8_4645749_00da4cf45303c5812d852b1a6a7f785f.webp&#34;
               width=&#34;760&#34;
               height=&#34;521&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/section&gt;
&lt;hr&gt;
&lt;section data-background-iframe=&#34;/books/eambr01&#34; data-background-interactive&gt;
	&lt;div style=&#34;position: absolute; width: 40%; right: 0; box-shadow: 0 1px 4px rgba(0,0,0,0.5), 0 5px 25px rgba(0,0,0,0.2); background-color: rgba(0, 0, 0, 0.9); color: #fff; padding: 20px; font-size: 20px; text-align: left;&#34;&gt;
		&lt;h2&gt;P√°gina do livro R b√°sico&lt;/h2&gt;
		&lt;p&gt;Todo o material do livro est√° dispon√≠vel na p√°gina: &lt;a href=&#34;https://bendeivide.github.io/books/eambr01/&#34;&gt;https://bendeivide.github.io/books/eambr01/&lt;/a&gt;.&lt;/p&gt;
	&lt;/div&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;hardcover.png&#34;
  &gt;

&lt;h2 id=&#34;filosofia-de-publica√ß√£o-selo-dc&#34;&gt;Filosofia de publica√ß√£o (Selo DC)&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/dc/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/lancamentorbasico/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_57f4d021c573f1cdb22f5303fccfacd9.webp 400w,
               /slides/lancamentorbasico/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_e3124639f3c96b16d12396d9954194c3.webp 760w,
               /slides/lancamentorbasico/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/lancamentorbasico/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_57f4d021c573f1cdb22f5303fccfacd9.webp&#34;
               width=&#34;385&#34;
               height=&#34;406&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;hardcover.png&#34;
  &gt;

&lt;h2 id=&#34;mais-sobre-o-r-b√°sico&#34;&gt;Mais sobre o R b√°sico&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/books/eambr01/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;P√°gina do R b√°sico&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;hardcover.png&#34;
  &gt;

&lt;h1 id=&#34;obrigado&#34;&gt;Obrigado!&lt;/h1&gt;
&lt;p&gt;Sugest√µes, perguntas, cr√≠ticas&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Lan√ßamento do livro R b√°sico (UNIFAL/MG)</title>
      <link>http://bendeivide.github.io/slides/lancamentorbasico-unifal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/lancamentorbasico-unifal/</guid>
      <description>
&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;hardcover.png&#34;
  &gt;

&lt;h1 id=&#34;r-b√°sico&#34;&gt;R B√°sico&lt;/h1&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-user-tie  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ben D√™ivide&lt;/a&gt; |

  &lt;i class=&#34;fas fa-school  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://www.ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;hardcover.png&#34;
  &gt;

&lt;section&gt;
&lt;h2&gt;Como foi o in√≠cio?&lt;/h2&gt;
&lt;ul&gt;
&lt;li class=&#34;fragment&#34; data-fragment-index=&#34;1&#34;&gt;
&lt;p&gt;Pandemia (2020-2021)&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&#34;fragment&#34; data-fragment-index=&#34;2&#34;&gt;
&lt;p&gt;Catel/UFSJ&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&#34;fragment&#34; data-fragment-index=&#34;3&#34;&gt;
&lt;p&gt;Cursos sobre a &lt;a href=&#34;https://bendeivide.github.io/cursor/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;linguagem R&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&#34;fragment&#34; data-fragment-index=&#34;4&#34;&gt;
&lt;p&gt;Parceria com &lt;a href=&#34;https://digoarthur.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Diego&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&#34;fragment&#34; data-fragment-index=&#34;5&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/project/projape/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Projeto aprender por ensinar (PAPE)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;hardcover.png&#34;
  &gt;

&lt;h2 id=&#34;cole√ß√£o-ear&#34;&gt;Cole√ß√£o EAR&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;R b√°sico (Volume I) ‚úî&lt;/li&gt;
&lt;li&gt;R intermedi√°rio (Volume II)&lt;/li&gt;
&lt;li&gt;R avan√ßado (Volume III)&lt;/li&gt;
&lt;li&gt;Documenta√ß√µes em R (Volume IV)&lt;/li&gt;
&lt;li&gt;Desenvolvimento de pacotes R (Volume V)&lt;/li&gt;
&lt;li&gt;Gr√°ficos (Volume VI)&lt;/li&gt;
&lt;li&gt;Banco de dados (Volume VII)&lt;/li&gt;
&lt;li&gt;IGU (Volume VIII)&lt;/li&gt;
&lt;li&gt;POO no R (Volume IX)&lt;/li&gt;
&lt;li&gt;Fun√ß√µes do pacote &lt;code&gt;base&lt;/code&gt; (Volume X)&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --- --&gt;
&lt;!-- 
&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;hardcover.png&#34;
  &gt;
 --&gt;
&lt;!-- &lt;section&gt; --&gt;
&lt;!-- &lt;h2&gt;Agradecimentos &lt;/h2&gt; --&gt;
&lt;!--   - Rodrigo Ronchi Rossi Costa (UFSJ) --&gt;
&lt;!--   - Fernando Augusto Teixeira (UFSJ)  --&gt;
&lt;!--   - S√©rgio de Oliveira (UFSJ) --&gt;
&lt;!--   - Jose Eloy Ottoni (UFSJ) --&gt;
&lt;!--   - Daniel Furtado Ferreira (UFLA) --&gt;
&lt;!--   - Janilson Pinheiro de Assis (UFERSA) --&gt;
&lt;!--   - Wesley de Oliveira Santos (UFERSA) --&gt;
&lt;!--   - Allanna Darlene  Vila√ßa (UNIFACVEST) --&gt;
&lt;!--   - Tiago Olivoto (UFSC) --&gt;
&lt;!-- &lt;/section&gt; --&gt;
&lt;!-- &lt;section&gt; --&gt;
&lt;!-- &lt;h2&gt;Agradecimentos &lt;/h2&gt; --&gt;
&lt;!--   - Felipe Andrade  Velozo (UNIFAL) --&gt;
&lt;!--   - Julio Cezar Gon√ßalves de Freitas (UFPA) --&gt;
&lt;!--   - Regina Albanese Pose (USCS) --&gt;
&lt;!--   - Dulc√≠dia Carlos Guezimane Ernesto (UFLA) --&gt;
&lt;!--   - Jos√© Edimar Vieira Costa J√∫nior (UFLA) --&gt;
&lt;!--   - Andr√© da Silva Pereira (UPF) --&gt;
&lt;!--   - Miguel Angel Acosta Chinchilla (*Alliance Bioversity* - CIAT)  --&gt;
&lt;!--   - Daniel Vicente Batista (Univesp)  --&gt;
&lt;!-- &lt;/section&gt; --&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;hardcover.png&#34;
  &gt;

&lt;h2 id=&#34;curiosidades-do-r-b√°sico&#34;&gt;Curiosidades do R b√°sico&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Tempo: 1 ano&lt;/li&gt;
&lt;li&gt;Escrito em &lt;code&gt;\(\LaTeX\)&lt;/code&gt; (PDF)
&lt;ul&gt;
&lt;li&gt;classe &lt;em&gt;memoir&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Escrito com o pacote &lt;a href=&#34;https://bookdown.org/yihui/bookdown/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;bookdown&lt;/a&gt; (Vers√£o em HTML)
&lt;ul&gt;
&lt;li&gt;Ultrapassou as 2500 linhas de comando&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;124 exerc√≠cios propostos&lt;/li&gt;
&lt;li&gt;$&amp;gt;$120 C√≥digos R numerados, sem contabilizar os n√£o numerados&lt;/li&gt;
&lt;li&gt;339 p√°ginas e 321 numeradas&lt;/li&gt;
&lt;li&gt;Publicado em 28/08/2022&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;hardcover.png&#34;
  &gt;

&lt;section&gt;
&lt;h2&gt;Estrutura do R b√°sico&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Objetivo: Sintaxe e sem√¢ntica do R (Introdut√≥rio)&lt;/li&gt;
&lt;li&gt;11 cap√≠tulos
&lt;ul&gt;
&lt;li&gt;Cap√≠tulo 1: Entendendo a cole√ß√£o EAR&lt;/li&gt;
&lt;li&gt;Cap√≠tulo 2: Hist√≥ria e instala√ß√£o do R&lt;/li&gt;
&lt;li&gt;Cap√≠tulo 3: Como o R trabalha&lt;/li&gt;
&lt;li&gt;Cap√≠tulo 4: Objetos e estruturas de dados&lt;/li&gt;
&lt;li&gt;Cap√≠tulo 5: Importa√ß√£o e exporta√ß√£o de dados&lt;/li&gt;
&lt;li&gt;Cap√≠tulo 6: Fun√ß√µes no R&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Estrutura do R b√°sico&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;11 cap√≠tulos
&lt;ul&gt;
&lt;li&gt;Cap√≠tulo 7: Boas pr√°ticas de como escrever um c√≥digo&lt;/li&gt;
&lt;li&gt;Cap√≠tulo 8: Pacotes&lt;/li&gt;
&lt;li&gt;Cap√≠tulo 9: Ambientes e caminho de busca&lt;/li&gt;
&lt;li&gt;Cap√≠tulo 10: Interfaces com outras linguagens&lt;/li&gt;
&lt;li&gt;Cap√≠tulo 11: Considera√ß√µes e prepara√ß√£o para o Volume II&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;O que veremos no livro?&lt;/h2&gt;
&lt;pre data-id=&#34;code-animation&#34;&gt;
&lt;code class=&#34;hljs&#34; data-trim data-line-numbers=&#34;|2,5|1-6&#34;&gt;
&lt;script type=&#34;text/template&#34;&gt;
  x &lt;- 10
  lobstr::obj_addr(x)
  ## [1] &#34;0xf8a104fc20&#34;
  y &lt;- x
  lobstr::obj_addr(y)
  ## [1] &#34;0xf8a104fc20&#34;
&lt;/script&gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt; Ilustra√ß√£o &lt;/h2&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/lancamentorbasico-unifal/y=x=10_hud064575b8f0af6084abdce16d604d280_35386_68692ec504b290b034f8c838fb8db20a.webp 400w,
               /slides/lancamentorbasico-unifal/y=x=10_hud064575b8f0af6084abdce16d604d280_35386_15c6873244455d4c68831bc1ac435847.webp 760w,
               /slides/lancamentorbasico-unifal/y=x=10_hud064575b8f0af6084abdce16d604d280_35386_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/lancamentorbasico-unifal/y=x=10_hud064575b8f0af6084abdce16d604d280_35386_68692ec504b290b034f8c838fb8db20a.webp&#34;
               width=&#34;730&#34;
               height=&#34;380&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt; Objeto e Ambiente &lt;/h2&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/lancamentorbasico-unifal/objamb_hu90f54417d64275fdfd02177500a3edb8_84634_8708be3b7e9712bbc8c049d901b3c1d9.webp 400w,
               /slides/lancamentorbasico-unifal/objamb_hu90f54417d64275fdfd02177500a3edb8_84634_1d82851f0dcb635bd55f6ee452d5eee4.webp 760w,
               /slides/lancamentorbasico-unifal/objamb_hu90f54417d64275fdfd02177500a3edb8_84634_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/lancamentorbasico-unifal/objamb_hu90f54417d64275fdfd02177500a3edb8_84634_8708be3b7e9712bbc8c049d901b3c1d9.webp&#34;
               width=&#34;730&#34;
               height=&#34;380&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2&gt;Capa/lateral/fundo&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/lancamentorbasico-unifal/cover-back-front_hu3ce330fa360ba6e4db62da5bce0917e8_4645749_00da4cf45303c5812d852b1a6a7f785f.webp 400w,
               /slides/lancamentorbasico-unifal/cover-back-front_hu3ce330fa360ba6e4db62da5bce0917e8_4645749_2d3c75e90137881f78d6463e7dd9815d.webp 760w,
               /slides/lancamentorbasico-unifal/cover-back-front_hu3ce330fa360ba6e4db62da5bce0917e8_4645749_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/lancamentorbasico-unifal/cover-back-front_hu3ce330fa360ba6e4db62da5bce0917e8_4645749_00da4cf45303c5812d852b1a6a7f785f.webp&#34;
               width=&#34;760&#34;
               height=&#34;521&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;hardcover.png&#34;
  &gt;

&lt;h2 id=&#34;filosofia-de-publica√ß√£o-selo-dc&#34;&gt;Filosofia de publica√ß√£o (Selo DC)&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/dc/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/lancamentorbasico-unifal/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_57f4d021c573f1cdb22f5303fccfacd9.webp 400w,
               /slides/lancamentorbasico-unifal/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_e3124639f3c96b16d12396d9954194c3.webp 760w,
               /slides/lancamentorbasico-unifal/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/lancamentorbasico-unifal/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_57f4d021c573f1cdb22f5303fccfacd9.webp&#34;
               width=&#34;385&#34;
               height=&#34;406&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;section data-background-iframe=&#34;/books/eambr01&#34; data-background-interactive&gt;
	&lt;div style=&#34;position: absolute; width: 40%; right: 0; box-shadow: 0 1px 4px rgba(0,0,0,0.5), 0 5px 25px rgba(0,0,0,0.2); background-color: rgba(0, 0, 0, 0.9); color: #fff; padding: 20px; font-size: 20px; text-align: left;&#34;&gt;
		&lt;h2&gt;P√°gina do livro R b√°sico&lt;/h2&gt;
		&lt;p&gt;Todo o material do livro est√° dispon√≠vel na p√°gina: &lt;a href=&#34;https://bendeivide.github.io/books/eambr01/&#34;&gt;https://bendeivide.github.io/books/eambr01/&lt;/a&gt;.&lt;/p&gt;
	&lt;/div&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;hardcover.png&#34;
  &gt;

&lt;h2 id=&#34;mais-sobre-o-r-b√°sico&#34;&gt;Mais sobre o R b√°sico&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/books/eambr01/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;P√°gina do R b√°sico&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;hardcover.png&#34;
  &gt;

&lt;h1 id=&#34;obrigado&#34;&gt;Obrigado!&lt;/h1&gt;
&lt;p&gt;Sugest√µes, perguntas, cr√≠ticas&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Linhas de Pesquisa</title>
      <link>http://bendeivide.github.io/slides/linhapesquisa/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/linhapesquisa/</guid>
      <description>&lt;h1 id=&#34;linha-de-pesquisa&#34;&gt;Linha de Pesquisa&lt;/h1&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-user-tie  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ben D√™ivide&lt;/a&gt; | 
  &lt;i class=&#34;fas fa-school  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://www.ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;bio&#34;&gt;Bio&lt;/h2&gt;
&lt;p&gt;Estudo Estat√≠stica computacional, mais especificamente, o ambiente R. Estudos na √°rea de Estat√≠stica Experimental e Probabilidade, como tamb√©m no ensino da Estat√≠stica, Professor, Adjunto, C1. Atualmente trabalho na Universidade Federal de S√£o Jo√£o del-Rei (UFSJ), campus Alto Paraopeba, Ouro Branco/MG.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;linha-de-pesquisa-1&#34;&gt;Linha de Pesquisa&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Estat√≠stica computacional com √™nfase em desenvolvimento de pacotes estat√≠sticos&lt;/li&gt;
&lt;li&gt;Estat√≠stica Experimental&lt;/li&gt;
&lt;li&gt;Procedimentos de Compara√ß√µes M√∫ltiplas&lt;/li&gt;
&lt;li&gt;Ensino da estat√≠stica&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;contato&#34;&gt;Contato&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Profissional&lt;/a&gt; | &lt;a href=&#34;https://ufsj.edu.br/bendeivide&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Institucional&lt;/a&gt; | &lt;a href=&#34;https://bendeivide.github.io/#contact&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;E-mail&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MA41 - Probabilidade e Estat√≠stica</title>
      <link>http://bendeivide.github.io/slides/profmat-est/s01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/profmat-est/s01/</guid>
      <description>
&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap.png&#34;
  &gt;

&lt;h1 id=&#34;ma41---prob--est&#34;&gt;MA41 - Prob &amp;amp; Est&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/courses/epaec/normal/#ementa&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Aula 01 - T√≥picos 1, 2, 3&lt;/a&gt;
&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-user-tie  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ben D√™ivide&lt;/a&gt; | 
  &lt;i class=&#34;fas fa-school  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://www.ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;
&lt;/br&gt;

  &lt;i class=&#34;fas fa-book  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;http://bendeivide.github.io/courses/epaec/&#34;&gt;Estat√≠stica e Probabilidade&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;selo-dc&#34;&gt;Selo DC&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/dc/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/profmat-est/s01/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_57f4d021c573f1cdb22f5303fccfacd9.webp 400w,
               /slides/profmat-est/s01/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_e3124639f3c96b16d12396d9954194c3.webp 760w,
               /slides/profmat-est/s01/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/profmat-est/s01/SeloDC-branco_huae8c12316a547ca332088bbaf622ec6b_34348_57f4d021c573f1cdb22f5303fccfacd9.webp&#34;
               width=&#34;385&#34;
               height=&#34;406&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;section data-background-iframe=&#34;/courses/epaec&#34; data-background-interactive&gt;
	&lt;div style=&#34;position: absolute; width: 40%; right: 0; box-shadow: 0 1px 4px rgba(0,0,0,0.5), 0 5px 25px rgba(0,0,0,0.2); background-color: rgba(0, 0, 0, 0.9); color: #fff; padding: 20px; font-size: 20px; text-align: left;&#34;&gt;
		&lt;h2&gt;Material do curso&lt;/h2&gt;
		&lt;p&gt;Todo o material ser√° dispon√≠vel na p√°gina &lt;a href=&#34;https://bendeivide.github.io/courses/estcomp/&#34;&gt;Ben D√™ivide&lt;/a&gt;.&lt;/p&gt;
	&lt;/div&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;!-- https://revealjs.com/transitions/ --&gt;
&lt;section data-transition=&#34;zoom&#34;&gt;
  &lt;h2&gt;Introdu√ß√£o&lt;/h2&gt;
  &lt;p&gt; Nossa vida atual √© assim hoje ... &lt;/p&gt;
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  &lt;figure  id=&#34;figure-imagens-gratispngcom&#34;&gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Imagens: gratispng.com&#34; srcset=&#34;
                 /slides/profmat-est/s01/programador_hu85c5d9c20779881f2ae8deae4e3d792a_590442_0769bc3bdb3596bca3f6a01e3f6b0394.webp 400w,
                 /slides/profmat-est/s01/programador_hu85c5d9c20779881f2ae8deae4e3d792a_590442_198182e3dda60929a57504574af4d842.webp 760w,
                 /slides/profmat-est/s01/programador_hu85c5d9c20779881f2ae8deae4e3d792a_590442_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
                 src=&#34;http://bendeivide.github.io/slides/profmat-est/s01/programador_hu85c5d9c20779881f2ae8deae4e3d792a_590442_0769bc3bdb3596bca3f6a01e3f6b0394.webp&#34;
                 width=&#34;530&#34;
                 height=&#34;380&#34;
                 loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;figcaption&gt;
        Imagens: gratispng.com
      &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/section&gt;
&lt;section data-transition-speed=&#34;fast&#34;&gt;
&lt;h2&gt;Introdu√ß√£o&lt;/h2&gt;
&lt;p&gt; Nossa vida atual √© assim hoje ... &lt;/p&gt;














&lt;figure  id=&#34;figure-imagens-gratispngcom&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Imagens: gratispng.com&#34; srcset=&#34;
               /slides/profmat-est/s01/dados_hu887ba6b7f9c0e641f75b5f82feacab54_163105_453a07f9082a2771b97ce6d020dc4ec8.webp 400w,
               /slides/profmat-est/s01/dados_hu887ba6b7f9c0e641f75b5f82feacab54_163105_1d078c7aaef4a058d23d40388727b8be.webp 760w,
               /slides/profmat-est/s01/dados_hu887ba6b7f9c0e641f75b5f82feacab54_163105_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/profmat-est/s01/dados_hu887ba6b7f9c0e641f75b5f82feacab54_163105_453a07f9082a2771b97ce6d020dc4ec8.webp&#34;
               width=&#34;530&#34;
               height=&#34;380&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Imagens: gratispng.com
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/section&gt;
&lt;section data-transition-speed=&#34;fast&#34;&gt;
&lt;h2&gt;Introdu√ß√£o&lt;/h2&gt;
&lt;p&gt; Usamos para tudo ... &lt;/p&gt;














&lt;figure  id=&#34;figure-imagens-gratispngcom&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Imagens: gratispng.com&#34; srcset=&#34;
               /slides/profmat-est/s01/emojis_huf8050f69e6ce2d326df2bbe686aea7ea_72356_5f58a4399a031452fdf2f7b4567ce22a.webp 400w,
               /slides/profmat-est/s01/emojis_huf8050f69e6ce2d326df2bbe686aea7ea_72356_ea8f7f14ad53afdff9b10b7854945999.webp 760w,
               /slides/profmat-est/s01/emojis_huf8050f69e6ce2d326df2bbe686aea7ea_72356_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/profmat-est/s01/emojis_huf8050f69e6ce2d326df2bbe686aea7ea_72356_5f58a4399a031452fdf2f7b4567ce22a.webp&#34;
               width=&#34;530&#34;
               height=&#34;380&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Imagens: gratispng.com
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/section&gt;
&lt;section data-transition-speed=&#34;fast&#34;&gt;
&lt;h2&gt;Introdu√ß√£o&lt;/h2&gt;
&lt;p&gt; Pesquisar ... &lt;/p&gt;














&lt;figure  id=&#34;figure-imagens-gratispngcom&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Imagens: gratispng.com&#34; srcset=&#34;
               /slides/profmat-est/s01/searching_hu749c487df7c6eff3fe551052b606a39d_94218_979a7958ebfc5597f19575ecd9f05006.webp 400w,
               /slides/profmat-est/s01/searching_hu749c487df7c6eff3fe551052b606a39d_94218_4f5e7490b68d33a29e8fb42d353e8930.webp 760w,
               /slides/profmat-est/s01/searching_hu749c487df7c6eff3fe551052b606a39d_94218_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/profmat-est/s01/searching_hu749c487df7c6eff3fe551052b606a39d_94218_979a7958ebfc5597f19575ecd9f05006.webp&#34;
               width=&#34;530&#34;
               height=&#34;380&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Imagens: gratispng.com
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/section&gt;
&lt;section data-transition-speed=&#34;fast&#34;&gt;
&lt;h2&gt;Introdu√ß√£o&lt;/h2&gt;
&lt;p&gt; Contratempos ... &lt;/p&gt;














&lt;figure  id=&#34;figure-imagens-gratispngcom&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Imagens: gratispng.com&#34; srcset=&#34;
               /slides/profmat-est/s01/quebrando_pc_hub4a3ac35862bea0b486522facdebe990_189986_dd3a418c0515058ffb1d8bd7f924ff87.webp 400w,
               /slides/profmat-est/s01/quebrando_pc_hub4a3ac35862bea0b486522facdebe990_189986_d8e1aa3e09274d0d674507d64e36b02f.webp 760w,
               /slides/profmat-est/s01/quebrando_pc_hub4a3ac35862bea0b486522facdebe990_189986_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/profmat-est/s01/quebrando_pc_hub4a3ac35862bea0b486522facdebe990_189986_dd3a418c0515058ffb1d8bd7f924ff87.webp&#34;
               width=&#34;530&#34;
               height=&#34;380&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Imagens: gratispng.com
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;!-- https://revealjs.com/transitions/ --&gt;
&lt;section data-transition=&#34;zoom&#34;&gt;
  &lt;h2&gt;Dados&lt;/h2&gt;
  &lt;p&gt; Em meio a tudo isso, uma coisa acontece ... &lt;/p&gt;
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  &lt;figure  id=&#34;figure-imagens-gratispngcom&#34;&gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Imagens: gratispng.com&#34; srcset=&#34;
                 /slides/profmat-est/s01/dados02_huaa69fdfff67864a40a8e5e6a627be466_18369921_7684bd630a966bea4c66d8f3e27710af.webp 400w,
                 /slides/profmat-est/s01/dados02_huaa69fdfff67864a40a8e5e6a627be466_18369921_88e47f38d0b957e637a120fc53fed28d.webp 760w,
                 /slides/profmat-est/s01/dados02_huaa69fdfff67864a40a8e5e6a627be466_18369921_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
                 src=&#34;http://bendeivide.github.io/slides/profmat-est/s01/dados02_huaa69fdfff67864a40a8e5e6a627be466_18369921_7684bd630a966bea4c66d8f3e27710af.webp&#34;
                 width=&#34;530&#34;
                 height=&#34;380&#34;
                 loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;figcaption&gt;
        Imagens: gratispng.com
      &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/section&gt;
&lt;section data-transition-speed=&#34;fast&#34;&gt;
&lt;h2&gt;Dados&lt;/h2&gt;
&lt;p&gt; Essas informa√ß√µes s√£o processadas ... &lt;/p&gt;














&lt;figure  id=&#34;figure-imagens-gratispngcom&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Imagens: gratispng.com&#34; srcset=&#34;
               /slides/profmat-est/s01/infra_comp_hub6808cefc104d832c78f51c1fe99f225_205407_d992efe6d9441dba596dd57504563239.webp 400w,
               /slides/profmat-est/s01/infra_comp_hub6808cefc104d832c78f51c1fe99f225_205407_cc5813b7ab49e6ce51f87ec864d8bd40.webp 760w,
               /slides/profmat-est/s01/infra_comp_hub6808cefc104d832c78f51c1fe99f225_205407_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/profmat-est/s01/infra_comp_hub6808cefc104d832c78f51c1fe99f225_205407_d992efe6d9441dba596dd57504563239.webp&#34;
               width=&#34;530&#34;
               height=&#34;380&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Imagens: gratispng.com
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/section&gt;
&lt;section data-transition-speed=&#34;fast&#34;&gt;
&lt;h2&gt;Dados&lt;/h2&gt;
&lt;p&gt; Analisadas ... &lt;/p&gt;














&lt;figure  id=&#34;figure-imagens-gratispngcom&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Imagens: gratispng.com&#34; srcset=&#34;
               /slides/profmat-est/s01/exp_user_hu8f5c0e0d7f084260f0d10501891b1393_29133_6ef8d184a5fe1679c0d6b7abc1011d81.webp 400w,
               /slides/profmat-est/s01/exp_user_hu8f5c0e0d7f084260f0d10501891b1393_29133_87aaaa3da49d73051be18accb8582e5a.webp 760w,
               /slides/profmat-est/s01/exp_user_hu8f5c0e0d7f084260f0d10501891b1393_29133_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/profmat-est/s01/exp_user_hu8f5c0e0d7f084260f0d10501891b1393_29133_6ef8d184a5fe1679c0d6b7abc1011d81.webp&#34;
               width=&#34;530&#34;
               height=&#34;380&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Imagens: gratispng.com
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/section&gt;
&lt;section data-transition-speed=&#34;fast&#34;&gt;
&lt;h2&gt;Dados&lt;/h2&gt;
&lt;p&gt; E assim, todos esses dados ... &lt;/p&gt;














&lt;figure  id=&#34;figure-imagens-gratispngcom&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Imagens: gratispng.com&#34; srcset=&#34;
               /slides/profmat-est/s01/analise02_hu9ea620b0e1d37040944340d01dd78f2b_515291_8778f4bc4322cd248911f541b900c98e.webp 400w,
               /slides/profmat-est/s01/analise02_hu9ea620b0e1d37040944340d01dd78f2b_515291_7a54132dfe8825d6cab37da7f5bfd4ed.webp 760w,
               /slides/profmat-est/s01/analise02_hu9ea620b0e1d37040944340d01dd78f2b_515291_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/profmat-est/s01/analise02_hu9ea620b0e1d37040944340d01dd78f2b_515291_8778f4bc4322cd248911f541b900c98e.webp&#34;
               width=&#34;530&#34;
               height=&#34;380&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Imagens: gratispng.com
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/section&gt;
&lt;section data-transition-speed=&#34;fast&#34;&gt;
&lt;h2&gt;Dados&lt;/h2&gt;
&lt;p&gt; ... que os usu√°rios repassam ... &lt;/p&gt;














&lt;figure  id=&#34;figure-imagens-gratispngcom&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Imagens: gratispng.com&#34; srcset=&#34;
               /slides/profmat-est/s01/analise03_hub2e1dffd2cc65cb9ada91baab78eae39_412393_ecbf33cd9eab19e34cbc14286fd53e75.webp 400w,
               /slides/profmat-est/s01/analise03_hub2e1dffd2cc65cb9ada91baab78eae39_412393_6104309efe8272d3b6d06f70cad0b52b.webp 760w,
               /slides/profmat-est/s01/analise03_hub2e1dffd2cc65cb9ada91baab78eae39_412393_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/profmat-est/s01/analise03_hub2e1dffd2cc65cb9ada91baab78eae39_412393_ecbf33cd9eab19e34cbc14286fd53e75.webp&#34;
               width=&#34;530&#34;
               height=&#34;380&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Imagens: gratispng.com
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/section&gt;
&lt;section data-transition-speed=&#34;fast&#34;&gt;
&lt;h1&gt;Dados &gt; \$&lt;/h1&gt;
&lt;/section&gt;
&lt;section data-transition-speed=&#34;fast&#34;&gt;
&lt;h2&gt;Dados&lt;/h2&gt;
&lt;p&gt; E a√≠, o Vale do sil√≠cio √© o que tem que ser! &lt;/p&gt;














&lt;figure  id=&#34;figure-imagens-oficinadanetcombr&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Imagens: oficinadanet.com.br&#34; srcset=&#34;
               /slides/profmat-est/s01/vale_silicio_hu2e878ae56d4a55650a6917f7b07e2ae0_84455_e4d52bf7f5244f20b8c1cbb9bbc42621.webp 400w,
               /slides/profmat-est/s01/vale_silicio_hu2e878ae56d4a55650a6917f7b07e2ae0_84455_927ece7d5689dccd421079d10c92cf95.webp 760w,
               /slides/profmat-est/s01/vale_silicio_hu2e878ae56d4a55650a6917f7b07e2ae0_84455_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/profmat-est/s01/vale_silicio_hu2e878ae56d4a55650a6917f7b07e2ae0_84455_e4d52bf7f5244f20b8c1cbb9bbc42621.webp&#34;
               width=&#34;530&#34;
               height=&#34;380&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Imagens: oficinadanet.com.br
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;!-- https://revealjs.com/transitions/ --&gt;
&lt;section data-transition=&#34;zoom&#34;&gt;
  &lt;h2&gt;Motiva√ß√£o inicial &lt;/h2&gt;
  &lt;p&gt; Defini√ß√µes gerais da estat√≠stica (Exemplo do livro EPAEC) &lt;/p&gt;
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  &lt;figure  &gt;
    &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
      &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
                 /slides/profmat-est/s01/epaec_exerc5.19_huf42f90654072e146aede07d81ef72130_118873_d2eb6c328bbca59128eb008a44841e3c.webp 400w,
                 /slides/profmat-est/s01/epaec_exerc5.19_huf42f90654072e146aede07d81ef72130_118873_2422affad744e4d2bee6a7971f41e9ec.webp 760w,
                 /slides/profmat-est/s01/epaec_exerc5.19_huf42f90654072e146aede07d81ef72130_118873_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
                 src=&#34;http://bendeivide.github.io/slides/profmat-est/s01/epaec_exerc5.19_huf42f90654072e146aede07d81ef72130_118873_d2eb6c328bbca59128eb008a44841e3c.webp&#34;
                 width=&#34;830&#34;
                 height=&#34;420&#34;
                 loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;/figure&gt;
&lt;/section&gt;
&lt;section data-transition-speed=&#34;fast&#34;&gt;
&lt;h2&gt;Motiva√ß√£o inicial&lt;/h2&gt;
&lt;p&gt; Defini√ß√µes gerais da estat√≠stica... &lt;/p&gt;














&lt;figure  id=&#34;figure-imagem-livro-epaec&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Imagem: Livro EPAEC&#34; srcset=&#34;
               /slides/profmat-est/s01/prodcons_hu5910991e216a6cca12abe1fdcd74a6f7_5529_41d76642fcdda6f48ac510a3ac9a6405.webp 400w,
               /slides/profmat-est/s01/prodcons_hu5910991e216a6cca12abe1fdcd74a6f7_5529_18a6dc64c476a8c99164f36faf38e895.webp 760w,
               /slides/profmat-est/s01/prodcons_hu5910991e216a6cca12abe1fdcd74a6f7_5529_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/profmat-est/s01/prodcons_hu5910991e216a6cca12abe1fdcd74a6f7_5529_41d76642fcdda6f48ac510a3ac9a6405.webp&#34;
               width=&#34;530&#34;
               height=&#34;380&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Imagem: Livro EPAEC
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;m√©todo-cient√≠fico&#34;&gt;M√©todo Cient√≠fico&lt;/h2&gt;
&lt;iframe width=&#34;760&#34; height=&#34;515&#34; src=&#34;https://www.youtube.com/embed/QPeS1v7l6yk&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;!-- https://revealjs.com/transitions/ --&gt;
&lt;section data-transition=&#34;zoom&#34;&gt;
  &lt;h2&gt;Defini√ß√µes Gerais da Estat√≠stica&lt;/h2&gt;
  &lt;aside class=&#34;notes&#34;&gt;
    üìù Mostrar a rela√ß√£o do M√©todo cient√≠fico com as Defini√ß√µes gerais da estat√≠stica (Smoothdraw)
  &lt;/aside&gt;
  &lt;iframe width=&#34;760&#34; height=&#34;515&#34; src=&#34;https://www.youtube.com/embed/mASLUwyaC5Q&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/section&gt;
&lt;section data-transition-speed=&#34;fast&#34;&gt;
&lt;h2&gt;Defini√ß√µes Gerais da Estat√≠stica&lt;/h2&gt;
&lt;aside class=&#34;notes&#34;&gt;
    üìù Mostrar a rela√ß√£o do M√©todo cient√≠fico com as Defini√ß√µes gerais da estat√≠stica (Smoothdraw)
  &lt;/aside&gt;
&lt;iframe width=&#34;760&#34; height=&#34;515&#34; src=&#34;https://www.youtube.com/embed/xvORKHMVUr8&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/section&gt;
&lt;hr&gt;
&lt;h2 id=&#34;natureza-das-vari√°veis&#34;&gt;Natureza das vari√°veis&lt;/h2&gt;
&lt;iframe width=&#34;760&#34; height=&#34;515&#34; src=&#34;https://www.youtube.com/embed/LIg6uLzCRmU&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;t√©cnicas-de-somat√≥rio&#34;&gt;T√©cnicas de Somat√≥rio&lt;/h2&gt;
  &lt;aside class=&#34;notes&#34;&gt;
    üìù Fazer alguns exemplos na sala digital (Smoothdraw)
  &lt;/aside&gt;
&lt;iframe width=&#34;760&#34; height=&#34;515&#34; src=&#34;https://www.youtube.com/embed/tWCxCyZZHes&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;section&gt;
  &lt;h2&gt;Motiva√ß√£o inicial&lt;/h2&gt;
  &lt;h3&gt; Dados (Primeiro tipo) &lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;##    [1] 100.93730855  90.78737290  31.43347250  70.04161421 114.72725633
##    [6] 119.48971504  39.59619123  81.81619913  18.66636591  87.17608029
##   [11] 155.08897515 137.78907540  88.08832220 149.37223517 137.06950642
##   [16] 104.46736332  52.25280719  90.24248077 146.27606310 124.14892624
##   [21]  70.18446816  -9.26434191  66.25670311  -5.95305960  36.74009892
##   [26]  81.31692224  65.62222848  56.39205866  94.91194969  87.31097349
##   [31]   7.31297728  96.10269670 148.42831703 109.24629800  31.00282108
##   [36]  28.22428188 118.10436143  12.04566231  83.77279952  67.42185057
##   [41] 154.32756997  61.87275600  58.56687325 141.72369515  51.61740066
##   [46]  98.55923323 111.62625763  84.93956592  66.11927084 132.76138181
##   [51]  79.96812265  83.27217175 168.39769766 206.88835518 125.29096323
##   [56] 139.31711921  54.88940279 126.64484962  67.70528732 114.54937442
##   [61]  38.12027656  77.19118624  58.48386726 117.00578218 153.31881978
##   [66] 160.80629190 136.78453288  75.93956913 128.13723814  37.68401441
##   [71] 119.04611063  28.47863736  47.57772476  89.07482247  25.50318816
##   [76] 158.63531406  26.00864892  78.48060920  47.41806790 176.12931720
##   [81] 129.64140273  88.86692455 135.64471381 135.83004169 122.01209322
##   [86] 107.94153107 132.98820692 211.02598315  40.80274630  96.30220828
##   [91]  79.18226626  90.42588281 103.47723907 157.76741590 129.74786735
##   [96]  29.01774458  19.66613773 144.64629498 107.40839776 161.35141951
##  [101]  61.90978304 120.96877029  48.00283177 135.57869830  68.33934925
##  [106] 128.15873322 133.04933429  17.09745713 151.40839885 156.39768070
##  [111]  35.99226983 156.44341137  76.79327364  84.21198952 146.21465734
##  [116] 103.85723620 151.99618026 137.09431034 162.77724291 147.54594832
##  [121]  75.93171964 110.14408890  98.41301281  40.22098498 131.18406184
##  [126]  54.25977582 112.43790039  46.86886034  81.80088764  39.65025733
##  [131] 171.46063907 131.67179455   0.15921912  65.90839135  76.99722603
##  [136]  50.84654029 124.76658564 136.29087501 133.36493659 147.73932182
##  [141]  16.23339104  39.74073038   1.83737554 173.53761549 118.62361693
##  [146] 153.29396670 126.53249342 105.09917229 166.88912329 104.36173842
##  [151]  80.44478963  87.50662577 157.75523729  56.76363801  56.66608288
##  [156] -16.05085152 130.44150845 157.50030241  40.02011641  20.99996227
##  [161] 132.65830968  72.52957574 126.05272627  65.02984668  78.05453426
##  [166]  66.13403519 147.95705974  26.59133353 109.18819463  28.24264087
##  [171]  43.13000509  79.26773366 107.19671441 153.10121653  71.46030486
##  [176] 163.85906882 111.41446603  84.55934677 147.99145653 127.44111874
##  [181] 121.27565469 132.17500176  31.98469282  90.07469468 130.96513384
##  [186] 203.41048025  84.73576229 114.06228061 134.56586684 102.31807191
##  [191] 105.65146808 149.76659371  65.94243193  36.14713767  26.56511251
##  [196]  84.32629667  14.81702537  32.47426719  44.89531614  45.02284927
##  [201] 160.77568881 116.54382426 169.51375596 143.60234925  45.95914887
##  [206] 124.79107957 152.63137781  36.26750249  90.31666358  35.24581787
##  [211] 107.09401423 163.08575260  78.42498360   8.86437052 117.62719794
##  [216]  32.57742793 135.38441590  79.45545316  77.69774100  47.94218492
##  [221]  83.53876419  85.85891879 121.62145627  84.61964525  97.16818461
##  [226] 136.67577101 104.86558098 181.54458683 128.03053495 166.47823822
##  [231]  86.05882522  36.66342279  87.54258030 100.89942073 118.85363636
##  [236] 139.80042788  57.96612915 -10.27358754  43.59720045  32.93450206
##  [241] 180.25570214 137.22118642 143.10411030 119.75779077 125.45593482
##  [246]  93.87249371 104.62923236  82.10600428  82.01723878 151.42853604
##  [251] 153.89462962 146.58906076  26.96030665  54.69622119  65.98260843
##  [256] 153.15830184  65.37934239  43.31858674  45.26922831  49.35481906
##  [261] 120.51386629 123.88702210 -16.49397725 100.81277326 149.01767616
##  [266] 140.31741324 105.98004444 -21.83078022 101.55112381  83.21266510
##  [271]  86.81119190  82.20737696  75.94226009 111.13677339 221.49551593
##  [276] 174.81490594  64.13958986  76.64730499 133.14617264 215.00884455
##  [281] 116.37550706 103.19317408  43.02195300 159.02051018 102.06942385
##  [286]  39.32032183 103.65978883  87.13377028 113.34032055 169.38621629
##  [291] 109.65398175 129.61583113  58.50127365 119.62866408 119.24338053
##  [296] 152.55223329 157.78987423  48.27810205  87.27659671 163.68421330
##  [301] 175.12723195 129.52047336  68.46572743 139.61747686 106.26922851
##  [306] 116.13774856  77.72083953 138.34219672  29.82484891  41.19766102
##  [311] 125.57982346 165.83826319 219.64564735  96.61152958  89.81074668
##  [316] 199.82172261 177.16088972  38.58311869 232.22439961 137.85068541
##  [321] 152.76725961 147.89724477 141.69395288  91.53622150  79.77831785
##  [326] 114.78007869  88.40627464  77.59608842 101.11553983 102.22336486
##  [331] 124.03605826 131.78099276  -0.03711965  65.46722481  93.46774053
##  [336]  82.78741085  97.37935880 104.80619603 113.32035266 127.73967376
##  [341] 161.77229393 114.25666907  77.06035361 131.17390109  63.80024542
##  [346] 180.97093517  69.16632949 119.22705287 205.72606564  48.57163169
##  [351]  55.66060172 163.55730007  19.74572794 156.11366915 207.92193209
##  [356] 121.41233065 160.05893452 151.58450581 132.69371264 200.60408866
##  [361] 154.73149209 136.32046770  30.01714317  35.61024184  51.57922612
##  [366]  13.16571211 141.58486790  62.05234457 207.75385005  78.83705599
##  [371]  99.71750317 120.01808643  81.71610990  78.54280824 112.23485634
##  [376] 210.98881244 115.71349040  71.81074627  25.71519208 120.76492965
##  [381]  73.59681587  82.47646913 136.53109686  72.16879175  27.51197319
##  [386]  47.40017859  65.85806906  69.35294107 194.53900175  92.72947332
##  [391]  68.02881397  79.44119774 117.13959392  43.33766227 103.30351513
##  [396] 101.89998830 146.05323738 206.74828192  70.00865342 162.22232293
##  [401]  96.02714914 159.08757749 209.30720313 120.30874654  63.08204477
##  [406]   2.17566485   2.49771492  52.95010922 159.88933843  68.78803048
##  [411]  93.35651724  99.13895389  77.01853589 173.64683953 208.46598063
##  [416] -50.07156532  11.40072085  81.75803886 118.72668903  38.29610367
##  [421] 123.74467110 161.65287285  70.34356716 137.61312197 130.60227534
##  [426]  88.56713174  64.75803251 161.47580236 175.92575649 167.25470902
##  [431]  93.81542355 146.69512268 100.97484228 141.54260549  84.77526660
##  [436]  97.03593614 150.36983487  31.11024570  49.78986365  98.83598475
##  [441] 177.33736369  62.03183745 150.33963287 113.71074582  95.98088177
##  [446]  54.82237523 123.65725515 169.42444890 101.73730469  35.37074860
##  [451] 158.19837525  23.83077015 -25.91675268  64.62353847  85.62835586
##  [456]  78.23458443  82.84606146  98.03445580 144.34829939  82.00257996
##  [461]  63.55228647 187.58728096  95.69807049 155.31815079  99.04110814
##  [466]  25.32699108 235.03183115  62.81527889 153.25974905  98.39591342
##  [471]  73.00201553   3.71782162 150.39156881  86.03826016  37.52170724
##  [476] 162.42455639  90.38933117 145.59881155  -7.91348400 164.48052662
##  [481]  78.59450172  87.24985535 166.35791194 141.93450603  26.74996614
##  [486]  69.18736511 105.30529197   7.79916211  19.17885731 111.38383521
##  [491] 146.06083510  83.43982803 164.36170155 102.86304012 -10.19665626
##  [496]  73.85448259 154.03926551  87.84293312  54.52767189  56.58502463
##  [501] 143.47375225  65.99952011 108.66072694  92.02809805 139.67497163
##  [506] 184.71752457 161.99843432 101.47183716 182.86072495 156.56115701
##  [511]  29.87946839 107.83852306 143.37542982  98.33824214 147.70322782
##  [516] 156.50483626 119.68486560 118.84041640  87.41285465 125.20474454
##  [521]  33.50982643  94.08502737  68.33757667 133.88456724  85.10591176
##  [526] 131.39611236 183.92153640 -20.00012703  32.50785575 160.10039479
##  [531] 164.69213597  97.02028269  65.74688274  27.32803478 164.70632806
##  [536] 158.80845447 143.20225391 -14.83662617  30.40949940  30.70616275
##  [541]  46.34765780  52.92872484  70.67828451 151.73606100 122.94811033
##  [546]  40.32774640 139.59446358  11.38475446  70.61387890  35.88148437
##  [551]  84.39326695  65.06123497 -32.19248839 141.25111884 115.34631566
##  [556]  97.09802709 146.32847054  89.06540697 149.65667487   3.83328288
##  [561]  47.36424078 144.51988810 277.05701388 137.07553713  89.62643730
##  [566] 108.99692271 171.31824247  77.84166053 118.35949933 134.79108481
##  [571] 146.67223643 174.59445413 157.97614951 111.33979785  35.22674076
##  [576]  96.86106542 149.66414684  49.70345300  62.45075262 187.20081912
##  [581]  40.61999543  79.15147911  21.50899203  85.97629824  70.73365181
##  [586] 133.01595988  68.12437255  73.04891834 147.57601168  94.72100771
##  [591]  81.29653636  91.18837096 113.82416540 111.81662963 203.08370797
##  [596]  35.49700071 128.55947237 189.26951134 110.64701215 144.23460730
##  [601]  54.90148678  97.26250210  32.16226445 115.86152886 169.78595597
##  [606]  39.43880916  89.79291696  22.37743370 125.90248343  79.05798484
##  [611]  14.52733922 224.15813357 124.90168675  66.30658974  55.65093022
##  [616]  13.43113246 130.22745607  56.43624609 136.26708232  98.46340099
##  [621]  94.13888128 104.91114693  66.15713891  97.53768225  71.96401200
##  [626] 219.95774326  95.50639492  58.91757911  85.65191192 106.56394370
##  [631]  46.89580248 136.67905179 116.13460992  82.55101143 164.17628321
##  [636]  49.27559756  74.49678629  91.64151269  84.86661072 201.32352362
##  [641] 145.04528192 106.77145202  89.93555229  59.65816295 132.20620619
##  [646]  83.16704397  13.41482444 113.09603313  54.16512009  71.57177624
##  [651]  56.70897791 141.27469559  59.99338579 148.79150434 235.00377654
##  [656]  93.23052016  94.69844180  32.79680974 122.15609143 148.05588708
##  [661]  87.92820917 104.14774456  81.91376211 116.69300999 113.28047105
##  [666] 250.64528733  82.76349312 153.12787266  63.51574630 102.82738605
##  [671] 123.39148560  81.36773747 110.50808438 164.48041528  18.65802251
##  [676]  60.82317452 125.54565517 160.88130280 115.25546238 110.51468167
##  [681] 123.44329828   4.78287139 161.92011423 119.54994457  98.44005416
##  [686]  19.05997391 122.56331391  65.45783182 170.27228110  14.93286561
##  [691] 109.61227986  64.85216193  59.57220683  68.09006292 186.86727140
##  [696] -13.02391316  19.37639531 132.68700994 145.14403643 137.73042439
##  [701]  88.65946156  65.20156862 125.33236787 130.81171468  16.65603627
##  [706]  83.18728871 125.35899284  15.13046492  89.65363880  80.07014859
##  [711]  40.56900863 122.62827021 110.37948520  39.49388119 138.37075271
##  [716]  70.04861544  21.95136136  50.21679785 154.66255042 145.85714430
##  [721]  61.34753224  76.20820912  43.46484080  78.55822842  58.02081751
##  [726]  69.95066635  61.30546109  55.37538244  98.21340765  84.79109488
##  [731] -50.60818918  -0.42615289  97.68142953  82.02314677  90.24891691
##  [736]  24.27649323  55.39834764  56.86467543 127.59770740  90.58830433
##  [741]  83.74266282  73.15307754  81.42612936 136.14035118 160.28459417
##  [746] 159.20765628 133.55952177 158.77510367 109.42632364 124.95317984
##  [751]   2.61908443 121.03686231 158.67381249  27.68842215  81.66243970
##  [756]  69.61018826 115.99356887 154.99238361  79.69816862 220.53732134
##  [761] 157.94499424 116.91947958 122.80886720  84.29776668 170.21720101
##  [766]  79.48650255  95.59487419 116.24377974 159.25499001  87.22457133
##  [771] 144.22239604  75.57194652  63.63119134  40.58723635  73.10287920
##  [776] 105.96756087 165.90890477 172.15402788 112.45131058 140.78511634
##  [781]  63.26960968 112.90766390  57.35696156 110.78243793  64.53948940
##  [786] 135.54327616  77.63140706  83.08508479 125.86167111 104.93517972
##  [791] 137.18428079  86.07249293 126.95358403  95.58302652  62.71212459
##  [796]  21.99607744 154.14782627 -17.05280013 110.31526330 138.23712856
##  [801]  -6.25342905 126.05893332  97.67885500  42.52641395 131.46691539
##  [806]  63.67642620  80.67913388  66.41428051 145.01930952 144.34208453
##  [811] 119.51390559  53.62442549 137.29196144 124.74120783  98.90342691
##  [816] 129.40111631 137.82455370  75.29868637  63.33421857  99.94898030
##  [821] 140.29128484 155.46546909  84.51602589  54.57108759 113.15130638
##  [826]  98.95410962  89.38287462  48.44480401 106.97553698 108.31089923
##  [831]  50.76701755 101.13170354 139.26650163  41.04052379 195.53953888
##  [836]  73.09992525 144.21382145 107.36548184  49.57863186 141.90944961
##  [841]  41.58804313 122.71590665 110.62864338  72.34568263 101.17150126
##  [846] 132.40894452  12.86026324 129.75813305  56.07354935 132.22187856
##  [851]  68.54507487  95.08999052 134.21088496  30.76569845 177.74727930
##  [856]  59.28293291  57.81844571 151.24637129 105.78516882 112.07470199
##  [861]  30.45919292 176.30304223 102.32581184 161.99911798 115.42863177
##  [866] 139.28138023 155.87393524  99.75088638  91.07908949 134.81145345
##  [871] 126.08986042  77.60867049 120.27003020  63.15177877 112.78740072
##  [876]  85.75332475  98.44393375  75.70705565  93.24559579  25.96406386
##  [881] 162.81845628 110.45208250 115.65783948 153.75741193  85.66874127
##  [886]  98.40112863  62.86333017 204.26100961 142.74452052 150.02229981
##  [891]  40.79410450  22.94487224  89.41334996 108.51762850  65.46113128
##  [896] 184.88603695  96.36550187  64.11955719  79.17427808 209.67933805
##  [901] 127.11739129 151.18338045 140.64130544 165.05135387 128.39782055
##  [906]  93.99642789  75.39986469 110.03859877 108.23996494 134.68288481
##  [911] 106.66621267  63.02684207  80.12405924 112.85793197  85.99130404
##  [916] 150.39837961 157.76098120  89.86025254  83.92952265  18.94730415
##  [921] 128.40526295 133.56401236 173.01297609  18.11403129 164.92505411
##  [926]  92.31500856 178.95744228 202.76175928 164.22433254 120.87016586
##  [931] 157.99268036 124.57951279 155.10043589 128.42852151  81.80414574
##  [936] 106.84781854 136.21377136 176.99908030 149.34961674  52.69890010
##  [941]  69.36596579 164.34432952  72.16749200  98.85111389 166.23705613
##  [946] 113.19488345 142.06695095  86.79312555 144.33846460 111.27428778
##  [951] 127.24163623 158.81253634  84.32123791 125.26883443 176.98506493
##  [956] 174.55013553 112.18447423  79.23428368  -1.75863811  67.83210511
##  [961] 102.69107405  80.52190580 193.89127767  27.11966366 136.19276892
##  [966]  39.09618692  84.71205651 101.21988583 117.61330506 141.18948778
##  [971] 129.88932805 164.78187322  71.09669104 108.64874902  70.94018770
##  [976]  60.87047018  16.65853979  64.32633758  74.66620861  65.24080279
##  [981] 127.08039056  70.94613518 121.54160255 133.58505948  78.32463472
##  [986]  60.95082856 120.81490912  58.91897002 110.55379452 137.74115849
##  [991] 189.00548763 133.29738410  99.46330902  39.94726968  67.83011078
##  [996] 139.86461552 126.41241372 114.18348694  99.39303476  90.40431113
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h3&gt; Dados (Segundo tipo) &lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;##    [1] -50.60818918 -50.07156532 -32.19248839 -25.91675268 -21.83078022
##    [6] -20.00012703 -17.05280013 -16.49397725 -16.05085152 -14.83662617
##   [11] -13.02391316 -10.27358754 -10.19665626  -9.26434191  -7.91348400
##   [16]  -6.25342905  -5.95305960  -1.75863811  -0.42615289  -0.03711965
##   [21]   0.15921912   1.83737554   2.17566485   2.49771492   2.61908443
##   [26]   3.71782162   3.83328288   4.78287139   7.31297728   7.79916211
##   [31]   8.86437052  11.38475446  11.40072085  12.04566231  12.86026324
##   [36]  13.16571211  13.41482444  13.43113246  14.52733922  14.81702537
##   [41]  14.93286561  15.13046492  16.23339104  16.65603627  16.65853979
##   [46]  17.09745713  18.11403129  18.65802251  18.66636591  18.94730415
##   [51]  19.05997391  19.17885731  19.37639531  19.66613773  19.74572794
##   [56]  20.99996227  21.50899203  21.95136136  21.99607744  22.37743370
##   [61]  22.94487224  23.83077015  24.27649323  25.32699108  25.50318816
##   [66]  25.71519208  25.96406386  26.00864892  26.56511251  26.59133353
##   [71]  26.74996614  26.96030665  27.11966366  27.32803478  27.51197319
##   [76]  27.68842215  28.22428188  28.24264087  28.47863736  29.01774458
##   [81]  29.82484891  29.87946839  30.01714317  30.40949940  30.45919292
##   [86]  30.70616275  30.76569845  31.00282108  31.11024570  31.43347250
##   [91]  31.98469282  32.16226445  32.47426719  32.50785575  32.57742793
##   [96]  32.79680974  32.93450206  33.50982643  35.22674076  35.24581787
##  [101]  35.37074860  35.49700071  35.61024184  35.88148437  35.99226983
##  [106]  36.14713767  36.26750249  36.66342279  36.74009892  37.52170724
##  [111]  37.68401441  38.12027656  38.29610367  38.58311869  39.09618692
##  [116]  39.32032183  39.43880916  39.49388119  39.59619123  39.65025733
##  [121]  39.74073038  39.94726968  40.02011641  40.22098498  40.32774640
##  [126]  40.56900863  40.58723635  40.61999543  40.79410450  40.80274630
##  [131]  41.04052379  41.19766102  41.58804313  42.52641395  43.02195300
##  [136]  43.13000509  43.31858674  43.33766227  43.46484080  43.59720045
##  [141]  44.89531614  45.02284927  45.26922831  45.95914887  46.34765780
##  [146]  46.86886034  46.89580248  47.36424078  47.40017859  47.41806790
##  [151]  47.57772476  47.94218492  48.00283177  48.27810205  48.44480401
##  [156]  48.57163169  49.27559756  49.35481906  49.57863186  49.70345300
##  [161]  49.78986365  50.21679785  50.76701755  50.84654029  51.57922612
##  [166]  51.61740066  52.25280719  52.69890010  52.92872484  52.95010922
##  [171]  53.62442549  54.16512009  54.25977582  54.52767189  54.57108759
##  [176]  54.69622119  54.82237523  54.88940279  54.90148678  55.37538244
##  [181]  55.39834764  55.65093022  55.66060172  56.07354935  56.39205866
##  [186]  56.43624609  56.58502463  56.66608288  56.70897791  56.76363801
##  [191]  56.86467543  57.35696156  57.81844571  57.96612915  58.02081751
##  [196]  58.48386726  58.50127365  58.56687325  58.91757911  58.91897002
##  [201]  59.28293291  59.57220683  59.65816295  59.99338579  60.82317452
##  [206]  60.87047018  60.95082856  61.30546109  61.34753224  61.87275600
##  [211]  61.90978304  62.03183745  62.05234457  62.45075262  62.71212459
##  [216]  62.81527889  62.86333017  63.02684207  63.08204477  63.15177877
##  [221]  63.26960968  63.33421857  63.51574630  63.55228647  63.63119134
##  [226]  63.67642620  63.80024542  64.11955719  64.13958986  64.32633758
##  [231]  64.53948940  64.62353847  64.75803251  64.85216193  65.02984668
##  [236]  65.06123497  65.20156862  65.24080279  65.37934239  65.45783182
##  [241]  65.46113128  65.46722481  65.62222848  65.74688274  65.85806906
##  [246]  65.90839135  65.94243193  65.98260843  65.99952011  66.11927084
##  [251]  66.13403519  66.15713891  66.25670311  66.30658974  66.41428051
##  [256]  67.42185057  67.70528732  67.83011078  67.83210511  68.02881397
##  [261]  68.09006292  68.12437255  68.33757667  68.33934925  68.46572743
##  [266]  68.54507487  68.78803048  69.16632949  69.18736511  69.35294107
##  [271]  69.36596579  69.61018826  69.95066635  70.00865342  70.04161421
##  [276]  70.04861544  70.18446816  70.34356716  70.61387890  70.67828451
##  [281]  70.73365181  70.94018770  70.94613518  71.09669104  71.46030486
##  [286]  71.57177624  71.81074627  71.96401200  72.16749200  72.16879175
##  [291]  72.34568263  72.52957574  73.00201553  73.04891834  73.09992525
##  [296]  73.10287920  73.15307754  73.59681587  73.85448259  74.49678629
##  [301]  74.66620861  75.29868637  75.39986469  75.57194652  75.70705565
##  [306]  75.93171964  75.93956913  75.94226009  76.20820912  76.64730499
##  [311]  76.79327364  76.99722603  77.01853589  77.06035361  77.19118624
##  [316]  77.59608842  77.60867049  77.63140706  77.69774100  77.72083953
##  [321]  77.84166053  78.05453426  78.23458443  78.32463472  78.42498360
##  [326]  78.48060920  78.54280824  78.55822842  78.59450172  78.83705599
##  [331]  79.05798484  79.15147911  79.17427808  79.18226626  79.23428368
##  [336]  79.26773366  79.44119774  79.45545316  79.48650255  79.69816862
##  [341]  79.77831785  79.96812265  80.07014859  80.12405924  80.44478963
##  [346]  80.52190580  80.67913388  81.29653636  81.31692224  81.36773747
##  [351]  81.42612936  81.66243970  81.71610990  81.75803886  81.80088764
##  [356]  81.80414574  81.81619913  81.91376211  82.00257996  82.01723878
##  [361]  82.02314677  82.10600428  82.20737696  82.47646913  82.55101143
##  [366]  82.76349312  82.78741085  82.84606146  83.08508479  83.16704397
##  [371]  83.18728871  83.21266510  83.27217175  83.43982803  83.53876419
##  [376]  83.74266282  83.77279952  83.92952265  84.21198952  84.29776668
##  [381]  84.32123791  84.32629667  84.39326695  84.51602589  84.55934677
##  [386]  84.61964525  84.71205651  84.73576229  84.77526660  84.79109488
##  [391]  84.86661072  84.93956592  85.10591176  85.62835586  85.65191192
##  [396]  85.66874127  85.75332475  85.85891879  85.97629824  85.99130404
##  [401]  86.03826016  86.05882522  86.07249293  86.79312555  86.81119190
##  [406]  87.13377028  87.17608029  87.22457133  87.24985535  87.27659671
##  [411]  87.31097349  87.41285465  87.50662577  87.54258030  87.84293312
##  [416]  87.92820917  88.08832220  88.40627464  88.56713174  88.65946156
##  [421]  88.86692455  89.06540697  89.07482247  89.38287462  89.41334996
##  [426]  89.62643730  89.65363880  89.79291696  89.81074668  89.86025254
##  [431]  89.93555229  90.07469468  90.24248077  90.24891691  90.31666358
##  [436]  90.38933117  90.40431113  90.42588281  90.58830433  90.78737290
##  [441]  91.07908949  91.18837096  91.53622150  91.64151269  92.02809805
##  [446]  92.31500856  92.72947332  93.23052016  93.24559579  93.35651724
##  [451]  93.46774053  93.81542355  93.87249371  93.99642789  94.08502737
##  [456]  94.13888128  94.69844180  94.72100771  94.91194969  95.08999052
##  [461]  95.50639492  95.58302652  95.59487419  95.69807049  95.98088177
##  [466]  96.02714914  96.10269670  96.30220828  96.36550187  96.61152958
##  [471]  96.86106542  97.02028269  97.03593614  97.09802709  97.16818461
##  [476]  97.26250210  97.37935880  97.53768225  97.67885500  97.68142953
##  [481]  98.03445580  98.21340765  98.33824214  98.39591342  98.40112863
##  [486]  98.41301281  98.44005416  98.44393375  98.46340099  98.55923323
##  [491]  98.83598475  98.85111389  98.90342691  98.95410962  99.04110814
##  [496]  99.13895389  99.39303476  99.46330902  99.71750317  99.75088638
##  [501]  99.94898030 100.81277326 100.89942073 100.93730855 100.97484228
##  [506] 101.11553983 101.13170354 101.17150126 101.21988583 101.47183716
##  [511] 101.55112381 101.73730469 101.89998830 102.06942385 102.22336486
##  [516] 102.31807191 102.32581184 102.69107405 102.82738605 102.86304012
##  [521] 103.19317408 103.30351513 103.47723907 103.65978883 103.85723620
##  [526] 104.14774456 104.36173842 104.46736332 104.62923236 104.80619603
##  [531] 104.86558098 104.91114693 104.93517972 105.09917229 105.30529197
##  [536] 105.65146808 105.78516882 105.96756087 105.98004444 106.26922851
##  [541] 106.56394370 106.66621267 106.77145202 106.84781854 106.97553698
##  [546] 107.09401423 107.19671441 107.36548184 107.40839776 107.83852306
##  [551] 107.94153107 108.23996494 108.31089923 108.51762850 108.64874902
##  [556] 108.66072694 108.99692271 109.18819463 109.24629800 109.42632364
##  [561] 109.61227986 109.65398175 110.03859877 110.14408890 110.31526330
##  [566] 110.37948520 110.45208250 110.50808438 110.51468167 110.55379452
##  [571] 110.62864338 110.64701215 110.78243793 111.13677339 111.27428778
##  [576] 111.33979785 111.38383521 111.41446603 111.62625763 111.81662963
##  [581] 112.07470199 112.18447423 112.23485634 112.43790039 112.45131058
##  [586] 112.78740072 112.85793197 112.90766390 113.09603313 113.15130638
##  [591] 113.19488345 113.28047105 113.32035266 113.34032055 113.71074582
##  [596] 113.82416540 114.06228061 114.18348694 114.25666907 114.54937442
##  [601] 114.72725633 114.78007869 115.25546238 115.34631566 115.42863177
##  [606] 115.65783948 115.71349040 115.86152886 115.99356887 116.13460992
##  [611] 116.13774856 116.24377974 116.37550706 116.54382426 116.69300999
##  [616] 116.91947958 117.00578218 117.13959392 117.61330506 117.62719794
##  [621] 118.10436143 118.35949933 118.62361693 118.72668903 118.84041640
##  [626] 118.85363636 119.04611063 119.22705287 119.24338053 119.48971504
##  [631] 119.51390559 119.54994457 119.62866408 119.68486560 119.75779077
##  [636] 120.01808643 120.27003020 120.30874654 120.51386629 120.76492965
##  [641] 120.81490912 120.87016586 120.96877029 121.03686231 121.27565469
##  [646] 121.41233065 121.54160255 121.62145627 122.01209322 122.15609143
##  [651] 122.56331391 122.62827021 122.71590665 122.80886720 122.94811033
##  [656] 123.39148560 123.44329828 123.65725515 123.74467110 123.88702210
##  [661] 124.03605826 124.14892624 124.57951279 124.74120783 124.76658564
##  [666] 124.79107957 124.90168675 124.95317984 125.20474454 125.26883443
##  [671] 125.29096323 125.33236787 125.35899284 125.45593482 125.54565517
##  [676] 125.57982346 125.86167111 125.90248343 126.05272627 126.05893332
##  [681] 126.08986042 126.41241372 126.53249342 126.64484962 126.95358403
##  [686] 127.08039056 127.11739129 127.24163623 127.44111874 127.59770740
##  [691] 127.73967376 128.03053495 128.13723814 128.15873322 128.39782055
##  [696] 128.40526295 128.42852151 128.55947237 129.40111631 129.52047336
##  [701] 129.61583113 129.64140273 129.74786735 129.75813305 129.88932805
##  [706] 130.22745607 130.44150845 130.60227534 130.81171468 130.96513384
##  [711] 131.17390109 131.18406184 131.39611236 131.46691539 131.67179455
##  [716] 131.78099276 132.17500176 132.20620619 132.22187856 132.40894452
##  [721] 132.65830968 132.68700994 132.69371264 132.76138181 132.98820692
##  [726] 133.01595988 133.04933429 133.14617264 133.29738410 133.36493659
##  [731] 133.55952177 133.56401236 133.58505948 133.88456724 134.21088496
##  [736] 134.56586684 134.68288481 134.79108481 134.81145345 135.38441590
##  [741] 135.54327616 135.57869830 135.64471381 135.83004169 136.14035118
##  [746] 136.19276892 136.21377136 136.26708232 136.29087501 136.32046770
##  [751] 136.53109686 136.67577101 136.67905179 136.78453288 137.06950642
##  [756] 137.07553713 137.09431034 137.18428079 137.22118642 137.29196144
##  [761] 137.61312197 137.73042439 137.74115849 137.78907540 137.82455370
##  [766] 137.85068541 138.23712856 138.34219672 138.37075271 139.26650163
##  [771] 139.28138023 139.31711921 139.59446358 139.61747686 139.67497163
##  [776] 139.80042788 139.86461552 140.29128484 140.31741324 140.64130544
##  [781] 140.78511634 141.18948778 141.25111884 141.27469559 141.54260549
##  [786] 141.58486790 141.69395288 141.72369515 141.90944961 141.93450603
##  [791] 142.06695095 142.74452052 143.10411030 143.20225391 143.37542982
##  [796] 143.47375225 143.60234925 144.21382145 144.22239604 144.23460730
##  [801] 144.33846460 144.34208453 144.34829939 144.51988810 144.64629498
##  [806] 145.01930952 145.04528192 145.14403643 145.59881155 145.85714430
##  [811] 146.05323738 146.06083510 146.21465734 146.27606310 146.32847054
##  [816] 146.58906076 146.67223643 146.69512268 147.54594832 147.57601168
##  [821] 147.70322782 147.73932182 147.89724477 147.95705974 147.99145653
##  [826] 148.05588708 148.42831703 148.79150434 149.01767616 149.34961674
##  [831] 149.37223517 149.65667487 149.66414684 149.76659371 150.02229981
##  [836] 150.33963287 150.36983487 150.39156881 150.39837961 151.18338045
##  [841] 151.24637129 151.40839885 151.42853604 151.58450581 151.73606100
##  [846] 151.99618026 152.55223329 152.63137781 152.76725961 153.10121653
##  [851] 153.12787266 153.15830184 153.25974905 153.29396670 153.31881978
##  [856] 153.75741193 153.89462962 154.03926551 154.14782627 154.32756997
##  [861] 154.66255042 154.73149209 154.99238361 155.08897515 155.10043589
##  [866] 155.31815079 155.46546909 155.87393524 156.11366915 156.39768070
##  [871] 156.44341137 156.50483626 156.56115701 157.50030241 157.75523729
##  [876] 157.76098120 157.76741590 157.78987423 157.94499424 157.97614951
##  [881] 157.99268036 158.19837525 158.63531406 158.67381249 158.77510367
##  [886] 158.80845447 158.81253634 159.02051018 159.08757749 159.20765628
##  [891] 159.25499001 159.88933843 160.05893452 160.10039479 160.28459417
##  [896] 160.77568881 160.80629190 160.88130280 161.35141951 161.47580236
##  [901] 161.65287285 161.77229393 161.92011423 161.99843432 161.99911798
##  [906] 162.22232293 162.42455639 162.77724291 162.81845628 163.08575260
##  [911] 163.55730007 163.68421330 163.85906882 164.17628321 164.22433254
##  [916] 164.34432952 164.36170155 164.48041528 164.48052662 164.69213597
##  [921] 164.70632806 164.78187322 164.92505411 165.05135387 165.83826319
##  [926] 165.90890477 166.23705613 166.35791194 166.47823822 166.88912329
##  [931] 167.25470902 168.39769766 169.38621629 169.42444890 169.51375596
##  [936] 169.78595597 170.21720101 170.27228110 171.31824247 171.46063907
##  [941] 172.15402788 173.01297609 173.53761549 173.64683953 174.55013553
##  [946] 174.59445413 174.81490594 175.12723195 175.92575649 176.12931720
##  [951] 176.30304223 176.98506493 176.99908030 177.16088972 177.33736369
##  [956] 177.74727930 178.95744228 180.25570214 180.97093517 181.54458683
##  [961] 182.86072495 183.92153640 184.71752457 184.88603695 186.86727140
##  [966] 187.20081912 187.58728096 189.00548763 189.26951134 193.89127767
##  [971] 194.53900175 195.53953888 199.82172261 200.60408866 201.32352362
##  [976] 202.76175928 203.08370797 203.41048025 204.26100961 205.72606564
##  [981] 206.74828192 206.88835518 207.75385005 207.92193209 208.46598063
##  [986] 209.30720313 209.67933805 210.98881244 211.02598315 215.00884455
##  [991] 219.64564735 219.95774326 220.53732134 221.49551593 224.15813357
##  [996] 232.22439961 235.00377654 235.03183115 250.64528733 277.05701388
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h3&gt; Dados (Terceiro tipo) &lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;## 
## Tabela de frequ√™ncia 
## Tipo de vari√°vel: continuous
## 
##                Classes  Fi     PM   Fr Fac1 Fac2 Fp Fac1p Fac2p
## 1  -62.31 |---  -38.91   2 -50.61 0.00    2 1000  0   0.2 100.0
## 2  -38.91 |---  -15.51   7 -27.21 0.01    9  998  1   0.9  99.8
## 3    -15.51 |---  7.89  21  -3.81 0.02   30  991  2   3.0  99.1
## 4     7.89 |---  31.29  59  19.59 0.06   89  970  6   8.9  97.0
## 5    31.29 |---  54.69  86  42.99 0.09  175  911  9  17.5  91.1
## 6    54.69 |---  78.09 147  66.39 0.15  322  825 15  32.2  82.5
## 7   78.09 |---  101.49 188  89.79 0.19  510  678 19  51.0  67.8
## 8  101.49 |---  124.89 156 113.19 0.16  666  490 16  66.6  49.0
## 9  124.89 |---  148.29 160 136.59 0.16  826  334 16  82.6  33.4
## 10 148.29 |---  171.69 114 159.99 0.11  940  174 11  94.0  17.4
## 11 171.69 |---  195.09  31 183.39 0.03  971   60  3  97.1   6.0
## 12 195.09 |---  218.49  19 206.79 0.02  990   29  2  99.0   2.9
## 13 218.49 |---  241.89   8 230.19 0.01  998   10  1  99.8   1.0
## 14 241.89 |---  265.29   1 253.59 0.00  999    2  0  99.9   0.2
## 15 265.29 |---  288.69   1 276.99 0.00 1000    1  0 100.0   0.1
## 
##  ============================================== 
## Classes: Agrupamento de classes 
## Fi: Frequ√™ncia absoluta 
## PM: Ponto m√©dio 
## Fr: Frequ√™ncia relativa 
## Fac1: Frequ√™ncia acumulada (abaixo de) 
## Fac2: Frequ√™ncia acumulada (acima de) 
## Fp: Frequ√™ncia percentual 
## Fac1p: Frequ√™ncia acumulada percentual (abaixo de) 
## Fac2p: Frequ√™ncia acumulada percentual (acima de)
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h3&gt; Dados (Quarto tipo) &lt;/h3&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s01/index_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;coleta-dados-brutos&#34;&gt;Coleta (Dados brutos)&lt;/h2&gt;
&lt;p&gt;Dados elaborados sobre o n√∫mero de erros encontrados em 20 conjunto de caracteres monitorado em um canal de comunica√ß√£o&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;4&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;dados-em-rol-ou-elaborados&#34;&gt;Dados em rol ou elaborados&lt;/h2&gt;
&lt;p&gt;Dados elaborados sobre o n√∫mero de erros encontrados em 20 conjunto de caracteres monitorado em um canal de comunica√ß√£o&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;section&gt;
&lt;h2&gt; Distribui√ß√£o de frequ√™ncia &lt;/h2&gt;
&lt;h3&gt;Frequ√™ncia absoluta&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;N√∫mero de erros &lt;code&gt;\((x_i)\)&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Frequ√™ncia simples ($f_i$)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;4&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Total&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h3&gt;Frequ√™ncia relativa&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;N√∫mero de erros &lt;code&gt;\((x_i)\)&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(f_i\)&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(f_{r_i}\)&lt;/code&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(3\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(3 / 20 = 0,15\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(1\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(7\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(7 / 20 = 0,35\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(2\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(4\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(4 / 20 = 0,20\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(3\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(5\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(5 / 20 = 0,25\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(4\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(1\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(1 / 20 = 0,05\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h3&gt;Frequ√™ncia percentual&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;N√∫mero de erros &lt;code&gt;\((x_i)\)&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(f_i\)&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(f_{r_i}\)&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(f_{\%_i}\)&lt;/code&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(3\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,15\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,15 \times 100 = 15\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(1\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(7\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,35\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,35 \times 100 = 35\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(2\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(4\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,20\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,20 \times 100 = 20\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(3\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(5\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,25\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,25 \times 100 = 25\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(4\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(1\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,05\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,05 \times 100 = 5\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Total&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(20\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(1\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(100\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h3&gt;Tabela completa&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;N√∫mero de erros &lt;code&gt;\((x_i)\)&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(f_i\)&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(f_{r_i}\)&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(f_{\%_i}\)&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(f_{ac\downarrow_i}\)&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(f_{ac\uparrow_i}\)&lt;/code&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(3\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,15\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(15\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(3\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(20\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(1\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(7\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,35\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(35\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(10\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(17\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(2\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(4\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,20\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(35\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(14\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(10\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(3\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(5\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,25\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(25\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(19\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(6\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(4\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(1\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(0,05\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(5\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(20\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(1\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Total&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(20\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(1\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;\(100\)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;-&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;section&gt;
&lt;h2&gt;Tabela para V. cont√≠nua (Algoritmo) &lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Classe&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;$ F_i $&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$ Li_{1a} \vdash  Ls_{1a} $&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$ f_1 $&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$ Li_{2a} \vdash  Ls_{2a} $&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$ f_2 $&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$ \vdots $&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$ \vdots $&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$ Li_{ka}  \vdash Ls_{ka} $&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$ f_k $&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;pre&gt; 1¬∫ Passo - N√∫mero de classes &lt;/pre&gt;
&lt;p&gt;&lt;code&gt;\begin{align} k &amp;amp; \approx \left\{\begin{array}{ll} \sqrt{\textrm{n√∫mero de elementos}}, &amp;amp; n \leq 100 \\ 5log_{10}(\textrm{n√∫mero de elementos}), &amp;amp; n &amp;gt; 100 \end{array}\right. \end{align}&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt; 2¬∫ Passo - Amplitude total &lt;/pre&gt;
&lt;p&gt;&lt;code&gt;\begin{align} A_t &amp;amp; = \max_i(X_i) - \min_i(X_i), \end{align}&lt;/code&gt;
para &lt;code&gt;\(i \in \mathbb{N}^{+}\)&lt;/code&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;pre&gt; 3¬∫ Passo - Amplitude de classe &lt;/pre&gt;
&lt;p&gt;&lt;code&gt;\begin{align} c &amp;amp; = \left\{\begin{array}{ll} \frac{A_t}{k - 1}, &amp;amp; \textrm{Amostra} \\ \frac{A_t}{k}, &amp;amp; \textrm{Popula√ß√£o}. \end{array}\right. \end{align}&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt; 4¬∫ Passo - LI da primeira classe &lt;/pre&gt;
&lt;p&gt;&lt;code&gt;\begin{align} Li_{1a} &amp;amp; = \left\{\begin{array}{ll} X_{(1)} - c / 2, &amp;amp; \textrm{Amostra} \\ X_{(1)}, &amp;amp; \textrm{Popula√ß√£o}. \end{array}\right. \end{align}&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt; Em resumo... &lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Calcular &lt;code&gt;\(k\)&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;Calcular &lt;code&gt;\(A_t\)&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;Calcular &lt;code&gt;\(c\)&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;Calcular &lt;code&gt;\(Li_{1a}\)&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;Determinar as classes,&lt;/li&gt;
&lt;li&gt;Calcular o ponto m√©dio, e&lt;/li&gt;
&lt;li&gt;Calcular as frequ√™ncias como apresentadas no in√≠cio dessa se√ß√£o.&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h2 id=&#34;gr√°ficos&#34;&gt;Gr√°ficos&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Gr√°fico de Haste ou bast√£o&lt;/li&gt;
&lt;li&gt;Gr√°fico de barras&lt;/li&gt;
&lt;li&gt;Gr√°fico de Pizza&lt;/li&gt;
&lt;li&gt;Histograma de frequ√™ncias&lt;/li&gt;
&lt;li&gt;Ogivas&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;section&gt;
&lt;h2&gt; Uso do pacote &lt;code&gt;leem&lt;/code&gt; &lt;/h2&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/profmat-est/s01/leem_hu7b1031bcd7f556bee541df85c0c5375e_34750_3761f4b815fffe33ceb7dbc21c169f83.webp 400w,
               /slides/profmat-est/s01/leem_hu7b1031bcd7f556bee541df85c0c5375e_34750_3705f9ee693abc73a6049df605c75df5.webp 760w,
               /slides/profmat-est/s01/leem_hu7b1031bcd7f556bee541df85c0c5375e_34750_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/profmat-est/s01/leem_hu7b1031bcd7f556bee541df85c0c5375e_34750_3761f4b815fffe33ceb7dbc21c169f83.webp&#34;
               width=&#34;150&#34;
               height=&#34;150&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;Instala√ß√£o&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&amp;quot;devtools&amp;quot;)
devtools::install_github(&amp;quot;bendeivide/leem&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Anexando e carregando&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(leem)
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2&gt; Fun√ß√µes &lt;/h2&gt;
&lt;!-- | Fun√ß√£o     | Finalidade                  | --&gt;
&lt;!-- |:-----------|:----------------------------| --&gt;
&lt;!-- | new_leem() | Construtor da classe *leem* | --&gt;
&lt;!-- | tabfreq()  | Disatribui√ß√£o de frequ√™ncia | --&gt;
&lt;!-- | hist()     | Hitograma de frequ√™ncia     | --&gt;
&lt;!-- | ogive()    | Ogivas                      | --&gt;
&lt;!-- | polyfreq() | Pol√≠gono de frequ√™ncias     | --&gt;
&lt;style type=&#34;text/css&#34;&gt;
.tg  {border-collapse:collapse;border-color:#93a1a1;border-spacing:0;}
.tg td{background-color:#fdf6e3;border-bottom-width:1px;border-color:#93a1a1;border-style:solid;border-top-width:1px;
  border-width:0px;color:#002b36;font-family:Arial, sans-serif;font-size:14px;overflow:hidden;padding:10px 5px;
  word-break:normal;}
.tg th{background-color:#657b83;border-bottom-width:1px;border-color:#93a1a1;border-style:solid;border-top-width:1px;
  border-width:0px;color:#fdf6e3;font-family:Arial, sans-serif;font-size:14px;font-weight:normal;overflow:hidden;
  padding:10px 5px;word-break:normal;}
.tg .tg-5lw0{background-color:#eee8d5;border-color:#ffffff;
  font-family:&#34;Lucida Sans Unicode&#34;, &#34;Lucida Grande&#34;, sans-serif !important;font-size:28px;text-align:left;
  vertical-align:middle}
.tg .tg-xzvq{border-color:#ffffff;font-family:&#34;Lucida Sans Unicode&#34;, &#34;Lucida Grande&#34;, sans-serif !important;font-size:28px;
  text-align:left;vertical-align:middle}
.tg .tg-vqs5{border-color:#ffffff;font-family:&#34;Lucida Sans Unicode&#34;, &#34;Lucida Grande&#34;, sans-serif !important;font-size:28px;
  font-weight:bold;text-align:left;vertical-align:middle}
&lt;/style&gt;
&lt;table class=&#34;tg&#34;&gt;
&lt;thead&gt;
  &lt;tr&gt;
    &lt;th class=&#34;tg-vqs5&#34;&gt;Fun√ß√£o&lt;/th&gt;
    &lt;th class=&#34;tg-vqs5&#34;&gt;Finalidade&lt;/th&gt;
  &lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
  &lt;tr&gt;
    &lt;td class=&#34;tg-5lw0&#34;&gt; &lt;code&gt;base::sort()&lt;/code&gt;  &lt;/td&gt;
    &lt;td class=&#34;tg-5lw0&#34;&gt;Dados em rol &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class=&#34;tg-5lw0&#34;&gt; &lt;code&gt;new_leem()&lt;/code&gt;  &lt;/td&gt;
    &lt;td class=&#34;tg-5lw0&#34;&gt;Construtor da classe &lt;i&gt;leem&lt;/i&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class=&#34;tg-xzvq&#34;&gt; &lt;code&gt;tabfreq()&lt;/code&gt;  &lt;/td&gt;
    &lt;td class=&#34;tg-xzvq&#34;&gt;Distribui√ß√£o de frequ√™ncia&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class=&#34;tg-5lw0&#34;&gt; &lt;code&gt;hist()&lt;/code&gt; &lt;/td&gt;
    &lt;td class=&#34;tg-5lw0&#34;&gt;Hitograma de frequ√™ncia&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class=&#34;tg-xzvq&#34;&gt; &lt;code&gt;ogive()&lt;/code&gt; &lt;/td&gt;
    &lt;td class=&#34;tg-xzvq&#34;&gt;Ogivas&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class=&#34;tg-5lw0&#34;&gt; &lt;code&gt;polyfreq()&lt;/code&gt; &lt;/td&gt;
    &lt;td class=&#34;tg-5lw0&#34;&gt;Pol√≠gono de frequ√™ncias&lt;/td&gt;
  &lt;/tr&gt;
   &lt;tr&gt;
    &lt;td class=&#34;tg-5lw0&#34;&gt; &lt;code&gt;stickchart()&lt;/code&gt; &lt;/td&gt;
    &lt;td class=&#34;tg-5lw0&#34;&gt;Gr√°fico de hastes ou bast√£o&lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2&gt; Exemplo &lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Considere a distribui√ß√£o de frequ√™ncia do n√∫mero de erros encontrados em 20 conjunto de carac-  teres monitorado em um canal de comunica√ß√£o&lt;/li&gt;
&lt;/ol&gt;
&lt;style type=&#34;text/css&#34;&gt;
.tg  {border-collapse:collapse;border-color:#93a1a1;border-spacing:0;}
.tg td{background-color:#fdf6e3;border-bottom-width:1px;border-color:#93a1a1;border-style:solid;border-top-width:1px;
  border-width:0px;color:#002b36;font-family:Arial, sans-serif;font-size:14px;overflow:hidden;padding:10px 5px;
  word-break:normal;}
.tg th{background-color:#657b83;border-bottom-width:1px;border-color:#93a1a1;border-style:solid;border-top-width:1px;
  border-width:0px;color:#fdf6e3;font-family:Arial, sans-serif;font-size:14px;font-weight:normal;overflow:hidden;
  padding:10px 5px;word-break:normal;}
.tg .tg-j4p1{background-color:#eee8d5;color:#191919;font-family:&#34;Lucida Sans Unicode&#34;, &#34;Lucida Grande&#34;, sans-serif !important;
  font-size:28px;font-style:italic;font-weight:bold;text-align:right;vertical-align:middle}
.tg .tg-1bo1{background-color:#ffffff;border-color:#fdf6e3;
  font-family:&#34;Lucida Sans Unicode&#34;, &#34;Lucida Grande&#34;, sans-serif !important;font-size:28px;font-style:italic;
  font-weight:bold;text-align:right;vertical-align:middle}
&lt;/style&gt;
&lt;table class=&#34;tg&#34;&gt;
&lt;thead&gt;
  &lt;tr&gt;
    &lt;th class=&#34;tg-j4p1&#34;&gt;&lt;span style=&#34;font-weight:700&#34;&gt;3&lt;/span&gt;&lt;/th&gt;
    &lt;th class=&#34;tg-j4p1&#34;&gt;&lt;span style=&#34;font-weight:700&#34;&gt;0&lt;/span&gt;&lt;/th&gt;
    &lt;th class=&#34;tg-j4p1&#34;&gt;&lt;span style=&#34;font-weight:700&#34;&gt;3&lt;/span&gt;&lt;/th&gt;
    &lt;th class=&#34;tg-j4p1&#34;&gt;&lt;span style=&#34;font-weight:700&#34;&gt;4&lt;/span&gt;&lt;/th&gt;
    &lt;th class=&#34;tg-j4p1&#34;&gt;&lt;span style=&#34;font-weight:700&#34;&gt;3&lt;/span&gt;&lt;/th&gt;
    &lt;th class=&#34;tg-j4p1&#34;&gt;&lt;span style=&#34;font-weight:700&#34;&gt;1&lt;/span&gt;&lt;/th&gt;
    &lt;th class=&#34;tg-j4p1&#34;&gt;&lt;span style=&#34;font-weight:700&#34;&gt;2&lt;/span&gt;&lt;/th&gt;
    &lt;th class=&#34;tg-j4p1&#34;&gt;&lt;span style=&#34;font-weight:700&#34;&gt;3&lt;/span&gt;&lt;/th&gt;
    &lt;th class=&#34;tg-j4p1&#34;&gt;&lt;span style=&#34;font-weight:700&#34;&gt;0&lt;/span&gt;&lt;/th&gt;
    &lt;th class=&#34;tg-j4p1&#34;&gt;&lt;span style=&#34;font-weight:700&#34;&gt;0&lt;/span&gt;&lt;/th&gt;
  &lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
  &lt;tr&gt;
    &lt;td class=&#34;tg-1bo1&#34;&gt;1&lt;/td&gt;
    &lt;td class=&#34;tg-1bo1&#34;&gt;1&lt;/td&gt;
    &lt;td class=&#34;tg-1bo1&#34;&gt;2&lt;/td&gt;
    &lt;td class=&#34;tg-1bo1&#34;&gt;1&lt;/td&gt;
    &lt;td class=&#34;tg-1bo1&#34;&gt;1&lt;/td&gt;
    &lt;td class=&#34;tg-1bo1&#34;&gt;1&lt;/td&gt;
    &lt;td class=&#34;tg-1bo1&#34;&gt;3&lt;/td&gt;
    &lt;td class=&#34;tg-1bo1&#34;&gt;2&lt;/td&gt;
    &lt;td class=&#34;tg-1bo1&#34;&gt;2&lt;/td&gt;
    &lt;td class=&#34;tg-1bo1&#34;&gt;1&lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2&gt;Exemplo&lt;/h2&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Os dados representam a temperatura (¬∞F) do anel de veda√ß√£o de cada teste de acionamento ou lan√ßamento real do motor do foguete Challenger.&lt;/li&gt;
&lt;/ol&gt;
&lt;style type=&#34;text/css&#34;&gt;
.tg  {border-collapse:collapse;border-color:#93a1a1;border-spacing:0;}
.tg td{background-color:#fdf6e3;border-bottom-width:1px;border-color:#93a1a1;border-style:solid;border-top-width:1px;
  border-width:0px;color:#002b36;font-family:Arial, sans-serif;font-size:14px;overflow:hidden;padding:10px 5px;
  word-break:normal;}
.tg th{background-color:#657b83;border-bottom-width:1px;border-color:#93a1a1;border-style:solid;border-top-width:1px;
  border-width:0px;color:#fdf6e3;font-family:Arial, sans-serif;font-size:14px;font-weight:normal;overflow:hidden;
  padding:10px 5px;word-break:normal;}
.tg .tg-61io{background-color:#eee8d5;color:#191919;font-size:28px;font-style:italic;font-weight:bold;text-align:left;
  vertical-align:middle}
.tg .tg-8svn{background-color:#fdf6e3;color:#191919;font-size:28px;font-style:italic;font-weight:bold;text-align:left;
  vertical-align:middle}
.tg .tg-aete{background-color:#fdf6e3;color:#191919;font-family:&#34;Lucida Sans Unicode&#34;, &#34;Lucida Grande&#34;, sans-serif !important;
  font-size:28px;font-style:italic;font-weight:bold;text-align:left;vertical-align:middle}
.tg .tg-4ynv{background-color:#eee8d5;color:#191919;font-family:&#34;Lucida Sans Unicode&#34;, &#34;Lucida Grande&#34;, sans-serif !important;
  font-size:28px;font-style:italic;font-weight:bold;text-align:left;vertical-align:middle}
.tg .tg-uika{color:#191919;font-size:28px;font-style:italic;font-weight:bold;text-align:left;vertical-align:middle}
&lt;/style&gt;
&lt;table class=&#34;tg&#34;&gt;
&lt;thead&gt;
  &lt;tr&gt;
    &lt;th class=&#34;tg-aete&#34;&gt;84&lt;/th&gt;
    &lt;th class=&#34;tg-aete&#34;&gt;49&lt;/th&gt;
    &lt;th class=&#34;tg-aete&#34;&gt;61&lt;/th&gt;
    &lt;th class=&#34;tg-aete&#34;&gt;40&lt;/th&gt;
    &lt;th class=&#34;tg-aete&#34;&gt;83&lt;/th&gt;
    &lt;th class=&#34;tg-aete&#34;&gt;67&lt;/th&gt;
    &lt;th class=&#34;tg-aete&#34;&gt;45&lt;/th&gt;
    &lt;th class=&#34;tg-aete&#34;&gt;66&lt;/th&gt;
    &lt;th class=&#34;tg-aete&#34;&gt;70&lt;/th&gt;
    &lt;th class=&#34;tg-aete&#34;&gt;69&lt;/th&gt;
    &lt;th class=&#34;tg-8svn&#34;&gt;80&lt;/th&gt;
    &lt;th class=&#34;tg-8svn&#34;&gt;58&lt;/th&gt;
  &lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
  &lt;tr&gt;
    &lt;td class=&#34;tg-4ynv&#34;&gt;68&lt;/td&gt;
    &lt;td class=&#34;tg-4ynv&#34;&gt;60&lt;/td&gt;
    &lt;td class=&#34;tg-4ynv&#34;&gt;67&lt;/td&gt;
    &lt;td class=&#34;tg-4ynv&#34;&gt;72&lt;/td&gt;
    &lt;td class=&#34;tg-4ynv&#34;&gt;73&lt;/td&gt;
    &lt;td class=&#34;tg-4ynv&#34;&gt;70&lt;/td&gt;
    &lt;td class=&#34;tg-4ynv&#34;&gt;57&lt;/td&gt;
    &lt;td class=&#34;tg-4ynv&#34;&gt;63&lt;/td&gt;
    &lt;td class=&#34;tg-4ynv&#34;&gt;70&lt;/td&gt;
    &lt;td class=&#34;tg-4ynv&#34;&gt;78&lt;/td&gt;
    &lt;td class=&#34;tg-61io&#34;&gt;52&lt;/td&gt;
    &lt;td class=&#34;tg-61io&#34;&gt;67&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class=&#34;tg-uika&#34;&gt;53&lt;/td&gt;
    &lt;td class=&#34;tg-uika&#34;&gt;67&lt;/td&gt;
    &lt;td class=&#34;tg-uika&#34;&gt;75&lt;/td&gt;
    &lt;td class=&#34;tg-uika&#34;&gt;61&lt;/td&gt;
    &lt;td class=&#34;tg-uika&#34;&gt;70&lt;/td&gt;
    &lt;td class=&#34;tg-uika&#34;&gt;81&lt;/td&gt;
    &lt;td class=&#34;tg-uika&#34;&gt;76&lt;/td&gt;
    &lt;td class=&#34;tg-uika&#34;&gt;79&lt;/td&gt;
    &lt;td class=&#34;tg-uika&#34;&gt;75&lt;/td&gt;
    &lt;td class=&#34;tg-uika&#34;&gt;76&lt;/td&gt;
    &lt;td class=&#34;tg-uika&#34;&gt;58&lt;/td&gt;
    &lt;td class=&#34;tg-uika&#34;&gt;31&lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;style&gt;
.container{
  display: grid;
  text-align: center;
  grid-auto-flow: column;
}
.col {
  width: 500px;
  height: 400px;
  border: 3px solid #0094ff;
}
.col2 {
  width: 500px;
  height: 500px;
  border: 3px solid #0094ff;
}
.col3 {
  width: 500px;
  height: 450px;
  border: 3px solid #0094ff;
}

&lt;/style&gt;
&lt;section&gt;
&lt;h1&gt; &lt;code&gt;leem&lt;/code&gt; em a√ß√£o &lt;/h1&gt;
&lt;hr&gt;
&lt;h2&gt; Importando os dados &lt;/h2&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Numero de erros
d1 &amp;lt;- read.table(&amp;quot;https://raw.githubusercontent.com/bendeivide/book-epaec/master/dados/cap02/nerros.txt&amp;quot;, h = TRUE)
(d1 &amp;lt;- d1$erros)

# Temperatura do foguete Challenger
d2 &amp;lt;- read.table(&amp;quot;https://raw.githubusercontent.com/bendeivide/book-epaec/master/dados/cap02/challenger.txt&amp;quot;, h = TRUE)
(d2 &amp;lt;- d2$chal)

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;pre&gt;&lt;code&gt;##  [1] 3 1 0 1 3 2 4 1 3 1 1 1 2 3 3 2 0 2 0 1
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] 84 49 61 40 83 67 45 66 70 69 80 58 68 60 67 72 73 70 57 63 70 78 52 67 53
## [26] 67 75 61 70 81 76 79 75 76 58 31
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt; Dados em rol &lt;/h2&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;sort(d1)
sort(d2)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;pre&gt;&lt;code&gt;##  [1] 0 0 0 1 1 1 1 1 1 1 2 2 2 2 3 3 3 3 3 4
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] 31 40 45 49 52 53 57 58 58 60 61 61 63 66 67 67 67 67 68 69 70 70 70 70 72
## [26] 73 75 75 76 76 78 79 80 81 83 84
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt; Distribui√ß√£o de frequ√™ncias &lt;/h2&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col2&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;## Forma convencional:
aux &amp;lt;- new_leem(d1, 1)
tabd1 &amp;lt;- tabfreq(aux); tabd1
#-----
aux &amp;lt;- new_leem(d2, 2)
tabd2 &amp;lt;- tabfreq(aux); tabd2
## Usando o operador &#39;pipe&#39; nativo
d1 |&amp;gt; new_leem(variable = 1) |&amp;gt; tabfreq()
d2 |&amp;gt; new_leem(variable = 2) |&amp;gt; tabfreq()
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col2&#34;&gt;
&lt;pre&gt;&lt;code&gt;## 
## Tabela de frequ√™ncia 
## Tipo de vari√°vel: discrete
## 
##   Groups Fi   Fr Fac1 Fac2 Fp Fac1p Fac2p
## 1      0  3 0.15    3   20 15    15   100
## 2      1  7 0.35   10   17 35    50    85
## 3      2  4 0.20   14   10 20    70    50
## 4      3  5 0.25   19    6 25    95    30
## 5      4  1 0.05   20    1  5   100     5
## ============================================== 
## Groups: Agrupamento discretizado 
## Fi: Frequ√™ncia absoluta 
## Fr: Frequ√™ncia relativa 
## Fac1: Frequ√™ncia acumulada (abaixo de) 
## Fac2: Frequ√™ncia acumulada (acima de) 
## Fp: Frequ√™ncia percentual 
## Fac1p: Frequ√™ncia acumulada percentual (abaixo de) 
## Fac2p: Frequ√™ncia acumulada percentual (acima de)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Tabela de frequ√™ncia 
## Tipo de vari√°vel: continuous
## 
##           Classes Fi   PM   Fr Fac1 Fac2 Fp  Fac1p  Fac2p
## 1 25.7 |---  36.3  1 31.0 0.03    1   36  3   2.78 100.00
## 2 36.3 |---  46.9  2 41.6 0.06    3   35  6   8.33  97.22
## 3 46.9 |---  57.5  4 52.2 0.11    7   33 11  19.44  91.67
## 4 57.5 |---  68.1 12 62.8 0.33   19   29 33  52.78  80.56
## 5 68.1 |---  78.7 12 73.4 0.33   31   17 33  86.11  47.22
## 6 78.7 |---  89.3  5 84.0 0.14   36    5 14 100.00  13.89
## 
##  ============================================== 
## Classes: Agrupamento de classes 
## Fi: Frequ√™ncia absoluta 
## PM: Ponto m√©dio 
## Fr: Frequ√™ncia relativa 
## Fac1: Frequ√™ncia acumulada (abaixo de) 
## Fac2: Frequ√™ncia acumulada (acima de) 
## Fp: Frequ√™ncia percentual 
## Fac1p: Frequ√™ncia acumulada percentual (abaixo de) 
## Fac2p: Frequ√™ncia acumulada percentual (acima de)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt; Apresenta√ß√£o gr√°fica &lt;/h2&gt;
&lt;h3&gt;Gr√°fico de hastes ou bast√£o&lt;/h3&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Forma convencional:
aux1 &amp;lt;- new_leem(d1, variable = &amp;quot;discrete&amp;quot;)
aux2 &amp;lt;- tabfreq(aux1)
stickchart(aux2,
          lwd=3, # largura da linha
          pcol = &amp;quot;red&amp;quot;, # cor da linha
          bgcol = &amp;quot;lightgray&amp;quot;, # cor do fundo
          panel.first = grid(col = &amp;quot;white&amp;quot;) # inserindo grid e sua cor
         )
# Usando o pipe
d1 |&amp;gt;
  new_leem(variable = &amp;quot;discrete&amp;quot;) |&amp;gt;
  tabfreq() |&amp;gt;
  stickchart(lwd=3, # largura da linha
            pcol = &amp;quot;red&amp;quot;, # cor da linha
            bgcol = &amp;quot;lightgray&amp;quot;, # cor do fundo
            panel.first = grid(col = &amp;quot;white&amp;quot;) # inserindo grid e sua cor
            )
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s01/index_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;Gr√°fico de barras&lt;/h3&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Forma convencional:
aux1 &amp;lt;- new_leem(d1, variable = 1)
aux2 &amp;lt;- tabfreq(aux1)
barplot(aux2, barcol = heat.colors(5))
# Usando o pipe
d1 |&amp;gt;
  new_leem(variable = 1) |&amp;gt;
    tabfreq() |&amp;gt;
      barplot(barcol = heat.colors(5))
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s01/index_files/figure-html/unnamed-chunk-12-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;Histograma de frequ√™ncias&lt;/h3&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Usando o pipe:
d2 |&amp;gt;
  new_leem(variable = 2) |&amp;gt;
    tabfreq() |&amp;gt;
      hist(barcol = heat.colors(6))
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col&#34;&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s01/index_files/figure-html/unnamed-chunk-13-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;Pol√≠gono&lt;/h3&gt;
&lt;h4&gt;Dados discretos&lt;/h4&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Usando o pipe:
d1 |&amp;gt;
  new_leem(variable = 1) |&amp;gt;
    tabfreq() |&amp;gt;
      polyfreq(barcol = heat.colors(5),
           main = &amp;quot;Pol√≠gono de frequ√™ncias e
Histograma de frequ√™ncias&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s01/index_files/figure-html/unnamed-chunk-14-1.png&#34; width=&#34;672&#34; /&gt;
&lt;pre&gt;&lt;code&gt;## 
##  Note: The polygon graph has interpretation problems for the discrete quantitative variable
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;Pol√≠gono&lt;/h3&gt;
&lt;h4&gt;Dados cont√≠nuos&lt;/h4&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Usando o pipe:
d2 |&amp;gt;
  new_leem(variable = 2) |&amp;gt;
    tabfreq() |&amp;gt;
      polyfreq(barcol = heat.colors(5),
           main = &amp;quot;Pol√≠gono de frequ√™ncias e
Histograma de frequ√™ncias&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s01/index_files/figure-html/unnamed-chunk-15-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;Pol√≠gono&lt;/h3&gt;
&lt;h4&gt;Sem as barras&lt;/h4&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Usando o pipe:
d2 |&amp;gt;
  new_leem(variable = 2) |&amp;gt;
    tabfreq() |&amp;gt;
      polyfreq(bars = FALSE)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s01/index_files/figure-html/unnamed-chunk-16-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;Ogivas&lt;/h3&gt;
&lt;h4&gt;Dados discretos (Crescente)&lt;/h4&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Usando o pipe:
d1 |&amp;gt;
  new_leem(variable = 1) |&amp;gt;
    tabfreq() |&amp;gt;
      ogive(bars = TRUE, barcol = &amp;quot;red&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s01/index_files/figure-html/unnamed-chunk-17-1.png&#34; width=&#34;672&#34; /&gt;
&lt;pre&gt;&lt;code&gt;## 
##  Note: The ogive graph has interpretation problems for the discrete quantitative variable
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;Ogivas&lt;/h3&gt;
&lt;h4&gt;Dados discretos (Decrescente)&lt;/h4&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;d1 |&amp;gt;
  new_leem(variable = 1) |&amp;gt;
   tabfreq() |&amp;gt;
    ogive(decreasing = TRUE,
        bars = TRUE, barcol = &amp;quot;yellow&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s01/index_files/figure-html/unnamed-chunk-18-1.png&#34; width=&#34;672&#34; /&gt;
&lt;pre&gt;&lt;code&gt;## 
##  Note: The ogive graph has interpretation problems for the discrete quantitative variable
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;Ogivas&lt;/h3&gt;
&lt;h4&gt;Dados discretos (Ambos)&lt;/h4&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;d1 |&amp;gt;
  new_leem(variable = 1) |&amp;gt;
  tabfreq() |&amp;gt;
  ogive(both = TRUE, # ambas ogivas
        bars = TRUE, # barras
        barcol = c(&amp;quot;red&amp;quot;, &amp;quot;yellow&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s01/index_files/figure-html/unnamed-chunk-19-1.png&#34; width=&#34;672&#34; /&gt;
&lt;pre&gt;&lt;code&gt;## 
##  Note: The ogive graph has interpretation problems for the discrete quantitative variable
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;Ogivas&lt;/h3&gt;
&lt;h4&gt;Dados cont√≠nuos (Crescente)&lt;/h4&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;d2 |&amp;gt;
  new_leem(variable = 2) |&amp;gt;
  tabfreq() |&amp;gt;
  ogive(bars = TRUE, barcol = &amp;quot;red&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s01/index_files/figure-html/unnamed-chunk-20-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;Ogivas&lt;/h3&gt;
&lt;h4&gt;Dados cont√≠nuos (Decrescente)&lt;/h4&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;d2 |&amp;gt;
  new_leem(variable = 2) |&amp;gt;
  tabfreq() |&amp;gt;
  ogive(decreasing = TRUE,
        bars = TRUE, barcol = &amp;quot;yellow&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s01/index_files/figure-html/unnamed-chunk-21-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;Ogivas&lt;/h3&gt;
&lt;h4&gt;Dados cont√≠nuos (Ambos)&lt;/h4&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;d2 |&amp;gt;
  new_leem(variable = 2) |&amp;gt;
  tabfreq() |&amp;gt;
  ogive(both = TRUE, # ambas ogivas
        bars = TRUE, # barras
        barcol = c(&amp;quot;red&amp;quot;, &amp;quot;yellow&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s01/index_files/figure-html/unnamed-chunk-22-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;Ogivas&lt;/h3&gt;
&lt;h4&gt;Dados cont√≠nuos (Ambos + Histograma)&lt;/h4&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;d2 |&amp;gt;
  new_leem(variable = 2) |&amp;gt;
  tabfreq() |&amp;gt;
  ogive(both = TRUE, # ambas ogivas
        bars = TRUE, # barras
        barcol = c(&amp;quot;red&amp;quot;, &amp;quot;yellow&amp;quot;), # cor da barra das duas ogivas
        histogram = TRUE, # incluindo o histograma
        histcol = gray.colors(6), # cor do histograma
        bgcol = &amp;quot;purple&amp;quot;) # cor do fundo
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;col3&#34;&gt;
&lt;img src=&#34;http://bendeivide.github.io/slides/profmat-est/s01/index_files/figure-html/unnamed-chunk-23-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;h1 id=&#34;quest√µes&#34;&gt;Quest√µes?&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;D√∫vidas e Sugest√µes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/#contact&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Contato&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;cap02.png&#34;
  &gt;

&lt;!-- https://revealjs.com/transitions/ --&gt;
&lt;section data-transition=&#34;zoom&#34;&gt;
  &lt;h1&gt;Pr√≥ximas aulas...&lt;/h1&gt;
&lt;/section&gt;
&lt;section data-transition-speed=&#34;fast&#34;&gt;
&lt;a href=&#34;http://bendeivide.github.io/courses/epaec&#34; target=&#34;_blank&#34;&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/profmat-est/s01/ben_hu087225affb9399e037f09661c4d0adbd_219224_5c10d459c8ddc0416f506a4ad838a085.webp 400w,
               /slides/profmat-est/s01/ben_hu087225affb9399e037f09661c4d0adbd_219224_29ebba9a3e515b23ea411bffea18d2f1.webp 760w,
               /slides/profmat-est/s01/ben_hu087225affb9399e037f09661c4d0adbd_219224_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://bendeivide.github.io/slides/profmat-est/s01/ben_hu087225affb9399e037f09661c4d0adbd_219224_5c10d459c8ddc0416f506a4ad838a085.webp&#34;
               width=&#34;630&#34;
               height=&#34;480&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;
&lt;p&gt;&lt;a href=&#34;http://bendeivide.github.io/courses/epaec&#34; target=&#34;_blank&#34;&gt;bendeivide.github.io/courses/epaec&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;!-- &lt;section&gt; --&gt;
&lt;!--   &lt;h2&gt;Some Slide&lt;/h2&gt; --&gt;
&lt;!--   &lt;aside class=&#34;notes&#34;&gt; --&gt;
&lt;!--     Anota√ß√µes no Visualizador (Clique em S) üìù --&gt;
&lt;!--   &lt;/aside&gt; --&gt;
&lt;!-- &lt;/section&gt; --&gt;
&lt;!-- ## Anima√ß√£o --&gt;
&lt;!-- &lt;section data-auto-animate&gt; --&gt;
&lt;!--   &lt;h1&gt;Auto-Animate&lt;/h1&gt; --&gt;
&lt;!-- &lt;/section&gt; --&gt;
&lt;!-- &lt;section data-auto-animate&gt; --&gt;
&lt;!--   &lt;h1 style=&#34;margin-top: 100px; color: red;&#34;&gt;Auto-Animate&lt;/h1&gt; --&gt;
&lt;!-- &lt;/section&gt; --&gt;
</description>
    </item>
    
    <item>
      <title>Relat√≥rios e slides otimizados</title>
      <link>http://bendeivide.github.io/slides/smartalk/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://bendeivide.github.io/slides/smartalk/</guid>
      <description>&lt;h1 id=&#34;linha-de-pesquisa&#34;&gt;Linha de Pesquisa&lt;/h1&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-user-tie  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ben D√™ivide&lt;/a&gt; | 
  &lt;i class=&#34;fas fa-school  pr-1 fa-fw&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://www.ufsj.edu.br/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UFSJ&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;bio&#34;&gt;Bio&lt;/h2&gt;
&lt;p&gt;Estudo Estat√≠stica computacional, mais especificamente, o ambiente R. Estudos na √°rea de Estat√≠stica Experimental e Probabilidade, como tamb√©m no ensino da Estat√≠stica, Professor, Adjunto, C1. Atualmente trabalho na Universidade Federal de S√£o Jo√£o del-Rei (UFSJ), campus Alto Paraopeba, Ouro Branco/MG.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;linha-de-pesquisa-1&#34;&gt;Linha de Pesquisa&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Estat√≠stica computacional com √™nfase em desenvolvimento de pacotes estat√≠sticos&lt;/li&gt;
&lt;li&gt;Estat√≠stica Experimental&lt;/li&gt;
&lt;li&gt;Procedimentos de Compara√ß√µes M√∫ltiplas&lt;/li&gt;
&lt;li&gt;Ensino da estat√≠stica&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;contato&#34;&gt;Contato&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://bendeivide.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Profissional&lt;/a&gt; | &lt;a href=&#34;https://ufsj.edu.br/bendeivide&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Institucional&lt;/a&gt; | &lt;a href=&#34;https://bendeivide.github.io/#contact&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;E-mail&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
